;===========================================================
; ミッションテンプレート
;---------------------------------------------------------
; ・使い方
;   1. ミッションタイトルを決めます。
;   2. 必要なら可視条件(リストに表示する条件)を記述します。
;   3. ミッション報酬およびペナルティを記述します。
;   4. 解説文を記述します。
;   5. 必要ならミッション受領時の処理(キャラの追加など)を記述します。
;   6. ミッション達成条件を記述します
;   7. 必要ならミッション報告後の処理(経験や素質の変化など)を記述します。
;   8. XXを空いているミッション番号に置換します。
;   9. ファイルをフォルダに放り込みます。
; 
;   ね、簡単でしょう？
;===========================================================

;=================================================
; ミッションタイトル
;--------------------------------------------
; RESULTS = の後にミッションのタイトルを記述する
;=================================================
@MISSION_TITLE_XX
RESULTS = ミッションテンプレート

;=================================================
; ミッション可視条件
;--------------------------------------------
; 特定のキャラクターの存在や、他のミッション結果などを、
; このミッションの表示条件に使用したい時に編集する
;=================================================
@MISSION_VISIBLE_XX
; 不可視なら0、可視なら1を戻す
RETURN 1

;=================================================
; ミッション報酬
;--------------------------------------------
; ミッションの報酬を記述する
; P:1 報酬ポイント
; P:2 報酬貢献度
; P:3 失敗時の没収ポイント
; P:4 失敗時の没収貢献度
; P:5 延長期間
;=================================================
@MISSION_FEE_XX
P:1 = 150000
P:2 = 10
P:3 = P:1 * 2
P:4 = 0
P:5 = 0

;=================================================
; ミッション解説文
;--------------------------------------------
; ミッションの解説文を記述する
;=================================================
@MISSION_INFO_XX
CUSTOMDRAWLINE ‥
PRINTL ここに達成条件を記述します
CUSTOMDRAWLINE ‥

;=================================================
; ミッション達成条件詳細
;--------------------------------------------
; ミッションの解説文を記述する
; この関数は存在しなくても動作する
; ※達成条件確認の表示が行われなくなります
;=================================================
;@MISSION_COND_XX
;CUSTOMDRAWLINE ‥
;PRINTL ここに達成条件を記述します
;CUSTOMDRAWLINE ‥

;=================================================
; ミッション受領時処理
;--------------------------------------------
; キャラクターの追加など、
; ミッションの受領時に行う処理を記述する
;=================================================
@MISSION_RECEIVE_XX

;=================================================
; ミッション達成判定計算
;--------------------------------------------
; ミッションの成否判定を記述する
;=================================================
@MISSION_CALC_XX
; 失敗なら0, 成功なら1, 大成功なら2をRETURNで戻す
RETURN 1

;=================================================
; ミッション報告後処理
;--------------------------------------------
; 経験や素質の変化など、
; ミッション報告後に行う処理を記述する
;--------------------------------------------
; 引数
;  ARG 成否判定の結果(0:失敗, 1:成功, 2:大成功)
;=================================================
@MISSION_REPORT_XX(ARG)

;=================================================
; ミッション対象キャラクターNOの記述
;--------------------------------------------
; ミッション対象キャラクターのNOを戻す
; この関数は存在しなくても動作するが、
; 期日のあるミッションかつ関数が存在しないでは、
; 期日が取得できなくなる
;=================================================
;@MISSION_CHARA_NO_XX
;; ミッション対象キャラクターのNOを戻す
;RETURN -1
