;=================================================
; (必須) タイトル定義
;--------------------------------------------
; 備考
;  この関数が存在するかどうかで
;  該当番号のアルバイトが存在するかどうかを判定します。
;=================================================
@ARBEIT_TITLE_8
RESULTS = GLITTERIN'（アクセサリショップ店員）
RETURN 1

@ARBEIT_GET_TALENT_8
RESULTS = \@ TALENT:ギャル系 ? (すでに【ギャル系】持ちです) # \@

;=================================================
; (必須) 選択可能条件
;--------------------------------------------
; 引数
;  ARG キャラクターの登録番号
;--------------------------------------------
; 戻り値
;  0 = 選択不可, 1 = 選択可能
;--------------------------------------------
; 備考
;  アルバイトがリストで開示されるかどうかの条件です。
;  0を戻した場合は選択ができなくなります。
;  この関数の用途の想定はキャラクターのステータスや日時などによる限定です。
;=================================================
@ARBEIT_PERMISSION_8(ARG)
RETURN GETCHARA([[キャラ:赤羽真理]]) > 0

;=================================================
; (必須) 実行処理
;--------------------------------------------
; 引数
;  ARG キャラクターの登録番号
;--------------------------------------------
; 備考
;  毎週判定される実行時の個別処理です。
;  各個好き勝手出来るようにしていますが、
;  地の文の表示、報酬の加算などもここで行うのを想定しています。
;  この関数でTCVAR:(EXPと同じ番号)に数値を代入しておくことで
;  該当番号の経験に数値分の増加処理(とメッセージの表示)が行われます。
;=================================================
@ARBEIT_EXEC_8(ARG)
LOCAL = RAND:3

SIF IS_プライド低い(ARG)
	LOCAL *= 2
SIF TALENT:ARG:影響されやすい
	LOCAL *= 5
SIF IS_プライド高い(ARG)
	LOCAL /= 2
SIF LOCAL == 0
	LOCAL = 1

EXP:ARG:真理アルバイト += LOCAL
JUEL:ARG:習得 += 200 * LOCAL

PRINTFORML %NAME:ARG%はアクセサリショップの店員のアルバイトをしています……
IF LOCAL >= 2
	PRINTFORML どうやら一生懸命働く姿が評価されているようだ
ENDIF
IF EXP:ARG:真理アルバイト >= 40 && TALENT:ARG:ギャル系 == 0
	TALENT:ARG:ギャル系 = 1
	PRINTFORML このアルバイトを続けたおかげで%CALLNAME:ARG%は【ギャル系】になった
ENDIF
PRINTFORMW 習得の珠＋{200 * LOCAL}
RETURN 1

;=================================================
; (任意) アルバイト解説表示
;--------------------------------------------
; 備考
;  この関数にはアルバイトの解説を記述します。
;=================================================
@ARBEIT_INFO_8
PRINTFORMW ※このアルバイトは一定の経験を積むと【ギャル系】を取得できます
RETURN 1

;=================================================
; (任意) 雇用継続条件
;--------------------------------------------
; 引数
;  ARG キャラクターの登録番号
;--------------------------------------------
; 戻り値
;  0 = 可, 1 = 不可
;--------------------------------------------
; 備考
;  アルバイトの選択可能条件が不可になった時に、
;  この継続条件が定義され1を戻している場合、
;  メッセージと共にアルバイトを解雇されます。
;  特定の季節の間限定などを想定して作られています。
;=================================================
;@ARBEIT_RENEW_8
;RETURN 1

;=================================================
; (任意) 雇用時個別処理
;--------------------------------------------
; 引数
;  ARG キャラクターの登録番号
;--------------------------------------------
; 備考
;  アルバイト番号の代入などの共通処理はシステムで自動的に行われますが、
;  この関数では雇用時に個別の処理を行うことができます。
;  TALENTの付加などを行うなどの処理を想定しています。
;=================================================
;@ARBEIT_SIGNUP_8(ARG)
;RETURN 1

;=================================================
; (任意) 欠勤時個別処理
;--------------------------------------------
; 引数
;  ARG キャラクターの登録番号
;--------------------------------------------
; 備考
;  この関数では欠勤となった時に個別の処理を行うことができます。
;=================================================
;@ARBEIT_ABSENCE_8(ARG)
;RETURN 1

;=================================================
; (任意) 解雇時個別処理
;--------------------------------------------
; 引数
;  ARG   キャラクターの登録番号
;  ARG:1 解雇されたか？(1 = true, 0 = false)
;--------------------------------------------
; 備考
;  アルバイト番号の代入などの共通処理はシステムで自動的に行われますが、
;  この関数では解雇時に個別の処理を行うことができます。
;  雇用時に追加されたTALENTの削除などを行うなどの処理を想定しています。
;  ARG:1は雇用が継続できなくなった時の解雇かどうかの判定で使用できます。
;  ARG:1が0の場合は(プレイヤーによる)自発的な退職、
;  1の時は(システム側から)解雇された場合となります。
;=================================================
;@ARBEIT_RESIGN_8(ARG, ARG:1)
;RETURN
