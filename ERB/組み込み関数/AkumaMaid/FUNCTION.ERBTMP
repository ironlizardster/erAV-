;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
;主にシステムイベントで使う関数
;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
;-------------------------------------------------
;PARTNER関連は "PLAYERとTARGETに加えて、もう１キャラが参加するイベント" で追加キャラの番号を管理するために使う
;普段の値は CFLAG:優先順位 == 1 のキャラとなっており(優先順位計算の時に設定)、それ以外のキャラが喋る際にPARTNERで優先順位が１のキャラを引き合いに出せる
;（"TARGET以外のキャラが喋った場合"の追加キャラとしてTARGETを扱うため設定の手間を減らしている）
;
;※TARGET以外のキャラの参加が前提に考えられているイベントでの使い方※
;最初にCALL RESET_PARTNERを行う
;参加者がいた場合はCALL SET_PARTNER, {そのキャラの番号}でそのキャラをパートナーにする(続けて行う場合はCALL RESET_SET_PARTNER, {そのキャラの番号}で1行で書ける)
;そのキャラが喋ったりする場所の上下でCALL SWAP_PARTNER_TARGETを行ってTARGETとPARTNER()を交換する
;イベント終了時にCALL SET_PARTNERを忘れないように
;-------------------------------------------------
@PARTNER()
#FUNCTION
RETURNF TARGET:9

@SET_PARTNER, ARG
IF ARG == 0 && TARGET:8
	TARGET:9 = TARGET:8
	TARGET:8 = 0
ELSEIF ARG == 0 && TARGET > 0
	TARGET:9 = TARGET
ELSE
	TARGET:9 = ARG
ENDIF

;複数回やっても問題ない
@RESET_PARTNER
SIF TARGET:8 == 0
	TARGET:8 = TARGET:9
TARGET:9 = 0

;RESET_PARTNERとSET_PARTNERを続けて行う関数
@RESET_SET_PARTNER, ARG
CALL RESET_PARTNER
CALL SET_PARTNER, ARG

@SWAP_PARTNER_TARGET
SWAP TARGET, TARGET:9

;-------------------------------------------------
;簡単な文字列選択肢を横に並べる関数
;ARGSに並べる選択肢を "選択肢1/選択肢2/……/選択肢n" で記述し、
;もしも各選択肢を選んだRESULTSの冒頭に付く文字列があるならばARGS:1に入れる。
;選択肢の左側にテキストを出したい場合はARGS:2に文字列を入れる。

;例1）　カーディガン [橙色][灰色][赤]という選択肢を並べ、それぞれを選択すると カーディガン橙色,カーディガン灰色,カーディガン赤とさせたい場合は
;	CALL SELECTS, "橙色/灰色/赤", "カーディガン", "　カーディガン "
;とすればよい。ARGS:1に何も入れない場合は、選択肢と同じ文字列がRESULTSに返る
;例2) [ボサボサ][２][３]という選択肢を並べ、それぞれを選択すると ボサボサ,ボサボサ２,ボサボサ３とさせたい場合は
;	CALL SELECTS, "ボサボサ/２/３", "ボサボサ"
;-------------------------------------------------
@SELECTS, ARGS, ARGS:1, ARGS:2
#DIM LCOUNT
#DIMS MEMO_LASTSELECT
#DIM USE_LASTSELECT

CALL PRINT_STR, ARGS:2

VARSET LOCALS
SPLIT ARGS, "/", LOCALS

USE_LASTSELECT = 0
MEMO_LASTSELECT = 
FOR LCOUNT, 0, 100
	SELECTCASE LOCALS:LCOUNT
	CASE ""
		BREAK
	;ARGS:1と選択肢が同じ場合には
	CASE ARGS:1
		SIF USE_LASTSELECT
			PRINT  
		PRINTBUTTON @"[%LOCALS:LCOUNT%]", @"%LOCALS:LCOUNT%"
	CASEELSE
		;現在選択肢が直前選択肢を内包している場合
		IF MEMO_LASTSELECT != "" && STRCOUNT(LOCALS:LCOUNT, MEMO_LASTSELECT)
			PRINTBUTTON @"[%REPLACE(LOCALS:LCOUNT, MEMO_LASTSELECT, "")%]", @"%ARGS:1%%LOCALS:LCOUNT%"
			USE_LASTSELECT = 1
			CONTINUE
		ELSE
			SIF USE_LASTSELECT
				PRINT  
			PRINTBUTTON @"[%LOCALS:LCOUNT%]", @"%ARGS:1%%LOCALS:LCOUNT%"
		ENDIF
	ENDSELECT
	MEMO_LASTSELECT = %LOCALS:LCOUNT%
	USE_LASTSELECT = 0
NEXT

;-------------------------------------------------
;SELECTSの改行付き
;-------------------------------------------------
@SELECTSL, ARGS, ARGS:1, ARGS:2
CALL SELECTS, ARGS, ARGS:1, ARGS:2
PRINTL 

;-------------------------------------------------
;SELECTSLのARGS:1を右側に付ける版
;-------------------------------------------------
@SELECTSR, ARGS, ARGS:1, ARGS:2
#DIM LCOUNT

CALL PRINT_STR, ARGS:2

VARSET LOCALS
SPLIT ARGS, "/", LOCALS

FOR LCOUNT, 0, 100
	SIF LOCALS:LCOUNT == ""
		BREAK
	PRINTBUTTON @"[%LOCALS:LCOUNT%]", @"%LOCALS:LCOUNT%%ARGS:1%"
NEXT
PRINTL 

;-------------------------------------------------
;IF文中で"GOTO INPUT_LOOP"を使うとエラーが出るのを回避する。以下は使い方のテンプレ：
;	PRINTL [0] 
;	PRINTL [1] 
;	CALL INPUT_SELECT, 2
;	IF RESULT == 0
;	ELSEIF RESULT == 1
;	ENDIF
;便利な関数だが、RESULT == 0 && ABL:Ｖ感覚 >= 3 みたいな、条件も同時についているものには向かないので注意。
;また、[100] やめる　など、番号を追加したい時には　INPUT_SELECT, 2, 100　とすること。
;-------------------------------------------------
@INPUT_SELECT, ARG, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARG:7, ARG:8, ARG:9, ARG:10
INPUT

SELECTCASE RESULT
CASE IS < 0
	CLEARLINE 1
	RESTART
CASE 0 TO ARG - 1, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARG:7, ARG:8, ARG:9, ARG:10
	RETURN RESULT
CASEELSE
	CLEARLINE 1
	RESTART
ENDSELECT

;-------------------------------------------------
;半角でARG:1文字以上ARG文字以下の文字列入力をさせて、RESULTSでかえす
;-------------------------------------------------
@INPUTS_SELECT, ARG, ARG:1
INPUTS
SELECTCASE STRLENS(RESULTS)
CASE IS < ARG:1
	IF STRLENS(RESULTS) == 0
		PRINTL 文字を入力してください
	ELSE
		PRINTFORML %RESULTS%は短すぎます。半角で{ARG:1}～{ARG}文字に収めてください。
	ENDIF
	RESTART
CASE IS > ARG
	PRINTFORML %RESULTS%は長すぎます。半角で{ARG}文字までに収めてください。
	RESTART
CASEELSE

ENDSELECT

;-------------------------------------------------
;@INPUT_SELECTのONEINPUT版
;ARGには一桁の数字を入れること
;-------------------------------------------------
@ONEINPUT_SELECT, ARG, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARG:7, ARG:8, ARG:9, ARG:10
#DIM MEMO_LINECOUNT
MEMO_LINECOUNT = LINECOUNT

ONEINPUT
SELECTCASE RESULT
CASE 0 TO ARG - 1, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARG:7, ARG:8, ARG:9, ARG:10
	RETURN RESULT
ENDSELECT

CLEARLINE LINECOUNT - MEMO_LINECOUNT
RESTART

;-------------------------------------------------
;簡単な選択肢を１行で記述するための関数。ARGS:1は戻るとかやめるなどの選択肢用で自動的に[100]が割り振られる
;例えば、CALL PRINT_SELECT, "はい/いいえ", "なんだって？" とすると
;	PRINTL  [ 0] はい
;	PRINTL  [ 1] いいえ
;	PRINTL [100] なんだって？
;	CALL INPUT_SELECT, 2, 100
;と記述した事に等しい。選択肢の番号を飛ばしたりなどは出来ないので、あくまで単純な選択肢を作りたい場合に向く
;途中で選択肢では無い文字列を入れたい場合には 文字列_NOBUTTON とすればよい
;-------------------------------------------------
@PRINT_SELECT, ARGS, ARGS:1
#DIM LCOUNT
#DIM NUM_SELECT
#DIMS MEMOS, 10

VARSET LOCALS
SPLIT ARGS, "/", LOCALS

NUM_SELECT = 0
FOR LCOUNT, 0, 99
	SIF LOCALS:LCOUNT == ""
		BREAK

	VARSET MEMOS
	SPLIT LOCALS:LCOUNT, "_", MEMOS

	SELECTCASE MEMOS:1
	CASE "NOBUTTON"
		CALL PRINT_STRL, @"%MEMOS%"
	CASEELSE
		PRINTFORM  [{LCOUNT, 2}] 
		CALL PRINT_STRL, @"%MEMOS%"
	ENDSELECT
	;選択肢の数
	NUM_SELECT += 1
NEXT

SELECTCASE ARGS:1
CASE ""
	CALL INPUT_SELECT, NUM_SELECT
CASEELSE
	PRINTFORML [100] %ARGS:1%
	CALL INPUT_SELECT, NUM_SELECT, 100
ENDSELECT

RETURN RESULT

;-------------------------------------------------
;@PRINT_SELECTのHTML版
;		※要修正 (ぶっちゃけHTMLそのまま書いたほうが分かりやすいのでは？:thinking:)
;			文字列データを流用したい場合はちょっとなぁ
;			文字列途中で色々弄るの辞めて、無印と同じく末尾に一括記載でも良さそうだけども...
;			いや、意味ないか...多分頭良い人がちょっと捻れば行ける
;			(たとえばERH使ってButtonTextを取り出せるようにするとかね)
;			
;			私は好きにした、君らも好きにしろ
;
;コマンド一覧
;_NOBUTTON：ボタンではなくなります
;_太字				：太字になります
;_太字解除			：太字を解除します
;_斜体				：斜体になります
;_斜体解除			：斜体を解除します
;_下線				：アンダーラインを引きます
;_下線解除			：アンダーラインを解除します
;_取り消し			：取り消し線を引きます
;_選択不可			：ボタンを選択不可にします(NOBUTTONと異なり　[XX] 押せないボタン　みたいな表示が出来ます)
;_黄色：表示色を黄色に変更します
;_赤色：表示色を赤色に変更します
;_灰色：表示色を灰色に変更します
;-------------------------------------------------
@PRINT_SELECT_EX, ARGS, ARGS:1
#DIM ButtonCount
#DIM TagCount
#DIM NumSelect
#DIMS Memos, 100

#DIM IsBold
#DIM IsItalic
#DIM IsUnderLine
#DIM IsStrikethrough
;0でボタン 1で選択不可ボタン 2でテキスト
#DIM IsTextType
#DIMS ButtonText
#DIMS OutPutHTML
#DIMS NowColor

VARSET LOCALS
SPLIT ARGS, "/", LOCALS

NumSelect = 0
FOR ButtonCount, 0, 99
	SIF LOCALS:ButtonCount == ""
		BREAK

	;#region 初期化
		IsBold = 0
		IsItalic = 0
		IsUnderLine = 0
		IsStrikethrough = 0

		IsTextType = 0

		ButtonText = 
		OutPutHTML = 
		NowColor = 
	;#endregion

	VARSET Memos
	SPLIT LOCALS:ButtonCount, "_", Memos

	FOR TagCount, 0, 100
		SELECTCASE Memos:TagCount
		CASE "太字"
			OutPutHTML += "<b>"
		CASE "太字解除"
			OutPutHTML += "</b>"
		CASE "斜体"
			OutPutHTML += "<i>"
		CASE "斜体解除"
			OutPutHTML += "</i>"
		CASE "取り消し"
			OutPutHTML += "<s>"
		CASE "取り消し解除"
			OutPutHTML += "</s>"
		CASE "下線"
			OutPutHTML += "<u>"
		CASE "下線解除"
			OutPutHTML += "</u>"
		
		CASE "黄色"
			OutPutHTML += "<font color = 'Yellow'>"
		CASE "赤"
			OutPutHTML += "<font color = 'Red'>"
		CASE "灰色"
			OutPutHTML += "<font color = 'Gray'>"
		CASE "色変更解除"
			OutPutHTML += "</font>"


		CASE "選択不可"
			IsTextType = 1
		CASE "NOBUTTON"
			IsTextType = 2
		CASEELSE
			OutPutHTML += Memos:TagCount
			ButtonText += Memos:TagCount
		ENDSELECT
	NEXT

	IF IsTextType == 2
		HTML_PRINT @"<nonbutton>%OutPutHTML%</nonbutton>"
	ELSEIF IsTextType == 1
		HTML_PRINT @"<nonbutton>[{ButtonCount,2}]%OutPutHTML%</nonbutton>"
	ELSE 
		HTML_PRINT @"<button value = '{ButtonCount}'>[{ButtonCount,2}]%OutPutHTML%</button>"
	ENDIF
	;選択肢の数
	NumSelect += 1
NEXT

SELECTCASE ARGS:1
CASE ""
	CALL INPUT_SELECT, NumSelect
CASEELSE
	PRINTFORML  [99] %ARGS:1%
	CALL INPUT_SELECT, NumSelect, 99
ENDSELECT
;PRINTFORMW デバッグメッセージ！ RESULT = {RESULT}
RETURN RESULT


;-------------------------------------------------
;文字列の桁数を合わせる
;RJは右詰、LJは左詰め
;-------------------------------------------------
@TEXT_RJ(ARGS, ARG)
#FUNCTIONS
SELECTCASE STRLENS(ARGS)
CASE IS >= ARG
	RETURNF ARGS
CASEELSE
	LOCALS = %BL(ARG-STRLENS(ARGS) )%%ARGS%
ENDSELECT
RETURNF LOCALS

@TEXT_LJ(ARGS, ARG)
#FUNCTIONS
SELECTCASE STRLENS(ARGS)
CASE IS >= ARG
	RETURNF ARGS
CASEELSE
	LOCALS = %ARGS%%BL(ARG-STRLENS(ARGS) )%
ENDSELECT
RETURNF LOCALS

;-------------------------------------------------
;左端にARGSを出力させるDRAWLINE
;ARGSを 文字列Ａ/文字列Ｂ としておくと文字列Ａを文字列Ｂを返すスイッチにします
;-------------------------------------------------
@DRAWLINES, ARGS
#DIM LCOUNT
#DIMS BUTTONS

VARSET LOCALS
SPLIT ARGS, "/", LOCALS
BUTTONS = %LOCALS:1%

IF BUTTONS != ""
	IF TOINT(BUTTONS) != 0 || BUTTONS == "0"
		PRINTBUTTON LOCALS, TOINT(BUTTONS)
	ELSE
		PRINTBUTTON LOCALS, BUTTONS
	ENDIF
ELSE
	CALL PRINT_STR, @"%LOCALS%"
ENDIF
FOR LCOUNT, 0, NUM("折り返し文字数") - STRLENS(LOCALS)
	PRINTFORM -
NEXT
;自動改行
PRINTL 

@DRAWLINES_CENTER, ARGS
#DIM LCOUNT
FOR LCOUNT, 0, (NUM("折り返し文字数") - STRLENS(ARGS) )/2
	PRINTFORM -
NEXT
PRINTFORM %ARGS%
FOR LCOUNT, 0, (NUM("折り返し文字数") - STRLENS(ARGS) )/2
	PRINTFORM -
NEXT
;自動改行
PRINTL 

;-------------------------------------------------
;複数指定のSETBIT、CLEARBIT, INVERTBIT
;ただし、ARG:1～ARG:2までのbit全てと、ARG:3, ARG:4, …の単体のbitに作用する
;そして、0bitを操作できるのはARG:1のみである
;例1）LOCAL = SETBITS(LOCAL, 0, 5, 7)でLOCALの0～5bitと7bitがONになる
;例2）LOCAL = SETBITS(LOCAL, 1, 5, 0)だとLOCALの1～5bitがONになる。0bitは変化しない
;例3）LOCAL = SETBITS(LOCAL, 2)はSETBIT LOCAL, 2 と等しい
;-------------------------------------------------
@SETBITS(ARG, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARG:7)
#FUNCTION
FOR LOCAL, ARG:1, MAX(ARG:1, ARG:2)+1
	SETBIT ARG, LOCAL
NEXT
FOR LOCAL, 3, 8
	SIF ARG:LOCAL
		SETBIT ARG, ARG:LOCAL
NEXT
RETURNF ARG

@CLEARBITS(ARG, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARG:7)
#FUNCTION
FOR LOCAL, ARG:1, MAX(ARG:1, ARG:2)+1
	CLEARBIT ARG, LOCAL
NEXT
FOR LOCAL, 3, 8
	SIF ARG:LOCAL
		CLEARBIT ARG, ARG:LOCAL
NEXT
RETURNF ARG

@INVERTBITS(ARG, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARG:7)
#FUNCTION
FOR LOCAL, ARG:1, MAX(ARG:1, ARG:2)+1
	INVERTBIT ARG, LOCAL
NEXT
FOR LOCAL, 3, 8
	SIF ARG:LOCAL
		INVERTBIT ARG, ARG:LOCAL
NEXT
RETURNF ARG

;-------------------------------------------------
;複数指定のGETBIT
;ただし、ARG:1～ARG:2までのbit全てと、ARG:3, ARG:4, …の単体のbitに作用する
;そして、0bitを参照できるのはARG:1のみである
;例1）GETBITS(LOCAL, 0, 5, 7)でLOCALの0～5bitと7bitの和を返す
;例2）GETBITS(LOCAL, 1, 5, 0)orGETBITS(LOCAL, 1, 5)だとLOCALの1～5bitの和を返す
;具体的にはLOCAL = 2+8+32 ならGETBITS(LOCAL, 2, 4) = 8となる
;実例）GETBITS(LOCAL, 2)は大体GETBIT(LOCAL, 2) と等しい用途に用いることが出来る
;-------------------------------------------------
@GETBITS(ARG, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARG:7)
#FUNCTION
#DIM LCOUNT
VARSET LOCAL
FOR LCOUNT, ARG:1, MAX(ARG:1, ARG:2)+1
	SIF GETBIT(ARG, LCOUNT)
		LOCAL += POWER(2, LCOUNT)
NEXT
FOR LCOUNT, 3, 8
	SIF ARG:LCOUNT == 0
		CONTINUE
	SIF GETBIT(ARG, ARG:LCOUNT)
		LOCAL += POWER(2, ARG:LCOUNT)
NEXT
RETURNF LOCAL

;-------------------------------------------------
;複数指定のSTRCOUNT
;-------------------------------------------------
@STRCOUNTS(ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6, ARGS:7, ARGS:8, ARGS:9, ARGS:10, ARGS:11, ARGS:12, ARGS:13, ARGS:14)
#FUNCTION
#DIM LCOUNT

LOCAL = 0

FOR LCOUNT, 1, 15
	SIF ARGS:LCOUNT == ""
		BREAK
	LOCAL += STRCOUNT(ARGS, ARGS:LCOUNT)
NEXT
RETURNF LOCAL

;-------------------------------------------------
;文字列ARGSの、文字ARGS:2とARGS:3に挟まれた部分に文字列ARGS:1を挿入する。
;当然だがARGS:2とARGS:3が空文字ではならない。
;ARGS:2が複数登場する場合はバグります。注意。
;-------------------------------------------------
@INSERT_STR(ARGS, ARGS:1, ARGS:2, ARGS:3)
#FUNCTIONS
;左側の文字列
#DIMS LSTR
;右側の文字列
#DIMS RSTR
#DIM LCOUNT

VARSET LOCALS
SPLIT ARGS, ARGS:2, LOCALS
;ARGSにARGS:2が含まれていない場合は何もしない
SIF LOCALS:1 == ""
	RETURNF ARGS

LSTR = %LOCALS%%ARGS:2%
RSTR = %SUBSTRING(ARGS, STRLENS(LSTR), -1)%

SELECTCASE RSTR
CASE ARGS:3
CASEELSE
	VARSET LOCALS
	SPLIT RSTR, ARGS:3, LOCALS
	;RSTRをLOCALS:0を除いて再構築
	RSTR = %SUBSTRING(RSTR, STRLENS(LOCALS), -1)%
ENDSELECT

RETURNF @"%LSTR%%ARGS:1%%RSTR%"

;-------------------------------------------------
;ARGSから、文字ARGS:1とARGS:2に挟まれた部分を抜き出す
;ARGS:1やARGS:2で分割した際に、２分割になるものだけに使うと間違いがないだろう
;複数分割にされる場合には、文字列の中でARGS:1とARGS:2に挟まれた"一番左の文字列"を返す
;ちなみにARGS:2 == "" の場合にはARGS:1の右側だけを返し、
;ARGS:1 == "" の場合にはARGS:2の左側だけを返す
;-------------------------------------------------
@EXTSTR(ARGS, ARGS:1, ARGS:2)
#FUNCTIONS
#DIM LCOUNT

VARSET LOCALS
SPLIT ARGS, ARGS:1, LOCALS
IF LOCALS:1 != ""
	ARGS = %LOCALS:1%
	FOR LCOUNT, 2, 100
		SELECTCASE LOCALS:LCOUNT
		CASE ""
			BREAK
		CASEELSE
			ARGS = %ARGS%%ARGS:1%%LOCALS:LCOUNT%
		ENDSELECT
	NEXT
ELSEIF ARGS:2 == ""
	RETURNF ""
ELSE
	ARGS = %LOCALS%
ENDIF

VARSET LOCALS
SPLIT ARGS, ARGS:2, LOCALS

RETURNF LOCALS

;-------------------------------------------------
;EXTSTRの空白を無視する版
;-------------------------------------------------
@EXTSTR_BL(ARGS, ARGS:1, ARGS:2)
#FUNCTIONS

ARGS = %EXTSTR(ARGS, ARGS:1, ARGS:2)%
ARGS = %REPLACE(ARGS, " ", "")%
ARGS = %REPLACE(ARGS, "　", "")%
RETURNF ARGS

;-------------------------------------------------
;TOINTの空白を無視する版
;-------------------------------------------------
@TOINT_BL(ARGS)
#FUNCTION
#DIM LCOUNT

VARSET LOCALS
SPLIT ARGS, " ", LOCALS
ARGS = 
FOR LCOUNT, 0, 100
	ARGS += @"%LOCALS:LCOUNT%"
NEXT
RETURNF TOINT(ARGS)

;-------------------------------------------------
;文字列ARGSとARGS:1が70%以上一致しているかを返す関数
;主に類似写真の消去に使う
;-------------------------------------------------
@CHECK_HIGHMATCH(ARGS, ARGS:1)
#FUNCTION
#DIM LCOUNT
#DIMS TEXT_LONG
#DIMS TEXT_SHORT
#DIMS TEXT_CHECK

;文字列が長い方をARGSにする
SIF STRLENSU(ARGS) < STRLENSU(ARGS:1)
	SWAP ARGS, ARGS:1
TEXT_LONG = %ARGS%
TEXT_SHORT = %ARGS:1%

;短い方の文字列の長さが、長い方の70％無いなら終わり
SIF STRLENSU(TEXT_SHORT) < STRLENSU(TEXT_LONG)*7/10
	RETURNF 0

FOR LCOUNT, 0, (STRLENSU(TEXT_LONG)*3/10) + 1
	TEXT_CHECK = %SUBSTRINGU(TEXT_SHORT, LCOUNT, STRLENSU(TEXT_LONG)*7/10)%
	;検索文字列の書式はC#の正規表現の仕様に準じますとの事なのでESCAPEしておく
	SIF STRCOUNT(TEXT_LONG, ESCAPE(TEXT_CHECK) )
		RETURNF 1 + LCOUNT
NEXT
RETURNF 0

;-------------------------------------------------
;/で区切られた要素でなる文字列ARGS中にARGS:1, ARGS:2, …が計何個あるかを返す関数
;-------------------------------------------------
@NUM_STR(ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6, ARGS:7)
#FUNCTION
#DIM LCOUNT

VARSET LOCALS
;それぞれの要素に分解
SPLIT ARGS, "/", LOCALS

LOCAL = 0

;LOCALSはLOCALS:0～LOCALS:99まで
FOR LCOUNT, 0, 100
	SIF LOCALS:LCOUNT == ""
		RETURNF LOCAL

	SELECTCASE LOCALS:LCOUNT
	CASE ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6, ARGS:7
		LOCAL += 1
	ENDSELECT
NEXT

RETURNF LOCAL

;-------------------------------------------------
;/で区切られた数字の要素でなる文字列ARGS中の最大の数値を返す関数
;-------------------------------------------------
@MAX_STR(ARGS)
#FUNCTION
#DIM LCOUNT

VARSET LOCALS
;それぞれの要素に分解
SPLIT ARGS, "/", LOCALS

;左端の要素の数値を初期値とする
LOCAL = TOINT(LOCALS:0)

;LOCALSはLOCALS:0～LOCALS:99まで
FOR LCOUNT, 1, 100
	SIF LOCALS:LCOUNT == ""
		RETURNF LOCAL

	;文字列を数字化して比較
	SIF TOINT(LOCALS:LCOUNT) > LOCAL
		LOCAL = TOINT(LOCALS:LCOUNT)
NEXT

RETURNF LOCAL

;-------------------------------------------------
;/で区切られた数字の要素でなる文字列ARGS中の最小の数値を返す関数
;-------------------------------------------------
@MIN_STR(ARGS)
#FUNCTION
#DIM LCOUNT

VARSET LOCALS
;それぞれの要素に分解
SPLIT ARGS, "/", LOCALS

;左端の要素の数値を初期値とする
LOCAL = TOINT(LOCALS:0)

;LOCALSはLOCALS:0～LOCALS:99まで
FOR LCOUNT, 1, 100
	SIF LOCALS:LCOUNT == ""
		RETURNF LOCAL

	;文字列を数字化して比較
	SIF TOINT(LOCALS:LCOUNT) < LOCAL
		LOCAL = TOINT(LOCALS:LCOUNT)
NEXT

RETURNF LOCAL

;-------------------------------------------------
;/で区切られた数字の要素でなる文字列ARGS中の数値の総和を返す関数
;-------------------------------------------------
@SUM_STR(ARGS)
#FUNCTION
#DIM LCOUNT

VARSET LOCALS
;それぞれの要素に分解
SPLIT ARGS, "/", LOCALS

LOCAL = 0

;LOCALSはLOCALS:0～LOCALS:99まで
FOR LCOUNT, 0, 100
	SIF LOCALS:LCOUNT == ""
		RETURNF LOCAL

	;文字列を数字化して足していく
	LOCAL += TOINT(LOCALS:LCOUNT)
NEXT

RETURNF LOCAL

;-------------------------------------------------
;/で区切られた数字の要素でなる文字列ARGS中の各要素に整数ARGを足す関数
;数値を減らしたい時にはARGに負の整数を代入する
;-------------------------------------------------
@ADDNUM_STR(ARGS, ARG)
#FUNCTIONS
#DIM LCOUNT

VARSET LOCALS
;それぞれの要素に分解
SPLIT ARGS, "/", LOCALS

LOCALS = {TOINT(LOCALS) + ARG}/

;LOCALSはLOCALS:0～LOCALS:99まで
FOR LCOUNT, 1, 100
	SIF LOCALS:LCOUNT == ""
		RETURNF LOCALS

	;文字列を数字化して足していく
	LOCALS = %LOCALS%{TOINT(LOCALS:LCOUNT) + ARG}/
NEXT

RETURNF LOCALS

;-------------------------------------------------
;ある条件におけるキャラ以外の数の判定
;NUMの内部使用は禁止
;-------------------------------------------------
@NUM(ARGS, ARG)
#FUNCTION
#DIM LCOUNT

LOCAL = 0
SELECTCASE ARGS
CASE "１年の長さ"
	RETURNF 56
CASE "写真"
	FOR LCOUNT, 70, 100
		LOCAL += STRCOUNT(SAVESTR:LCOUNT, "/")
	NEXT
CASE "消耗品使用数"
	FOR LCOUNT, 0, 10
		LOCAL += ITEM:(LCOUNT + 80) - ITEM:(LCOUNT + 50)
	NEXT
CASE "折り返し文字数"
	RETURNF 2*GETCONFIG("ウィンドウ幅")/GETCONFIG("フォントサイズ") - 1
CASE "目標金額"
	RETURNF 1000000
CASE "所持衣装"
	FOR LCOUNT, 80, 100
		SIF ITEM:LCOUNT
			LOCAL += 1
	NEXT
CASE "総衣装数"
	FOR LCOUNT, 80, 100
		SIF STRLENS(ITEMNAME:LCOUNT )
			LOCAL += 1
	NEXT
CASE "所持アイテム"
	FOR LCOUNT, 0, 100
		LOCAL += ITEM:LCOUNT
	NEXT
CASE "Ｓランク"
	;この値以上ならＳ
	SELECTCASE ARG
	CASE 60 TO 68
		RETURNF 7
	CASE 35 TO 39
		RETURNF 3
	CASE 20 TO 29, 30 TO 49, 60 TO 69
		RETURNF 5
	;～名器
	CASE 50 TO 59
		RETURNF 80
	CASEELSE
		RETURNF 10
	ENDSELECT

CASE "宝珠：淫核取得"
	SIF ARG == 0 && TARGET
		ARG = TARGET
	LOCAL = 100000
	SIF TALENT:ARG:淫核 + TALENT:ARG:淫壺 + TALENT:ARG:尻穴狂い + TALENT:ARG:淫乳
		LOCAL *= 5
CASE "宝珠：淫壺取得"
	SIF ARG == 0 && TARGET
		ARG = TARGET
	LOCAL = 100000
	SIF TALENT:ARG:淫核 + TALENT:ARG:淫壺 + TALENT:ARG:尻穴狂い + TALENT:ARG:淫乳
		LOCAL *= 5
CASE "宝珠：尻穴狂い取得"
	SIF ARG == 0 && TARGET
		ARG = TARGET
	LOCAL = 100000
	SIF TALENT:ARG:淫核 + TALENT:ARG:淫壺 + TALENT:ARG:尻穴狂い + TALENT:ARG:淫乳
		LOCAL *= 5
CASE "宝珠：淫乳取得"
	SIF ARG == 0 && TARGET
		ARG = TARGET
	LOCAL = 100000
	SIF TALENT:ARG:淫核 + TALENT:ARG:淫壺 + TALENT:ARG:尻穴狂い + TALENT:ARG:淫乳
		LOCAL *= 5
CASE "宝珠：蕩唇取得"
	SIF ARG == 0 && TARGET
		ARG = TARGET
	LOCAL = 100000
	SIF TALENT:ARG:淫核 + TALENT:ARG:淫壺 + TALENT:ARG:尻穴狂い + TALENT:ARG:淫乳
		LOCAL *= 5
CASE "経験値：素質獲得"
	;LOCAL = (1 + ABL:素質獲得回数)*200
	;200に固定させることに
	RETURNF 200
CASE "貧乳の上限"
	;AAA～Ａ
	RETURNF 3
CASE "並乳の上限"
	;Ｂ～Ｄ
	RETURNF 6
CASE "巨乳の上限"
	;ＦorＧorＨ
	RETURNF 8
CASE "爆乳の上限"
	;ＩorＪorＫ
	RETURNF 11
;身長は通常156～168(162±6)、小柄147～155(151±4)、小柄Ⅱ134～146(140±6)、小柄Ⅲ 121～133(127±6)
CASE "小柄Ⅲの上限"
	RETURNF 130
CASE "小柄Ⅱの上限"
	RETURNF 143
CASE "小柄の上限"
	RETURNF 152
CASE "普通の上限"
	RETURNF 165
CASE "長身の上限"
	RETURNF 182
CASE "長身Ⅱの上限"
	RETURNF 199
;日付イベントなど特殊イベント
CASE "クリスマスツリー"
	FOR LCOUNT, 2, CHARANUM
		SIF CEVENT("日付：クリスマスツリー", LCOUNT)
			LOCAL += 1
	NEXT
ENDSELECT
RETURNF LOCAL


;-------------------------------------------------
;ある条件におけるキャラの人数の判定
;-------------------------------------------------
@CHARA_NUM(ARGS)
#FUNCTION
#DIM LCOUNT

LOCAL = 0
SELECTCASE ARGS
CASE "出産間近"
	FOR LCOUNT, 2, CHARANUM
		SIF TALENT:LCOUNT:妊娠 == 3
			LOCAL += 1
	NEXT
CASE "助手可能", "同伴可能", "同棲中", "同棲：ずっと", "出現予定", "お弁当の約束", "性処理中", "現在存在", "入室挨拶中", "部室出現可能", "帰り道イベント可能", "要個室", "デート可能", "自撮り可能", "部員同士の交流可能", "朝駆け相手", "夜這い相手", "性処理直後"
	FOR LCOUNT, 2, CHARANUM
		SIF COND(ARGS, LCOUNT)
			LOCAL += 1
	NEXT
ENDSELECT
RETURNF LOCAL

;-------------------------------------------------
;文字列ARGSから添え字を消す関数
;-------------------------------------------------
@NONUM(ARGS)
#FUNCTIONS
REPLACE ARGS, "[０-９]", ""
REPLACE RESULTS, "[0-9]", ""
RETURNF RESULTS

;-------------------------------------------------
;CALLNAMEがARGSなキャラの番号を返す関数
;-------------------------------------------------
@CNUM(ARGS)
#FUNCTION

;極稀にいるCALLNAMEが変わるキャラ用
SELECTCASE ARGS
CASE "白い死神", "アーリャ"
	RETURNF MAX(FINDCHARA(CALLNAME, "白い死神"), FINDCHARA(CALLNAME, "アーリャ"), 0)
CASEELSE
	RETURNF MAX(FINDCHARA(CALLNAME, ARGS), 0)
ENDSELECT

;-------------------------------------------------
;頻繁に使う条件のまとめ
;LOCALを使う際には慎重に！！
;ARGがARGSを満たすか判定する。ただし、挿入については@INSERTで管理する
;素質については"素質名"を入れると機能し、その素質が無いのを条件とするときには"!素質名"とします
;-------------------------------------------------
@COND(ARGS, ARG)
#FUNCTION
#DIM LCOUNT

SIF ARG < 0
	RETURNF 0
SIF ARG == 0 && TARGET
	ARG = TARGET
SELECTCASE ARGS
CASE "イきそう"
	SELECTCASE ARG
	CASE PLAYER
		;絶頂ゲージの75％以上
		SIF BASE:ARG:絶頂 >= MAXBASE:ARG:絶頂 * 3 / 4
			RETURNF 1
	CASEELSE
;		SIF EX:ARG:イくのをこらえた
;			RETURNF 1
		;快感許容値の75％以上
		SIF BASE:ARG:快感許容値オンナ >= MAXBASE:ARG:快感許容値オンナ * 3 / 4
			RETURNF 1
		;絶頂ゲージの75％以上
		SIF BASE:ARG:絶頂 >= MAXBASE:ARG:絶頂 * 3 / 4
			RETURNF 1
	ENDSELECT
CASE "こらえる"
;	SIF TCVAR:ARG:強制射精
;		RETURNF 0
;	SIF TFLAG:余裕 >= 4 && NOWEX:ARG:ラグジャラスヒット == 0
;		RETURNF 1
CASE "男の娘","オトコの娘"
	SIF TALENT:ARG:オトコの娘 && !IS_大柄(ARG)
		RETURNF 1
CASE "朝"
	SIF TIME == 0
		RETURNF 1
CASE "昼"
	SIF TIME == 1
		RETURNF 1
CASE "夜"
	SIF TIME == 2
		RETURNF 1
CASE "夕"
	SIF TIME == 3
		RETURNF 1
;相性チェック
CASE "相性☆"
	SIF TARGET <= 0 || ARG <= 0
		RETURNF 0
	SIF MIN(RELATION:ARG:(NO:TARGET), RELATION:(NO:ARG) ) >= 200
		RETURNF 1
CASE "相性◎"
	SIF TARGET <= 0 || ARG <= 0
		RETURNF 0
	SIF MIN(RELATION:ARG:(NO:TARGET), RELATION:(NO:ARG) ) >= 150
		RETURNF 1
;"漢数字の〇"と"記号の○"は分かりづら過ぎる
CASE "相性○", "相性〇"
	SIF TARGET <= 0 || ARG <= 0
		RETURNF 0
	SIF MIN(RELATION:ARG:(NO:TARGET), RELATION:(NO:ARG) ) >= 120
		RETURNF 1

ENDSELECT
RETURNF 0

;-------------------------------------------------
;上のCONDの条件の組み合わせに耐えるキャラを選出する
;ただし、TARGETは除外する
;-------------------------------------------------
@FIND_COND(ARGS:0, ARGS:1, ARGS:2, ARGS:3)
#FUNCTION
#DIM LCOUNT
;該当するキャラの人数
#DIM NUM_FIND

;条件が空なら0
SIF ARGS:0 == "" && ARGS:1 == "" && ARGS:2 == "" && ARGS:3 == ""
	RETURNF 0

VARSET LOCAL
NUM_FIND = 0

FOR LCOUNT, 2, CHARANUM
	SIF LCOUNT == TARGET
		CONTINUE
	SIF ARGS:0 != "" && COND(ARGS:0, LCOUNT) == 0
		CONTINUE
	SIF ARGS:1 != "" && COND(ARGS:1, LCOUNT) == 0
		CONTINUE
	SIF ARGS:2 != "" && COND(ARGS:2, LCOUNT) == 0
		CONTINUE
	SIF ARGS:3 != "" && COND(ARGS:3, LCOUNT) == 0
		CONTINUE

	NUM_FIND += 1

	SIF RAND:NUM_FIND == 0
		LOCAL = LCOUNT
NEXT
RETURNF LOCAL

;-------------------------------------------------
;頻繁に使う条件のまとめ その２
;ARGのARGSが何か、文字列で返す
;-------------------------------------------------
@CONDS(ARGS, ARG)
#FUNCTIONS
#DIM LCOUNT
#DIMS CHOICES
#DIM ACTOR
#DIM MEMO

VARSET LOCALS

SIF ARG == 0 && TARGET
	ARG = TARGET

SELECTCASE ARGS
;好きな体位のコマンド番号を返す。複数あるならランダム。これはTARGET限定なのに注意
CASE "好きなＶセックス", "好きなＡセックス"
;	MEMO = TEQUIP:押し倒し
;	TEQUIP:押し倒し = 0

	SELECTCASE ARGS
	CASE "好きなＶセックス"
		LOCAL = 60
	CASE "好きなＡセックス"
		LOCAL = 70
	ENDSELECT

	FOR LCOUNT, LOCAL, LOCAL+6
		SELECTCASE LCOUNT
		CASE LOCAL+5
;			IF CHECK_COM("好きな体位", LCOUNT) == 0
;				TEQUIP:押し倒し = 1
;				SIF CHECK_COM("好きな体位", LCOUNT) == 0
;					CONTINUE
;			ENDIF
		CASEELSE
;			SIF CHECK_COM("好きな体位", LCOUNT) == 0
;				CONTINUE
		ENDSELECT
		SIF LOCALS == "" || RAND:2
			LOCALS = %TRAINNAME:LCOUNT%
	NEXT
;	TEQUIP:押し倒し = MEMO
;CASE "髪色"
;	RETURNF CSTR:ARG:髪の色
CASE "髪色の種類"
	LOCALS = %CONDS("髪色", ARG)%
	SELECTCASE EXTSTR(LOCALS, "", "髪")
	CASE "黒", "金", "銀", "赤", "青", "緑", "茶", "紫", "桃", "紅", "白", "紺", "焦茶", "深緑", "真鍮", "槞"
		LOCALS = %EXTSTR(LOCALS, "", "髪")%
	CASEELSE
		IF STRCOUNT(LOCALS, "栗")
			LOCALS = 茶
		ELSEIF STRCOUNT(LOCALS, "ネイビー")
			LOCALS = 青
		ELSEIF STRCOUNT(LOCALS, "ピンク")
			LOCALS = 桃
		ELSEIF STRCOUNT(LOCALS, "金髪")
			LOCALS = 金
		ELSEIF STRCOUNT(LOCALS, "銀髪")
			LOCALS = 銀
		ELSEIF STRCOUNT(LOCALS, "赤髪")
			LOCALS = 赤
		ELSEIF STRCOUNT(LOCALS, "青髪")
			LOCALS = 青
		ELSEIF STRCOUNT(LOCALS, "緑髪")
			LOCALS = 緑
		ELSEIF STRCOUNT(LOCALS, "茶髪")
			LOCALS = 茶
		ELSEIF STRCOUNT(LOCALS, "紫髪")
			LOCALS = 紫
		ELSEIF STRCOUNT(LOCALS, "桃髪")
			LOCALS = 桃
		ELSEIF STRCOUNT(LOCALS, "紅髪")
			LOCALS = 紅
		ELSEIF STRCOUNT(LOCALS, "白髪")
			LOCALS = 白
		ELSEIF STRCOUNT(LOCALS, "紺髪")
			LOCALS = 紺
		ELSEIF STRCOUNT(LOCALS, "焦茶髪")
			LOCALS = 焦茶
		ELSEIF STRCOUNT(LOCALS, "深緑髪")
			LOCALS = 深緑
		ELSEIF STRCOUNT(LOCALS, "真鍮髪")
			LOCALS = 真鍮
		ELSEIF STRCOUNT(LOCALS, "槞髪")
			LOCALS = 槞
		;指定なしは黒髪になる
		ELSE
			LOCALS = 黒
		ENDIF
	ENDSELECT
CASE "普段の髪型"
	VARSET LOCALS
;	SPLIT CSTR:ARG:普段の髪型, "/", LOCALS
	RETURNF LOCALS

CASE "体型"
	SIF BASE:ARG:身長 == 0 || BASE:ARG:バスト == 0 || BASE:ARG:ウェスト == 0 || BASE:ARG:ヒップ == 0
		RETURNF ""
	;まずは小柄かどうかで大きく分け、ウェスト、ヒップ、胸の大きさで細かく分ける
	;ウェストの太さについては100*ウェスト/身長の値で(細い, 普通, 太い, 肥満) = (38以下, 39～45, 46以上)
	;ヒップの大きさについては100*ヒップ/身長の値で(細い, 普通, 大きい) = (50以下, 51～53, 54以上)
	;COND("巨尻")とCOND("小尻")でヒップ判定も
;	IF IS_MALE(ARG) && COND("男の娘", ARG) == 0
;		RETURNF "オトコ"
;	ELSEIF IS_小柄(ARG) && AGE(ARG) >= 2 && TALENT:ARG:巨乳
;		RETURNF "トランジスタグラマー"
;	ELSEIF IS_小柄(ARG) && AGE(ARG) == 1
;		IF TALENT:ARG:巨乳
;			RETURNF "ロリ巨乳"
;		ELSEIF COND("巨尻", ARG)
;			RETURNF "デカ尻ロリ"
;		ELSEIF TALENT:ARG:貧乳
;			SELECTCASE 100*BASE:ARG:ウェスト/BASE:ARG:身長
;			;ウェスト太め
;			CASE IS >= CALCF("油断倍数", ARG)
;				RETURNF "子供体型"
;			;ウェスト普通以下
;			CASEELSE
;				IF COND("陰毛", ARG) == 1
;					RETURNF "つるぺた"
;				ELSE
;					RETURNF "ぺたんこ"
;				ENDIF
;			ENDSELECT
;		ELSE
;			SELECTCASE 100*BASE:ARG:ウェスト/BASE:ARG:身長
;			;ウェスト太め
;			CASE IS >= CALCF("油断倍数", ARG)
;				RETURNF "子供体型"
;			;ウェスト普通以下
;			CASEELSE
;				IF AGE(ARG) >= 2
;					RETURNF "ちっちゃい"
;				ELSE
;					RETURNF "発展途上"
;				ENDIF
;			ENDSELECT
;		ENDIF
;	ELSE
;		SELECTCASE COND("巨尻", ARG)
;		;超尻
;		CASE IS >= 3
;			SELECTCASE 100*BASE:ARG:ウェスト/BASE:ARG:身長
;			;ウェスト太め
;			CASE IS >= CALCF("油断倍数", ARG)
;				IF TALENT:ARG:巨乳
;					RETURNF "超豊満"
;				ELSE
;					RETURNF "むちむち"
;				ENDIF
;			;ウェスト細い
;			CASE IS <= CALCF("スリム倍数", ARG)
;				IF TALENT:ARG:巨乳
;					RETURNF "わがままボディ"
;				ELSE
;					RETURNF "超デカ尻スレンダー"
;				ENDIF
;			;ウェスト普通
;			CASEELSE
;				IF TALENT:ARG:巨乳
;					RETURNF "超尻グラマー"
;				ELSEIF TALENT:ARG:筋肉質
;					RETURNF "ガチムチ"
;				ELSE
;					RETURNF "超尻"
;				ENDIF
;			ENDSELECT
;		;爆尻
;		CASE 2
;			SELECTCASE 100*BASE:ARG:ウェスト/BASE:ARG:身長
;			;ウェスト太め
;			CASE IS >= CALCF("油断倍数", ARG)
;				IF TALENT:ARG:巨乳
;					RETURNF "豊満"
;				ELSE
;					RETURNF "むちむち"
;				ENDIF
;			;ウェスト細い
;			CASE IS <= CALCF("スリム倍数", ARG)
;				IF TALENT:ARG:巨乳
;					RETURNF "わがままボディ"
;				ELSE
;					RETURNF "スリム爆尻"
;				ENDIF
;			;ウェスト普通
;			CASEELSE
;				IF TALENT:ARG:巨乳
;					RETURNF "爆尻グラマー"
;				ELSEIF TALENT:ARG:筋肉質
;					RETURNF "ガチムチ"
;				ELSE
;					RETURNF "爆尻"
;				ENDIF
;			ENDSELECT
;		;巨尻
;		CASE 1
;			SELECTCASE 100*BASE:ARG:ウェスト/BASE:ARG:身長
;			;ウェスト太め
;			CASE IS >= CALCF("油断倍数", ARG)
;				IF TALENT:ARG:巨乳
;					RETURNF "豊満"
;				ELSE
;					RETURNF "むちむち"
;				ENDIF
;			;ウェスト細い
;			CASE IS <= CALCF("スリム倍数", ARG)
;				IF TALENT:ARG:巨乳
;					RETURNF @"スリム%TALENT_NAME(GETNUM(TALENT, "巨乳"), TALENT:ARG:巨乳, ARG)%"
;				ELSEIF TALENT:ARG:筋肉質
;					RETURNF "筋肉質スレンダー"
;				ELSE
;					RETURNF "お尻大きめスレンダー"
;				ENDIF
;			;ウェスト普通
;			CASEELSE
;				IF TALENT:ARG:巨乳
;					RETURNF "グラマー"
;				ELSEIF TALENT:ARG:筋肉質
;					RETURNF "筋肉質"
;				ELSE
;					RETURNF "お尻大きめ"
;				ENDIF
;			ENDSELECT
;		CASE 0
;			SELECTCASE 100*BASE:ARG:ウェスト/BASE:ARG:身長
;			;ウェスト太め
;			CASE IS >= CALCF("油断倍数", ARG)
;				IF TALENT:ARG:巨乳
;					RETURNF @"%TALENT_NAME(GETNUM(TALENT, "巨乳"), TALENT:ARG:巨乳, ARG)%"
;				ELSE
;					RETURNF "油断"
;				ENDIF
;			;ウェスト細い
;			CASE IS <= CALCF("スリム倍数", ARG)
;				IF TALENT:ARG:巨乳
;					RETURNF @"スリム%TALENT_NAME(GETNUM(TALENT, "巨乳"), TALENT:ARG:巨乳, ARG)%"
;				ELSEIF TALENT:ARG:筋肉質
;					RETURNF "細マッチョ"
;				ELSE
;					RETURNF "スレンダー"
;				ENDIF
;			;ウェスト普通
;			CASEELSE
;				IF TALENT:ARG:巨乳
;					RETURNF @"%TALENT_NAME(GETNUM(TALENT, "巨乳"), TALENT:ARG:巨乳, ARG)%"
;				ELSEIF TALENT:ARG:筋肉質
;					RETURNF "筋肉質"
;				ELSEIF TALENT:ARG:貧乳
;					IF IS_大柄(ARG)
;						RETURNF "長身貧乳"
;					ELSE
;						RETURNF "貧乳"
;					ENDIF
;				ELSEIF IS_大柄(ARG)
;					RETURNF "長身"
;				ELSE
;					RETURNF "バランス型"
;				ENDIF
;			ENDSELECT
;		ENDSELECT
;	ENDIF
CASE "ウェスト"
;	SELECTCASE 100*BASE:ARG:ウェスト/BASE:ARG:身長
;	;ウェスト太め
;	CASE IS >= CALCF("油断倍数", ARG)
;		LOCALS = 太め
;	;ウェスト細い
;	CASE IS <= CALCF("スリム倍数", ARG)
;		LOCALS = 細め
;	;ウェスト普通
;	CASEELSE
;		LOCALS = 普通
;	ENDSELECT
CASE "おっぱい"
;	IF IS_MALE(ARG)
;		LOCALS = オトコ
;	ELSEIF TALENT:ARG:巨乳 >= 3
;		LOCALS = 超乳
;	ELSEIF TALENT:ARG:巨乳 == 2
;		LOCALS = 爆乳
;	ELSEIF TALENT:ARG:巨乳
;		LOCALS = 巨乳
;	ELSEIF TALENT:ARG:貧乳
;		LOCALS = 貧乳
;	ELSE
;		LOCALS = 並乳
;	ENDIF
CASE "バストカップ"
	SELECTCASE CFLAG:ARG:カップサイズ
	CASE IS < 0
		RETURNF "---"
	CASE IS >= 28
		RETURNF "Z"
	CASEELSE
		VARSET LOCALS
		SPLIT "---, AAA, AA, Ａ, Ｂ, Ｃ, Ｄ, Ｅ, Ｆ, Ｇ, Ｈ, Ｉ, Ｊ, Ｋ, Ｌ, Ｍ, Ｎ, Ｏ, Ｐ, Ｑ, Ｒ, Ｓ, Ｔ, Ｕ, Ｖ, Ｗ, Ｘ, Ｙ, Ｚ", ", ", LOCALS
		RETURNF LOCALS:(CFLAG:ARG:カップサイズ)
	ENDSELECT
CASE "お尻"
;	IF IS_MALE(ARG)
;		LOCALS = 
;	ELSE
;		LOCALS = GET_STR_尻サイズ(ARG)
;	ENDIF
CASE "ヒップサイズ"
	SELECTCASE BASE:ARG:ヒップ
	CASE IS <= 71
		LOCALS = XS
	CASE 72 TO 76
		LOCALS = 3S
	CASE 77 TO 81
		LOCALS = SS
	CASE 82 TO 86
		LOCALS = Ｓ
	CASE 87 TO 91
		LOCALS = Ｍ
	CASE 92 TO 96
		LOCALS = Ｌ
	CASE 97 TO 101
		LOCALS = LL
	CASE 102 TO 106
		LOCALS = 3L
	CASE 107 TO 111
		LOCALS = 4L
	CASE 112 TO 116
		LOCALS = 5L
	CASEELSE
		LOCALS = XL
	ENDSELECT
CASE "皮の状態"
	IF COND("ズル剥け", ARG)
		LOCALS = ズル剥け
	ELSEIF COND("仮性包茎", ARG)
		LOCALS = 仮性包茎
	ELSEIF COND("真性包茎", ARG)
		LOCALS = 真性包茎
	ENDIF
CASE "ペニスサイズ"
;	SELECTCASE SIZE("ペニス", ARG)
;	CASE 0
;		LOCALS = 短小
;	CASE 1
;		LOCALS = 普通
;	CASE 2
;		LOCALS = 巨根
;	CASE 3
;		LOCALS = 馬並み
;	CASE 4
;		LOCALS = 腕並み
;	CASEELSE
;		LOCALS = 規格外
;	ENDSELECT
CASE "潜在的含むペニスサイズ"
;	SELECTCASE SIZE("基本ペニスサイズ", ARG)
;	CASE 0
;		LOCALS = 短小
;	CASE 1
;		LOCALS = 普通
;	CASE 2
;		LOCALS = 巨根
;	CASE 3
;		LOCALS = 馬並み
;	CASE 4
;		LOCALS = 腕並み
;	CASEELSE
;		LOCALS = 規格外
;	ENDSELECT
ENDSELECT
RETURNF LOCALS


;-------------------------------------------------
;単語1/単語2/…/単語n の書式で書かれたARGS:0～の単語のどれかを等確率で返す
;(ARGSが複数あるのは関数などが突っ込まれることを想定しているため)
;＿は何も出力しない選択とする
;-------------------------------------------------
@TEXTR(ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6)
#FUNCTIONS
#DIM LCOUNT
#DIM NUM_CHOICE
#DIMS CHOICES

;まず一つにまとめる
ARGS = %ARGS%\/%ARGS:1%\/%ARGS:2%\/%ARGS:3%\/%ARGS:4%\/%ARGS:5%\/%ARGS:6%

VARSET CHOICES
VARSET LOCALS
SPLIT ARGS, "/", LOCALS

NUM_CHOICE = 1
FOR LCOUNT, 0, 100
	SELECTCASE LOCALS:LCOUNT
	CASE ""
		CONTINUE
	CASEELSE
		SIF RAND:NUM_CHOICE == 0
			CHOICES = %LOCALS:LCOUNT%

		NUM_CHOICE += 1
	ENDSELECT
NEXT
SIF CHOICES == "＿"
	CHOICES = 
RETURNF CHOICES

;-------------------------------------------------
;文字列ARGSからいくつかの記号や単語などを除外してからSTRLENSを行う関数
;-------------------------------------------------
@STRLENS_EX(ARGS)
#FUNCTION
#DIM LCOUNT
#DIM TEXTLEN

TEXTLEN = 0
VARSET LOCALS
SPLIT ARGS, "_", LOCALS

FOR LCOUNT, 0, 100
	SELECTCASE LOCALS:LCOUNT
	CASE "", "BUTTON", "NOBUTTON", "太字", "斜体", "取り消し", "下線", "-", "L", "W", "NW"
		CONTINUE
	CASE "H", "WH", "BH", "BBH", "HH", "WHH", "BHH", "BBHH"
		TEXTLEN += 2
	CASE "／／／", "／"
		TEXTLEN += 3
	;一部PRINT_IMGしている物を使えるようにする
	CASE "Uお弁当", "Uドラゴン", "U絆創膏", "Uオトコ", "Uオンナ", "Uふたなり", "U男の娘", "UH"
		TEXTLEN += 2
	;パラレル日本語
	CASE "Uそそ", "Uつん", "Uなお", "Uまふ", "Uはよ", "Uひに", "Uやよ", "Uゐに", "Uゐん", "U逆あ", "Uにす", "Uもむ", "Uをね", "U小ゐ", "U亜漢字1", "U亜漢字2"
		TEXTLEN += 2
	CASE "UNI"
		CONTINUE
	CASE "茶色", "ショッキングピンク", "ピンク", "ハートピンク", "赤", "紅", "黄色", "暗黄色", "イエロー", "緑", "青", "水色", "藍色", "暗灰色", "灰色", "明灰色", "白"
		CONTINUE
	CASEELSE
		TEXTLEN += STRLENS(LOCALS:LCOUNT)
	ENDSELECT
NEXT
RETURNF TEXTLEN

;-------------------------------------------------
;特殊な書式の文字列ARGSを読める文章に直す
;行や命令は_で区切る事。そしてLOCALSは99までなので手加減してくれ
;CASEを増やして、そのうち文字列を別作成しないで済むようにしたい
;改行する時とWAITを付けて改行する時は、それぞれ以下のPRINT_STRL, PRINT_STRWを用いると間違いが少なくなるのでおすすめです
;-------------------------------------------------
@PRINT_STR, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6, ARGS:7, ARGS:8, ARGS:9
#DIM LCOUNT
#DIM TEXT_COLOR
#DIM INITIAL_COLOR

TEXT_COLOR = GETCOLOR()
INITIAL_COLOR = GETCOLOR()

FOR LCOUNT, 1, 10
	SIF ARGS:LCOUNT != ""
		ARGS = %ARGS%_%ARGS:LCOUNT%
NEXT

VARSET LOCALS

;文字列を分解する
SPLIT ARGS, "_", LOCALS

FOR LCOUNT, 0, 100

	;#TEXTC=RGBで始まっているとその色がデフォになる
	IF SUBSTRING(LOCALS:LCOUNT, 0, 7) == "#TEXTC="
		LOCALS:LCOUNT = 0x%SUBSTRING(LOCALS:LCOUNT, 7, -1)%
		IF ISNUMERIC(LOCALS:LCOUNT)
			TEXT_COLOR = TOINT(LOCALS:LCOUNT)
		ELSE
			PRINT エラー！
		ENDIF
		SETCOLOR TEXT_COLOR
		PRINTL
		CLEARLINE 1
		LOCALS:LCOUNT =
		LCOUNT = 0
	;その場でWAITさせるための処理
	ELSEIF LOCALS:LCOUNT == "NW"
		PRINTW 
		CLEARLINE 1
		LOCALS:LCOUNT =
		LCOUNT = 0
	ENDIF

	;特殊な操作
	SELECTCASE LOCALS:LCOUNT
	;CASE ""
	;	BREAK
	CASE "CALLNAME:TARGET"
		PRINTFORM %CALLNAME:TARGET%
		CONTINUE
	CASE "CALLNAME:PLAYER"
		PRINTFORM %CALLNAME:PLAYER%
		CONTINUE
	CASE "CALLNAME:ASSI"
		PRINTFORM %CALLNAME:ASSI%
		CONTINUE
	CASE "CALLNAME:MASTER"
		PRINTFORM %CALLNAME:MASTER%
		CONTINUE
	CASE "BUTTON"
		;次の文字をボタンにする
		LCOUNT += 1
;		IF NUMBER_BUTTON(LOCALS:LCOUNT) < 0
;			PRINTBUTTON LOCALS:LCOUNT, LOCALS:LCOUNT
;		ELSE
;			PRINTBUTTON LOCALS:LCOUNT, NUMBER_BUTTON(LOCALS:LCOUNT)
;		ENDIF
		;RESETCOLOR
		SETCOLOR TEXT_COLOR
		CONTINUE
	CASE "NOBUTTON"
		;次の文字をボタンにしない
		LCOUNT += 1
		PRINTPLAINFORM %LOCALS:LCOUNT%
		;RESETCOLOR
		SETCOLOR TEXT_COLOR
		CONTINUE
	CASE "太字"
		;次の文字を太字
		FONTBOLD
		CONTINUE
	CASE "斜体"
		;次の文字を斜体
		FONTITALIC
		CONTINUE
	CASE "取り消し"
		;次の文字に取り消し線を引く
		FONTSTYLE 4
		CONTINUE
	CASE "下線"
		;次の文字に下線を引く
		FONTSTYLE 8
		CONTINUE
	CASE "-"
		;次の文字に打消し線を引く
		FONTSTYLE 4
		CONTINUE
	CASE "L"
		PRINTL 
		CONTINUE
	CASE "W"
		PRINTW 
		CONTINUE
	CASE "NW"
		PRINTW 
		CLEARLINE 1
		LOCALS:LCOUNT =
		LCOUNT = 0
	;ハートは下の方に記述されている"UH"もあります(RESOURCESフォルダにあるハート画像を出す)
	CASE "H"
		CALL HEARTMARK
		CONTINUE
	CASE "WH"
		CALL WHITE_HEARTMARK
		CONTINUE
	CASE "BH"
		CALL BIG_HEARTMARK
		CONTINUE
	CASE "BBH"
		CALL BIG_BLACK_HEARTMARK
		CONTINUE
	CASE "HH"
		SETCOLOR DEF_COLOR("ハートピンク")
		CALL HEARTMARK
		SETCOLOR TEXT_COLOR
		;RESETCOLOR
		CONTINUE
	CASE "WHH"
		SETCOLOR DEF_COLOR("ハートピンク")
		CALL WHITE_HEARTMARK
		SETCOLOR TEXT_COLOR
		;RESETCOLOR
		CONTINUE
	CASE "BHH"
		SETCOLOR DEF_COLOR("ハートピンク")
		CALL BIG_HEARTMARK
		SETCOLOR TEXT_COLOR
		;RESETCOLOR
		CONTINUE
	CASE "BBHH"
		SETCOLOR DEF_COLOR("ハートピンク")
		CALL BIG_BLACK_HEARTMARK
		SETCOLOR TEXT_COLOR
		;RESETCOLOR
		CONTINUE
	CASE "／／／", "／"
		SETCOLOR DEF_COLOR("ピンク")
		PRINT ///
		SETCOLOR TEXT_COLOR
		;RESETCOLOR
		CONTINUE
	;一部PRINT_IMGしている物を使えるようにする
	CASE "Uお弁当", "Uドラゴン", "U絆創膏", "Uオトコ", "Uオンナ", "Uふたなり", "U男の娘", "UH"
		PRINTFORM %UNI(SUBSTRING(LOCALS:LCOUNT, 1, -1))%
		SETCOLOR TEXT_COLOR
		CONTINUE
	;パラレル日本語
	CASE "Uそそ", "Uつん", "Uなお", "Uまふ", "Uはよ", "Uひに", "Uやよ", "Uゐに", "Uゐん", "U逆あ", "Uにす", "Uもむ", "Uをね", "U小ゐ", "U亜漢字1", "U亜漢字2"
		PRINTFORM %UNI(SUBSTRING(LOCALS:LCOUNT, 1, -1))%
		SETCOLOR TEXT_COLOR
		CONTINUE
	CASE "UNI"
		;次の文字をPRINT_IMG対応にする
		LCOUNT += 1
		PRINTFORM %UNI(LOCALS:LCOUNT)%
		SETCOLOR TEXT_COLOR
		CONTINUE
	CASE "茶色", "ショッキングピンク", "ピンク", "ハートピンク", "赤", "紅", "黄色", "暗黄色", "イエロー", "緑", "青", "水色", "藍色", "暗灰色", "灰色", "明灰色", "白"
		SETCOLOR DEF_COLOR(LOCALS:LCOUNT)
		CONTINUE
	ENDSELECT

	PRINTFORM %LOCALS:LCOUNT%
	SETCOLOR TEXT_COLOR
	;RESETCOLOR
	FONTSTYLE 0
	CONTINUE
NEXT

;RESETCOLOR
SETCOLOR INITIAL_COLOR
FONTSTYLE 0

;-------------------------------------------------
;PRINT_STRの最後の_Lと_Wを関数に織り込んだver
;-------------------------------------------------
@PRINT_STRL, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6, ARGS:7, ARGS:8, ARGS:9
CALL PRINT_STR, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6, ARGS:7, ARGS:8, ARGS:9
PRINTL

@PRINT_STRW, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6, ARGS:7, ARGS:8, ARGS:9
CALL PRINT_STR, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6, ARGS:7, ARGS:8, ARGS:9
WAIT

@PRINT_STRFW, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6, ARGS:7, ARGS:8, ARGS:9
CALL PRINT_STR, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6, ARGS:7, ARGS:8, ARGS:9
FORCEWAIT

;-------------------------------------------------
;単語を/で区切られたARGSを[]で囲いつつ羅列する際に用いる
;小さいフォントを使っているので、横幅が足りないものの表示に向く
;単語_数字の形式で記述された部分は押すと数字を返すボタンになる
;単語1/&/単語2と記述された部分は[単語1 単語2]となる
;ARGS:1 = 拡大表示 の時にはフォントを弄らない
;-------------------------------------------------
@PRINT_LIST, ARGS, ARGS:1
#DIM LCOUNT
#DIMS MEMOS, 2
;まさか100以上になるとはな
#DIMS SPLIT_STR, 301

VARSET SPLIT_STR
SPLIT ARGS, "/", SPLIT_STR

FOR LCOUNT, 0, 300
	SELECTCASE SPLIT_STR:LCOUNT
	CASE ""
		CONTINUE
	CASE "ショッキングピンク", "ピンク", "ハートピンク", "赤", "紅", "黄色", "暗黄色", "イエロー", "緑", "青", "水色", "暗灰色", "灰色", "明灰色", "白"
		SETCOLOR DEF_COLOR(SPLIT_STR:LCOUNT)
		CONTINUE
	CASE "＆"
		CONTINUE
	CASEELSE
		SIF LCOUNT == 0 || SPLIT_STR:(LCOUNT - 1) != "＆"
			PRINT [

		IF ARGS:1 != "拡大表示"
			GETFONT
			CHKFONT "Microsoft Himalaya"
			SIF RESULT
				SETFONT "Microsoft Himalaya"
		ENDIF

		;ボタン化させる？
		VARSET MEMOS
		SPLIT SPLIT_STR:LCOUNT, "_", MEMOS
		IF MEMOS:1 != ""
			IF ISNUMERIC(MEMOS:1)
				PRINTBUTTON MEMOS, TOINT(MEMOS:1)
			ELSE
				PRINTBUTTON MEMOS, MEMOS:1
			ENDIF
		ELSE
			PRINTFORM %SPLIT_STR:LCOUNT%
		ENDIF
		SIF ARGS:1 != "拡大表示"
			SETFONT RESULTS
		IF SPLIT_STR:(LCOUNT + 1) == "＆"
			PRINT  
		ELSE
			PRINT ]
		ENDIF
		RESETCOLOR
	ENDSELECT
NEXT
RESETCOLOR


;-------------------------------------------------
;ARGSに指定した色ARGをつけて出力する
;-------------------------------------------------
@PRINT_COLORTEXT, ARGS, ARG
SETCOLOR ARG
PRINTFORM %ARGS%
RESETCOLOR
;-------------------------------------------------
;PRINT_COLORTEXTの改行版
;-------------------------------------------------
@PRINTL_COLORTEXT, ARGS, ARG
SETCOLOR ARG
PRINTFORML %ARGS%
RESETCOLOR
;-------------------------------------------------
;PRINT_COLORTEXTのウェイトあり版
;-------------------------------------------------
@PRINTW_COLORTEXT, ARGS, ARG
SETCOLOR ARG
PRINTFORMW %ARGS%
RESETCOLOR

;-------------------------------------------------
;条件分岐用のRAND
;ARGには最低分岐数を入れる
;nを正の整数とすると RANDIF(n, TALENT:強気, ABL:欲望 >= 3) は、
;RAND:(n + LIMIT(TALENT:強気, 0, 1) + (ABL:欲望 >= 3) ) == 0 に等しい
;主に、IF TALENT:高慢 && RANDIF(2, TALENT:強気, ABL:欲望 >= 3) 等のように用いる
;-------------------------------------------------
@RANDIF(ARG, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARG:7, ARG:8, ARG:9)
#FUNCTION
#DIM LCOUNT
SIF ARG <= 0
	RETURNF 0

LOCAL = ARG
FOR LCOUNT, 1, 10
	SIF ARG:LCOUNT > 0
		LOCAL += 1
NEXT
SIF RAND:LOCAL == 0
	RETURNF 1
RETURNF 0

;-------------------------------------------------
;地の文調整用
;-------------------------------------------------
@TEXT_CONJ(ARGS)
#FUNCTIONS
IF ARGS == "す"
	LOCALS = して
ELSEIF ARGS == "む"
	LOCALS = んで
ELSEIF ARGS == "る"
	LOCALS = て
ENDIF
RETURNF LOCALS

;-------------------------------------------------
;ARGを(100/ARG:1)倍する
;ARG = DIVIDE(ARG, 150)　は　TIMES ARG, 0.66　と大体等しく、ARG = ARG * 100 / 150　と等しい
;ARG:2はARG:1の最大値
;-------------------------------------------------
@DIVIDE(ARG, ARG:1, ARG:2)
#FUNCTION
;0以下の数では割れない
SELECTCASE ARG:1
CASE IS <= 0
	RETURNF ARG
CASE IS > ARG:2
	SIF ARG:2 > 0
		ARG:1 = ARG:2
ENDSELECT
RETURNF ARG * 100 / ARG:1


;-------------------------------------------------
;3桁ごとにカンマの入った所持金表示
;ARG:1には桁を揃える最大値を定めても良い
;-------------------------------------------------
@MONEY_C(ARG, ARG:1)
#FUNCTIONS
VARSET LOCALS
FOR LOCAL, 0, 10
	LOCALS = {ARG%1000}%LOCALS%
	IF ARG/1000
		SELECTCASE ARG%1000
		CASE IS < 10
			LOCALS = ,00%LOCALS%
		CASE IS < 100
			LOCALS = ,0%LOCALS%
		CASEELSE
			LOCALS = ,%LOCALS%
		ENDSELECT
		ARG /= 1000
	ELSE
		BREAK
	ENDIF
NEXT
IF ARG:1
	FOR LOCAL, 0, 10
		LOCALS:1 = {ARG:1%1000}%LOCALS:1%
		IF ARG:1/1000
			SELECTCASE ARG:1%1000
			CASE IS < 10
				LOCALS:1 = ,00%LOCALS:1%
			CASE IS < 100
				LOCALS:1 = ,0%LOCALS:1%
			CASEELSE
				LOCALS:1 = ,%LOCALS:1%
			ENDSELECT
			ARG:1 /= 1000
		ELSE
			BREAK
		ENDIF
	NEXT
	LOCALS = %BL(STRLENS(LOCALS:1) - STRLENS(LOCALS))%%LOCALS%
ENDIF
LOCALS = \$%LOCALS%
RETURNF LOCALS
;-------------------------------------------------
;半角スペースの出力
;-------------------------------------------------
@BL(ARG)
#FUNCTIONS
#DIM LCOUNT

LOCALS = 
SIF ARG <= 0
	RETURNF LOCALS
FOR LCOUNT, 0, ARG/2
	LOCALS += "　"
NEXT
SIF ARG%2
	LOCALS += " "

RETURNF LOCALS

@DRAW(ARGS)
#FUNCTIONS
#DIM LCOUNT

SIF ARGS == ""
	ARGS = -
LOCALS = 
FOR LCOUNT, 0, NUM("折り返し文字数")
	LOCALS += @"%ARGS%"
NEXT
RETURNF LOCALS

;-------------------------------------------------
;色々フラグを考慮したDELCHARA
;キャラ番号ARGのキャラを削除する
;eramakerの命令DELCHARAと異なりTARGETとASSIを保つ
;-------------------------------------------------
@DELETE_CHARA, ARG

CALL DEL_CHARAFLAG, ARG

DELCHARA ARG

;TARGETとASSIの番号調整
IF ARG == TARGET
	TARGET = 0
ELSEIF ARG < TARGET
	TARGET -= 1
ENDIF
IF ARG == ASSI
	ASSI = 0
ELSEIF ARG < ASSI
	ASSI -= 1
ENDIF

;-------------------------------------------------
;TO_NUMBERを用いてキャラARGを指定しているフラグを消去する
;-------------------------------------------------
@DEL_CHARAFLAG, ARG
#DIM LCOUNT

;SIF TO_NUMBER(CFLAG:MASTER:デートの約束) == ARG
;	CFLAG:MASTER:デートの約束 = 0

FOR LCOUNT, 1, CHARANUM
;	SIF CFLAG:LCOUNT:剃毛者 == ARG
;		CFLAG:LCOUNT:剃毛者 = 0
NEXT

;このキャラが写っている写真を消す
;CALL DEL_CHARA_PHOTO, ARG


;-------------------------------------------------
;数値によって変化する素質を加味したTALENTNAME
;ARGには素質番号、ARG:1にはその値、ARG:2には参照するキャラが代入される
;-------------------------------------------------
@TALENT_NAME(ARG, ARG:1, ARG:2)
#FUNCTIONS
#DIM LCOUNT
#DIM ACTOR
#DIM VALUE
#DIM MEMO_VALUE

VALUE = ARG:1
ACTOR = ARG:2

VARSET LOCALS
LOCALS = %TALENTNAME:ARG%
SIF ACTOR == 0 && TARGET > 0
	ACTOR = TARGET

SELECTCASE TALENTNAME:ARG
CASE "処女"
	SIF VALUE == 2
		LOCALS = 処女(再生)
CASE "性反転"
;	LOCALS = 元%TRUE_SEX(ACTOR)%
CASE "ペニス"
;	SELECTCASE BASE:ACTOR:ペニスサイズ
;	CASE IS >= 5
;		LOCALS = 規格外
;	CASE 4
;		LOCALS = 腕並
;	CASE 3
;		LOCALS = 馬並
;	CASE 2
;		LOCALS = 巨根
;	CASE 1
;		LOCALS = 普通
;	CASE 0
;		LOCALS = 短小
;	ENDSELECT
;	IF COND("真性包茎", ACTOR)
;		LOCALS = %LOCALS%(真性)
;	ELSEIF COND("仮性包茎", ACTOR)
;		LOCALS = %LOCALS%(仮性)
;	ELSE
;		LOCALS = %LOCALS%(ズル剥け)
;	ENDIF
;	SIF TALENT:ACTOR:具現 && HAVE_PENIS(ACTOR) == 0
;		LOCALS = 具現：%LOCALS%
CASE "外見年齢"
	SELECTCASE VALUE
	CASE 1
		IF IS_MALE(ACTOR)
			LOCALS = ショタ
		ELSE
			LOCALS = ロリ
		ENDIF
	CASE 2
		IF IS_MALE(ACTOR)
			LOCALS = 少年
		ELSEIF IS_小柄(ACTOR) && COND("種族：妖狐", ACTOR)
			LOCALS = ロリババア
		ELSE
			LOCALS = 少女
		ENDIF
	CASE 3
		IF IS_MALE(ACTOR)
			LOCALS = 青年
		ELSE
			LOCALS = お姉さん
		ENDIF
	CASE 4
		LOCALS = オトナ
	ENDSELECT

CASE "濡れやすい"
	IF IS_MALE(ACTOR)
		LOCALS = カウパー多め
	ELSE
		SIF VALUE >= 2
			LOCALS = とても濡れやすい
	ENDIF
CASE "濡れにくい"
	IF IS_MALE(ACTOR)
		LOCALS = カウパー少なめ
	ELSE

	ENDIF
CASE "乳首肥大", "巨乳輪", "陰核肥大"
	SIF VALUE >= 2
		LOCALS += @"LV{VALUE}"
CASE "陥没乳首"
	IF COND("真性陥没乳首", ACTOR)
		LOCALS = 陥没乳首(真性)
	ELSEIF COND("仮性陥没乳首", ACTOR)
		LOCALS = 陥没乳首(仮性)
	ENDIF
CASE "陰核包茎"
	IF COND("陰核露出", ACTOR)
		LOCALS = 陰核露出
	ELSEIF COND("陰核包茎", ACTOR)
		LOCALS = 陰核包茎
	ENDIF
CASE "ジャストフィット"
	IF GETBIT(VALUE, 0) && GETBIT(VALUE, 1)
		LOCALS = 全穴%LOCALS%
	ELSE
		SIF GETBIT(VALUE, 1)
			LOCALS = Ａ%LOCALS%
		SIF GETBIT(VALUE, 0)
			LOCALS = Ｖ%LOCALS%
	ENDIF
CASE "精液に弱い"
	SELECTCASE VALUE
	CASE 1p0
		LOCALS = 精飲に弱い
	CASE 1p1
		LOCALS = 膣内射精に弱い
	CASE 1p2
		LOCALS = 肛内射精に弱い
	;CASE 
	;	LOCALS = 精液ぶっかけに弱い
	ENDSELECT
CASE "巨乳"
	SELECTCASE VALUE
	CASE 2
		LOCALS = 爆乳
	CASE IS >= 3
		LOCALS = 超乳
	ENDSELECT
CASE "ふたなり"
	SIF VALUE == 1
		LOCALS = %LOCALS%(天然)
CASE "妊娠"
	SIF VALUE == 2
		LOCALS = 臨月
	SIF VALUE == 3
		LOCALS = 出産間近
CASE "出産経験"
	LOCALS = 出産経験:{VALUE}人
CASE "巨尻"
	SELECTCASE VALUE
	CASE 2
		LOCALS = 爆尻
	CASE IS >= 3
		LOCALS = 超尻
	ENDSELECT
CASE "Ｃ性向"
	SIF HAVE_PENIS(ACTOR)
		LOCALS = Ｐ性向
CASE "彼氏持ち"
	SELECTCASE VALUE
	CASE 2
		LOCALS = 人妻
	ENDSELECT
CASE "肌の色"
	SELECTCASE VALUE
	CASE 1
		LOCALS = 褐色肌
	CASE 2
		LOCALS = 色白
	CASE 3
		LOCALS = 青肌
	CASE 4
		LOCALS = 色黒
	ENDSELECT
;レベルが有る
CASE "小柄", "長身", "妊娠しづらい", "甘い言葉", "謎の魅力", "力持ち", "性豪", "吸精体質", "射精量強化", "業物", "Ｖ名器", "Ａ名器"
	SIF VALUE >= 2
		LOCALS = %LOCALS%%TEXTS("ローマ数字", VALUE)%
CASE "リザレクション"
	SIF VALUE > 100
		LOCALS = %LOCALS%%TEXTS("ローマ数字", VALUE/100)%
CASE "禁断の知識"
	LOCALS = [%LOCALS%%TEXTS("ローマ数字", VALUE)%]
	SIF VALUE >= 1
		LOCALS += "[淫紋の刻印]"
	SIF VALUE >= 2
		LOCALS += "[具現]"
	SIF VALUE >= 3
		LOCALS += "[認識阻害]"
	LOCALS = %SUBSTRING(LOCALS, 1, STRLENS(LOCALS) - 2)%
CASE "錬金術"
	LOCALS = %LOCALS%%TEXTS("ローマ数字", VALUE)%
CASE "調教知識"
	SELECTCASE VALUE
	CASE 1p0
		LOCALS = 愛撫・奉仕知識
	CASE 1p1
		LOCALS = 教え上手
	CASE 1p2
		LOCALS = ＳＭ知識
	CASE 1p3
		LOCALS = Ａ調教知識
	CASE 1p4
		LOCALS = 性器拡張知識
	CASE 1p5
		LOCALS = 道具使い
	CASE 1p6
		LOCALS = 露出知識
	ENDSELECT
CASE "性交熟達"
	SELECTCASE VALUE
	CASE 1p0 + 1p1
		LOCALS = ２穴熟達
	CASE 1p0
		LOCALS = Ｖ熟達
	CASE 1p1
		LOCALS = Ａ熟達
	ENDSELECT
CASE "ピル派"
	SIF VALUE < 0
		LOCALS = ピル嫌い
CASE "ゴム派"
	SIF VALUE < 0
		LOCALS = ゴム嫌い
CASE "男嫌い"
	SELECTCASE VALUE
	CASE 1
		LOCALS = 男性苦手
	CASEELSE
		LOCALS = 男嫌い
	ENDSELECT
CASE "女嫌い"
	SELECTCASE VALUE
	CASE 1
		LOCALS = 女性苦手
	CASEELSE
		LOCALS = 女嫌い
	ENDSELECT
CASE "好きな自慰"
	SELECTCASE VALUE
	CASE 1
		IF HAVE_PENIS(ACTOR)
			LOCALS = 竿オナ派
		ELSEIF TALENT:ACTOR:具現 && EXP:ACTOR:射精経験 >= MAX(EXP:ACTOR:絶頂経験*2/3, 1)
			LOCALS = 竿オナ派
		ELSE
			LOCALS = クリオナ派
		ENDIF
	CASE 2
		LOCALS = 膣オナ派
	CASE 3
		LOCALS = アナニー派
	CASE 4
		LOCALS = 胸オナ派
	ENDSELECT
CASE "好きな体位"
	LOCALS = 
	SIF GETBIT(VALUE, 0)
		LOCALS += "[正常位]"
	SIF GETBIT(VALUE, 1)
		LOCALS += "[後背位]"
	SIF GETBIT(VALUE, 2)
		LOCALS += "[屈曲位]"
	SIF GETBIT(VALUE, 3)
		LOCALS += "[対面座位]"
	SIF GETBIT(VALUE, 4)
		LOCALS += "[背面座位]"
	SIF GETBIT(VALUE, 5)
		LOCALS += "[騎乗位]"
	SIF GETBIT(VALUE, 6)
		LOCALS += "[押し倒し騎乗位]"

	SIF GETBIT(VALUE, 9)
		LOCALS += "[特に無し]"

	SIF GETBIT(VALUE, 10)
		LOCALS += "[Ａ正常位]"
	SIF GETBIT(VALUE, 11)
		LOCALS += "[Ａ後背位]"
	SIF GETBIT(VALUE, 12)
		LOCALS += "[Ａ屈曲位]"
	SIF GETBIT(VALUE, 13)
		LOCALS += "[Ａ対面座位]"
	SIF GETBIT(VALUE, 14)
		LOCALS += "[Ａ背面座位]"
	SIF GETBIT(VALUE, 15)
		LOCALS += "[Ａ騎乗位]"
	SIF GETBIT(VALUE, 16)
		LOCALS += "[押し倒しＡ騎乗位]"

	SIF GETBIT(VALUE, 19)
		LOCALS += "[貝合わせ]"

	LOCALS = %SUBSTRING(LOCALS, 1, STRLENS(LOCALS) - 2)%

CASE "動物耳"
	;特徴的な物のみ
	IF COND("種族：猫", ACTOR)
		LOCALS = 猫耳
	ELSEIF COND("種族：狼", ACTOR)
		LOCALS = 狼耳
	ELSEIF COND("種族：狐", ACTOR) || COND("種族：妖狐", ACTOR)
		LOCALS = 狐耳
	ELSEIF COND("種族：兎", ACTOR)
		LOCALS = うさ耳
	ELSEIF COND("種族：馬", ACTOR)
		LOCALS = 馬耳
	ELSEIF COND("種族：鼠", ACTOR)
		LOCALS = 鼠耳
	ENDIF
CASE "クリピアス"
	SIF HAVE_PENIS(ACTOR)
		LOCALS = ペニピアス
ENDSELECT
RETURNF LOCALS


;ARGでONとなっているビットの数
@NUM_BIT(ARG)
#FUNCTION
#DIM LCOUNT
LOCAL = 0
FOR LCOUNT, 0, 64
	SIF GETBIT(ARG, LCOUNT)
		LOCAL += 1
NEXT
RETURNF LOCAL

;ペニスの名前
@PENISNAME(ARG)
#FUNCTIONS
;持ち主はPLAYER
IF HAVE_PENIS(ARG)
	RESULTS = ペニス
ELSE
	RESULTS = ペニスバンド
ENDIF
RETURNF RESULTS

;-------------------------------------------------
;ハートマークの出力…口上テキストには組み込みにくいが、はっきりとしたハートマーク
;-------------------------------------------------
;Lucida Sans Unicode は大きめだが、下の文章をかなり消してしまうんですよねぇ
@HEARTMARK
GETFONT
CHKFONT "Times New Roman"
SIF RESULT
	SETFONT "Times New Roman"
PRINTFORM %UNICODE(0x2665)%
SETFONT RESULTS

;白抜きのハート
@WHITE_HEARTMARK
GETFONT
CHKFONT "Times New Roman"
SIF RESULT
	SETFONT "Times New Roman"
PRINTFORM %UNICODE(0x2661)%
SETFONT RESULTS

;大きめのハートマーク
@BIG_HEARTMARK
GETFONT
CHKFONT "Times New Roman"
SIF RESULT
	SETFONT "Times New Roman"
PRINTFORM %UNICODE(0x2764)%
SETFONT RESULTS

@BIG_BLACK_HEARTMARK
GETFONT
CHKFONT "メイリオ"
SIF RESULT
	SETFONT "メイリオ"
PRINTFORM %UNICODE(0x2764)%
SETFONT RESULTS

;-------------------------------------------------
;ダミーカラーの設定
;SETCOLOR SETCOLOR_DUMMY()　と使う
;元の文字と微妙に違う色の文字にすることでGPI+特有の文字のズレを解消する（ただし工夫や力技必須）
;()の中に値1～127を入れるとさらに微妙に別の色として扱えるが、10程度を超えると目に見えて違う色になってくる
;-------------------------------------------------
@SETCOLOR_DUMMY(ARG)
#FUNCTION
;RESULTの保持
LOCAL = RESULT
;現在のカラーの保持
GETCOLOR
LOCAL:1 = RESULT
RESETCOLOR

;デフォルトカラーの取得
GETCOLOR
IF ARG < 0 || ARG > 127
	LOCAL:2 = RESULT
ELSEIF RESULT%256 >= 255 - ARG
	LOCAL:2 = RESULT-(1+ARG)
ELSE
	LOCAL:2 = RESULT+(1+ARG)
ENDIF

;カラーの復元
SETCOLOR LOCAL:1
;RESULTの復元
RESULT = LOCAL

RETURNF LOCAL:2


;-------------------------------------------------
;色の設定
;-------------------------------------------------
@DEF_COLOR(ARGS)
#FUNCTION
SELECTCASE ARGS
CASE "茶色"
	RETURNF 0x90623C
CASE "ショッキングピンク"
	RETURNF 0xEF0EEF
CASE "ピンク"
	RETURNF 0xEF857C
CASE "ハートピンク"
	RETURNF 0xFFC0CB
CASE "赤"
	RETURNF 0xEF5445
CASE "紅"
	RETURNF 0xB815B8
CASE "黄色"
	RETURNF 0xEFD540
CASE "暗黄色"
	RETURNF 0xC4C400
CASE "イエロー"
	RETURNF 0xFFFF00
CASE "緑色", "緑"
	RETURNF 0x70E02C
CASE "青"
	RETURNF 0x4470EF
CASE "藍色"
	RETURNF 0x165E83
CASE "水色"
	RETURNF 0xB0CCEF
CASE "暗灰色"
	RETURNF 0x404040
CASE "灰色"
	RETURNF 0x707070
CASE "明灰色"
	RETURNF 0x909090
CASE "白"
	RETURNF 0xE3E3E3
CASEELSE
	RETURNF 0xE3E3E3
ENDSELECT

;-------------------------------------------------
;BARの色付き等一括版
;ぱ。さん作のぱにめーしょんを参考にさせていただきました
;ARGSにどのゲージかを指示
;ARGにバーにする変数、ARG:1に最大値、ARG:2に文字列としての長さ が入る
;-------------------------------------------------
@PRINT_BAR, ARGS, ARG, ARG:1, ARG:2
#DIM LCOUNT
;バーの要素の色
#DIM BAR_COLOR
;バーの背景(右側の余白部分といった方が良いかもしれない)の色
#DIM BG_COLOR
;バーの要素
#DIMS BAR_CHARA
;バーに挿入する文字
#DIMS INS_CHARA

SIF ARG < 0
	ARG = 0
SIF ARG:1 < 0
	ARG:1 = 0

PRINTPLAINFORM [

GETFONT
CHKFONT "ＭＳ ゴシック"
SIF RESULT
	SETFONT "ＭＳ ゴシック"

VARSET BAR_COLOR

;色と記号の設定
SELECTCASE ARGS
CASE "ＰＡＬＡＭ絶頂"
	BAR_COLOR = DEF_COLOR("ショッキングピンク")
CASE "ＰＡＬＡＭ"
	BAR_COLOR = ((DEF_COLOR("白")/65536)/10*(10-MIN(10, GET_PALAMLV(ARG))))*65536
	BAR_COLOR += (((DEF_COLOR("白")/256)%256)/10*(10-MIN(10, GET_PALAMLV(ARG))))*256
	BAR_COLOR += ((DEF_COLOR("白")%256)/10*(10-MIN(10, GET_PALAMLV(ARG))))
	BAR_COLOR += ((DEF_COLOR("ピンク")/65536)/10*MIN(10, GET_PALAMLV(ARG)))*65536
	BAR_COLOR += (((DEF_COLOR("ピンク")/256)%256)/10*MIN(10, GET_PALAMLV(ARG)))*256
	BAR_COLOR += ((DEF_COLOR("ピンク")%256)/10*MIN(10, GET_PALAMLV(ARG)))
CASE "黄色ゲージ"
	BAR_COLOR = DEF_COLOR("黄色")
CASE "白色ゲージ"
	BAR_COLOR = DEF_COLOR("白")
CASE "ハートピンクゲージ"
	BAR_COLOR = DEF_COLOR("ハートピンク")
CASE "桃色ゲージ"
	BAR_COLOR = DEF_COLOR("ピンク")
CASE "魂ゲージ"
	SELECTCASE ARG
	CASE IS >= 101
		BAR_COLOR = DEF_COLOR("緑")
	CASE 1 TO 100
		BAR_COLOR = DEF_COLOR("青")
	CASEELSE
		BAR_COLOR = DEF_COLOR("灰色")
	ENDSELECT
CASE "減少ゲージ"
	SELECTCASE ARG * 100 / ARG:1
	CASE IS >= 75
		BAR_COLOR = DEF_COLOR("緑")
	CASE IS >= 50
		BAR_COLOR = DEF_COLOR("青")
	CASE IS >= 25
		BAR_COLOR = DEF_COLOR("黄色")
	CASE IS >= 1
		BAR_COLOR = DEF_COLOR("紅")
	CASEELSE
		BAR_COLOR = DEF_COLOR("灰色")
	ENDSELECT
CASE "溜めゲージ"
	SELECTCASE ARG * 100 / ARG:1
	CASE IS >= 90
		BAR_COLOR = DEF_COLOR("ピンク")
	CASE IS >= 75
		BAR_COLOR = DEF_COLOR("黄色")
	CASEELSE
		BAR_COLOR = DEF_COLOR("青")
	ENDSELECT
CASE "欲求ゲージ"
	SELECTCASE ARG * 100 / ARG:1
	CASE IS >= 90
		BAR_COLOR = DEF_COLOR("ショッキングピンク")
	CASE IS >= 75
		BAR_COLOR = DEF_COLOR("ピンク")
	CASE IS >= 50
		BAR_COLOR = DEF_COLOR("黄色")
	CASEELSE
		BAR_COLOR = DEF_COLOR("青")
	ENDSELECT
ENDSELECT

;バーの色を決定
SETCOLOR BAR_COLOR

;バーの背景色
BG_COLOR = (MAX(30, (BAR_COLOR/65536)/5)*65536 + MAX(30, ((BAR_COLOR/256)%256)/5)*256 + MAX(30, (BAR_COLOR%256)/5) )

;基本は長方形のブロック□
BAR_CHARA = %UNICODE(0x2587)%

;PALAM形式のバーの最大値の算出
SELECTCASE ARGS
CASE "ＰＡＬＡＭ", "ＰＡＬＡＭ絶頂"
	IF GET_PALAMLV(ARG) >= 16
		ARG:1 = PALAM_LV(16)
	ELSE
		ARG:1 = PALAM_LV(GET_PALAMLV(ARG) + 1) - PALAM_LV(GET_PALAMLV(ARG) )
		ARG -= PALAM_LV(GET_PALAMLV(ARG) )
	ENDIF
ENDSELECT

SELECTCASE ARG
;値が０以下
CASE IS <= 0
	;バーの色を背景色に変更
	SETCOLOR BG_COLOR
	PRINTPLAINFORM %BAR_CHARA * ARG:2%
;値が最大値以上
CASE IS >= ARG:1
	;挿入する文字列があるか？MAXとか
	VARSET INS_CHARA
	SELECTCASE ARGS
	CASE "黄色ゲージ", "白色ゲージ", "ハートピンクゲージ", "桃色ゲージ", "ＰＡＬＡＭ"
		SIF ARG:2 >= 3
			INS_CHARA = MAX
	ENDSELECT
	FOR LCOUNT, 0, ARG:2
		IF INS_CHARA != "" && LCOUNT == ARG:2/2 - STRLENS(INS_CHARA)/2
			SETFONT RESULTS

			PRINTPLAINFORM %INS_CHARA%

			CHKFONT "ＭＳ ゴシック"
			SIF RESULT
				SETFONT "ＭＳ ゴシック"

			LCOUNT += STRLENS(INS_CHARA) - 1
		ELSE
			PRINTPLAINFORM %BAR_CHARA%
		ENDIF
	NEXT
CASEELSE
	FOR LCOUNT, 0, ARG:2
		SELECTCASE LCOUNT
		CASE (ARG*ARG:2 + ARG:1 - 1) / ARG:1
			;バーの色を背景色に変更
			SETCOLOR BG_COLOR
		ENDSELECT
		PRINTPLAINFORM %BAR_CHARA%
	NEXT
ENDSELECT
RESETCOLOR

SETFONT RESULTS

PRINTPLAINFORM ]


;-------------------------------------------------
;ARGに数値、ARG:1に最大値(これ以上だとS)を入れる。ABLの表記に適している。
;-------------------------------------------------
@PRINT_RANK, ARG, ARG:1
SIF ARG < 0
	ARG = 0
SIF ARG:1 < 0
	ARG:1 = 10

RESETCOLOR

PRINTPLAINFORM [

GETFONT
CHKFONT "ＭＳ ゴシック"
SIF RESULT
	SETFONT "ＭＳ ゴシック"

IF ARG == 0
	CALL PRINT_COLORTEXT, "-", DEF_COLOR("灰色")
ELSE
	IF ARG:1 < 10
		ARG = 1 + ARG*2
		ARG:1 *= 2
	ENDIF

	SELECTCASE ARG
	;最大値以上
	CASE IS >= ARG:1
		CALL PRINT_STR, "ハートピンク_S"
	;90%
	CASE IS >= MAX(ARG:1 * 90 / 100, 5)
		CALL PRINT_STR, "ピンク_A"
	;70%
	CASE IS >= MAX(ARG:1 * 70 / 100, 4)
		CALL PRINT_STR, "藍色_B"
	;50%
	CASE IS >= MAX(ARG:1 * 50 / 100, 3)
		CALL PRINT_STR, "黄色_C"
	;30%
	CASE IS >= MAX(ARG:1 * 30 / 100, 2)
		CALL PRINT_STR, "水色_D"
	;10%
	CASE IS >= MAX(ARG:1 * 10 / 100, 1)
		CALL PRINT_STR, "緑_E"
	;それ以下
	CASEELSE
		CALL PRINT_COLORTEXT, "-", DEF_COLOR("灰色")
		;CALL PRINT_STR, "灰色_-"
	ENDSELECT
ENDIF

SETFONT RESULTS

PRINTPLAINFORM ] 


;-------------------------------------------------
;性転換イベント
;-------------------------------------------------
@CHANGE_SEX, ARG
#DIM LCOUNT
#DIMS MEMOS_TALENT, 2
#DIMS MEMO_CSTR

;まずは性転換後に記録させる素質などをMEMO_CSTRに保存しておく(オトコ,オンナ,ふたなりを記録するので空行列にはならない)
LOCALS = /
FOR LCOUNT, 0, VARSIZE("TALENT")
	;記録させる素質
	SELECTCASE TALENTNAME:LCOUNT
	CASE "処女", "Ｖ損傷", "淫壺", "Ｖ性向", "貧乳", "巨乳", "母乳体質", "子宮性感"
	CASE "遅漏", "早漏", "男の娘"
	CASE "オンナ", "ふたなり", "オトコ", "小柄", "長身", "小尻", "巨尻"
	CASEELSE
		CONTINUE
	ENDSELECT
	SIF TALENT:ARG:LCOUNT
		LOCALS += @"%TALENTNAME:LCOUNT%_{TALENT:ARG:LCOUNT}\/"
NEXT
;排他素質も記録しておく
SIF STRCOUNTS(LOCALS, "小柄", "長身") == 0
	LOCALS += "中背_1/"
SIF STRCOUNTS(LOCALS, "小尻", "巨尻") == 0
	LOCALS += "並尻_1/"
SIF HAVE_VAGINA(ARG) && STRCOUNTS(LOCALS, "貧乳", "巨乳") == 0
	LOCALS += "並乳_1/"
MEMO_CSTR = %LOCALS%

;男は女に、女orふたなりは男に
;バイオリズムリセット
BASE:ARG:バイオリズム = 0

;CSTR:性転換前の素質 が既にあるなら元の性別に戻す
IF CSTR:ARG:性転換前の素質 != ""
	;一部の二者択一な素質は最初に全部0にする
	TALENT:ARG:身長 = 0
	TALENT:ARG:尻サイズ = 0
	TALENT:ARG:乳房 = 0

	VARSET LOCALS
	SPLIT CSTR:ARG:性転換前の素質, "/", LOCALS

	;CSTR:性転換前の素質は/から始まるからLOCALS:0は空文字なので飛ばす
	FOR LCOUNT, 1, 100
		SELECTCASE LOCALS:LCOUNT
		CASE ""
			BREAK
		ENDSELECT

		VARSET MEMOS_TALENT
		SPLIT LOCALS:LCOUNT, "_", MEMOS_TALENT

		SELECTCASE MEMOS_TALENT
		;二者択一的な素質のうち、実際の素質自体は存在しないもの
		CASE "中背", "並尻", "並乳"
			CONTINUE
		ENDSELECT

		TALENT:ARG:MEMOS_TALENT = TOINT(MEMOS_TALENT:1)
	NEXT
;性転換させる
ELSE
	IF IS_MALE(ARG)
		TALENT:ARG:性別 = 性別_オンナ
		;以下は、女性化ボーナス
		IF ABL:ARG:欲望 >= 3
;			TALENT:ARG:Ｖ性向 = RAND:2
			TALENT:ARG:濡れやすさ = RAND:2
		ENDIF

		;胸の大きさ
		IF RAND:3 == 0
			CALL CALC, "貧乳化", ARG
			SIF RAND:3 == 0
				CALL CALC, "小柄化", ARG
		ELSEIF RAND:2
			CALL CALC, "巨乳化", ARG
		ELSE
			CALL CALC, "並乳化", ARG
		ENDIF
	ELSE
		TALENT:ARG:性別 = 性別_オトコ
		CALL CALC, "男乳化", ARG
	ENDIF
ENDIF

;元の性別に戻る際に必要なものを記録しておく
CSTR:ARG:性転換前の素質 = %MEMO_CSTR%

;性別特有のありえない素質の消去や妊娠素質の調整
IF IS_MALE(ARG)
	FOR LCOUNT, 0, 200
		SIF CALCF("オンナ特有の素質", LCOUNT)
			TALENT:ARG:LCOUNT = 0
	NEXT
ELSEIF IS_FEMALE(ARG)
	FOR LCOUNT, 0, 200
		SIF CALCF("オトコ特有の素質", LCOUNT)
			TALENT:ARG:LCOUNT = 0
	NEXT
ENDIF

;続いて胸と尻と身長の調整。ここは持っている素質に従う
CALL SETFLAG, "素質から身長と３サイズを再測定", ARG

;CALL CHECK_FAV_ONANIE, ARG
;CALL CHECK_FAV_POSITION, ARG
CALL SETFLAG, "性転換フラグ", ARG
;CALL RECORD_SP_EXP, ARG



@MEMO_CHANGE_SEX(ARG)
#FUNCTIONS
#DIM LCOUNT
LOCALS = /
FOR LCOUNT, 0, VARSIZE("TALENT")
	;記録させる素質
	SELECTCASE TALENTNAME:LCOUNT
	CASE "処女", "Ｖ損傷", "淫壺", "Ｖ性向", "貧乳", "巨乳", "母乳体質", "子宮性感"
	CASE "遅漏", "早漏", "男の娘", "童貞"
	CASE "オンナ", "ふたなり", "オトコ", "小柄", "長身", "小尻", "巨尻"
	CASEELSE
		CONTINUE
	ENDSELECT
	SIF TALENT:ARG:LCOUNT
		LOCALS += @"%TALENTNAME:LCOUNT%_{TALENT:ARG:LCOUNT}\/"
NEXT
;排他素質も記録しておく
SIF STRCOUNTS(LOCALS, "小柄", "長身") == 0
	LOCALS += "中背_1/"
SIF STRCOUNTS(LOCALS, "小尻", "巨尻") == 0
	LOCALS += "並尻_1/"
SIF HAVE_VAGINA(ARG) && STRCOUNTS(LOCALS, "貧乳", "巨乳") == 0
	LOCALS += "並乳_1/"
RETURNF LOCALS



;-------------------------------------------------
; メモを作成・表示する関数です
;   ARGS:0 : メモの中に表示する文字列
;          : /で区切ることで複数行渡すことが出来ます
;          : また、以下の特殊処理を行います
;          : ・_T_ タブを挿入します(半角スペース8つ分)
;          :       文字の整列にお使い下さい
;          : ・_H_ ハートマークを挿入します
;          :       フォントの都合上、ハートマークを挿入すると
;          :       枠がずれますのでご注意下さい
;   ARGS:1 : メモの色を指定します
;          : 内部でDEF_COLORをコールしていますので、
;          : 使用可能な文字列はDEF_COLORを参照して下さい
;          : 省略した場合、いくつかの中からランダムで選択します
;   ARG    : 枠のマージンです
;          : 指定した数の「半角」スペース分だけ、枠の左側に
;          : スペースが設けられます
;          : 省略した場合、６（全角スペース３つ分）となります
;   Note.
;     渡されたテキストの書かれたメモを作成・表示します
;     枠のサイズはテキストによって自動で変化します
;-------------------------------------------------
@PRINT_LETTER, ARGS:0, ARGS:1, ARG
#DIM LINE_COUNT
#DIM LINE_NUM
#DIM LEN
#DIM LEN_TMP
#DIM CNT
#DIMS TMPS, 20
#DIMS COLORS
#DIMS WORKS
	VARSET LOCALS
	VARSET LOCAL
	LEN = 0

	SPLIT ARGS:0, "/", LOCALS
	LINE_NUM = RESULT
	LEN = 0
	FOR LINE_COUNT, 0, LINE_NUM
		; タブを復帰した場合を想定した上で最大文字列長(半角)を得る
		VARSET WORKS
		SPLIT LOCALS:LINE_COUNT, "_", TMPS
		FOR CNT, 0, RESULT
			SELECTCASE TMPS:CNT
				CASE "T"
					WORKS += " "
					WHILE (STRLENS(WORKS) % 8 != 0)
						WORKS += " "
					WEND
			CASEELSE
				WORKS += TMPS:CNT
			ENDSELECT
		NEXT
		SIF STRLENS(WORKS) > LEN
			LEN = STRLENS(WORKS)
	NEXT
	SIF LEN % 2
		LEN += 1

	; 描画
	;   色選択
	COLORS = %ARGS:1%
	IF COLORS == ""
		SELECTCASE RAND:10
			CASE 0
				COLORS = ショッキングピンク
			CASE 1
				COLORS = ピンク
			CASE 2
				COLORS = ハートピンク
			CASE 3
				COLORS = 黄色
			CASE 4
				COLORS = イエロー
			CASE 5
				COLORS = 緑
			CASE 6
				COLORS = 青
			CASE 7
				COLORS = 水色
		ENDSELECT
	ENDIF
	SETCOLOR DEF_COLOR(COLORS)

	;   上枠
	SIF ARG == 0
		ARG = 6
	;     ヘッダのスペース
	FOR CNT, 0, ARG
		PRINT  
	NEXT
	;     枠線(+1 はパディング用、+2 は左右の枠線分)
	FOR CNT, 0, (LEN / 2) + 1 + 2
		IF CNT == 0
			PRINT ┏
		ELSEIF CNT == ((LEN / 2) + 1 + 2) - 1
			PRINTL ┓
		ELSE
			PRINT ━
		ENDIF
	NEXT

	;   本分
	FOR LINE_COUNT, 0, LINE_NUM
		;     ヘッダのスペース
		FOR CNT, 0, ARG
			PRINT  
		NEXT
		; 枠線、文字列
		LEN_TMP = 0
		PRINT ┃ 
		SPLIT LOCALS:LINE_COUNT, "_", TMPS
		LOCAL = RESULT
		FOR CNT, 0, LOCAL
			SELECTCASE TMPS:CNT
				CASE "H"
					CALL HEARTMARK
					LEN_TMP += 1
				CASE "T"
					PRINT  
					LEN_TMP += 1
					WHILE ((LEN_TMP % 8) != 0)
						PRINT  
						LEN_TMP += 1
					WEND
			CASEELSE
				PRINTFORM %TMPS:CNT%
				LEN_TMP += STRLENS(TMPS:CNT)
			ENDSELECT
		NEXT
		; 後ろ揃え
		WHILE (LEN_TMP < LEN)
			PRINT  
			LEN_TMP += 1
		WEND
		PRINTL  ┃
	NEXT

	;   下枠
	;     ヘッダのスペース
	FOR CNT, 0, ARG
		PRINT  
	NEXT
	;     枠線
	FOR CNT, 0, (LEN / 2) + 1 + 2
		IF CNT == 0
			PRINT ┗
		ELSEIF CNT == ((LEN / 2) + 1 + 2) - 1
			PRINTL ┛
		ELSE
			PRINT ━
		ENDIF
	NEXT

	RESETCOLOR

RETURN 0

;----------------------------------------------------------------------------------
;精液に弱い場合、精液欲が満たされやすい
;ARG  　射精されたキャラ(TARGET or TARGET:1)
;----------------------------------------------------------------------------------
@EJAC_BONUS(ARG)
#FUNCTION
#DIM SPERM
SPERM = 0
;SIF COND("精飲に弱い", ARG) && (SHOOT("口") || SHOOT("口淫"))
	SPERM += 1

;SIF COND("膣内射精に弱い", ARG) && (SHOOT("膣内") || SHOOT("Ｖ中出し"))
	SPERM += 2

;SIF COND("肛内射精に弱い", ARG) && (SHOOT("アナル") || SHOOT("Ａ中出し"))
	SPERM += 2

RETURNF SPERM

;----------------------------------------------------------------------------------
;EXISTCSVの特定番号で0を変えさせる版
;----------------------------------------------------------------------------------
@EXISTCSV_EX(ARG)
#FUNCTION
SELECTCASE ARG
;あなたとドッペルあなた
CASE 0, 99
	RETURNF 0
CASEELSE
	RETURNF EXISTCSV(ARG)
ENDSELECT

;----------------------------------------------------------------------------------
;文字列ARGSに含まれているCALLNAMEからキャラの番号を返す関数
;----------------------------------------------------------------------------------
@GET_CHARANUM(ARGS)
#FUNCTION
#DIM LCOUNT
FOR LCOUNT, 2, CHARANUM
	SIF STRCOUNT(ARGS, CALLNAME:LCOUNT)
		RETURNF LCOUNT
NEXT
RETURNF 0

;----------------------------------------------------------------------------------
;"/"区切りで要素指定している文字列ARGSの末尾に %ARGS:1%/…%ARGS:4%/ を追加する関数。ARGS:1～4が既にある場合には無視する
;ARGS = %SETSTR(ARGS, ARGS:1)% のように使う
;----------------------------------------------------------------------------------
@SETSTR(ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4)
#FUNCTIONS
#DIM LCOUNT
#DIM IS_IGNORE, 5

VARSET LOCALS
SPLIT ARGS, "/", LOCALS

VARSET IS_IGNORE
ARGS = 
FOR LCOUNT, 0, 100
	SELECTCASE LOCALS:LCOUNT
	CASE ""
		CONTINUE
	CASE ARGS:1
		IS_IGNORE:1 = 1
	CASE ARGS:2
		IS_IGNORE:2 = 1
	CASE ARGS:3
		IS_IGNORE:3 = 1
	CASE ARGS:4
		IS_IGNORE:4 = 1
	ENDSELECT
	ARGS += @"%LOCALS:LCOUNT%/"
NEXT
FOR LCOUNT, 1, 5
	SIF IS_IGNORE:LCOUNT == 0 && ARGS:LCOUNT != ""
		ARGS += @"%ARGS:LCOUNT%/"
NEXT
RETURNF ARGS

;----------------------------------------------------------------------------------
;SETSTRの文字列消去版
;----------------------------------------------------------------------------------
@CLEARSTR(ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4)
#FUNCTIONS
#DIM LCOUNT

VARSET LOCALS
SPLIT ARGS, "/", LOCALS

ARGS = 
FOR LCOUNT, 0, 100
	SELECTCASE LOCALS:LCOUNT
	CASE "", ARGS:1, ARGS:2, ARGS:3, ARGS:4
		CONTINUE
	ENDSELECT
	ARGS += @"%LOCALS:LCOUNT%/"
NEXT
RETURNF ARGS

;----------------------------------------------------------------------------------
;CALLNAMEがARGSのキャラの番号を返す
;----------------------------------------------------------------------------------
@FIND_NO(ARGS)
#FUNCTION
#DIM LCOUNT

;まずは現在のCALLNAMEを見る
SIF FINDCHARA(CALLNAME, ARGS) > 0
	RETURNF FINDCHARA(CALLNAME, ARGS)
;次にCSVCALLNAMEを見る
FOR LCOUNT, 1, CHARANUM
	SIF ARGS == CSVCALLNAME(NO:LCOUNT)
		RETURNF LCOUNT
NEXT
RETURNF 0

;-------------------------------------------------
;ARG個改行を挟む
;-------------------------------------------------
@MULTILINE, ARG
#DIM DYNAMIC LCOUNT

SIF ARG <= 0
	RETURN 0

FOR LCOUNT, 0, ARG
	PRINTL
NEXT
;-------------------------------------------------
;画面全体で何行表示されるか調べる関数
;ちょっとでも一番上の行が表示されてるとカウントされるのでほぼ+1に近いかも
;-------------------------------------------------
@WINDOWROWS
#FUNCTION
#DIM DYNAMIC LINE

LINE = CLIENTHEIGHT()/GETCONFIG("一行の高さ")
SIF CLIENTHEIGHT()%GETCONFIG("一行の高さ")
	LINE += 1

RETURNF LINE

;-------------------------------------------------
;頻出のUNICODEを使いやすくする試み
;PRINT_STRにここを参考する場所があるので、増やしたらそっちも増やす事
;-------------------------------------------------
@UNI(ARGS)
#FUNCTIONS

LOCALS = 
SELECTCASE ARGS
;CASE "お弁当", "ドラゴン", "絆創膏", "オトコ", "オンナ", "ふたなり", "男の娘", "H"
;	PRINT_IMG ARGS
;;パラレル日本語
;CASE "そそ", "つん", "なお", "まふ", "はよ", "ひに", "やよ", "ゐに", "ゐん", "逆あ", "にす", "もむ", "をね", "小ゐ", "亜漢字1", "亜漢字2"
;	PRINT_IMG ARGS
ENDSELECT

RETURNF LOCALS


;-------------------------------------------------
;PALAM:ARGSにCUP:ARGSを加えた実質的には現在の値
;-------------------------------------------------
@NOW_PALAM(ARGS, ARG)
#FUNCTION
SIF ARG == 0 && TARGET
	ARG = TARGET
LOCAL = CUP:ARG:ARGS + PALAM:ARG:ARGS
RETURNF LOCAL

;-------------------------------------------------
;エラーのでないPALAMLV。間違えやすそうな気もする。
;-------------------------------------------------
@PALAM_LV(ARG)
#FUNCTION
SELECTCASE ARG
CASE IS <= 0
	RETURNF 0
;PALAMLVの値は、順に1:100, 2:500, 3:3000, 4:1万, 5:3万, 6:6万, 7:10万, 8:15万, 9:25万
CASE 1 TO 14
	LOCAL = PALAMLV:ARG
CASE 15
	LOCAL = 50000000
CASEELSE
	LOCAL = 100000000
ENDSELECT

RETURNF LOCAL

;-------------------------------------------------
;ARGのPALAMLVを返す
;-------------------------------------------------
@GET_PALAMLV(ARG)
#FUNCTION
SELECTCASE ARG
CASE IS <= 0
	RETURNF 0
CASE IS < 10000000
	LOCAL = GETPALAMLV(ARG, 13)
CASE IS < 50000000
	LOCAL = 14
CASE IS < 100000000
	LOCAL = 15
CASEELSE
	LOCAL = 16
ENDSELECT

RETURNF LOCAL

;-------------------------------------------------
;ARGの数値をPALAM_LVを用いてARG = PALAM_LV(n) + (PALAM_LV(n+1) - PALAM_LV(n) ) * X で表し、
;nに (n - ARG:1) を代入した値を返させる。ARG:1を省略したらARG:1は1
;例)PALAMが3512の際に1段階下げるならば、3512 = PALAM_LV(3) + (PALAM_LV(4) - PALAM_LV(3) ) * 0.073なので、
;DOWN_PALAMLV(3512, 1) = PALAM_LV(2) + (PALAM_LV(3) - PALAM_LV(2) ) * 0.073 = 682となる
;おもに、素質の影響で得るPALAMを少なくさせたい時に使う
;-------------------------------------------------
@DOWN_PALAMLV(ARG, ARG:1)
#FUNCTION
#DIM LCOUNT
#DIM MEMO_PALAMLV
#DIM MEMO_DIF, 2
#DIM MEMO_PER

;ARGが100未満なら０
SIF GET_PALAMLV(ARG) <= 0
	RETURNF 0
SIF ARG:1 <= 0
	ARG:1 = 1

;ARGのPALAMLVを求める
MEMO_PALAMLV = GET_PALAMLV(ARG)
MEMO_DIF = PALAM_LV(MEMO_PALAMLV + 1) - PALAM_LV(MEMO_PALAMLV)
MEMO_DIF:1 = ARG - PALAM_LV(MEMO_PALAMLV)

FOR LCOUNT, 0, 101
	SELECTCASE MEMO_DIF * LCOUNT / 100
	CASE IS >= MEMO_DIF:1
		MEMO_PER = LCOUNT
		BREAK
	ENDSELECT
NEXT

RETURNF PALAM_LV(MEMO_PALAMLV - ARG:1) + (PALAM_LV(MEMO_PALAMLV + 1 - ARG:1) - PALAM_LV(MEMO_PALAMLV - ARG:1) ) * MEMO_PER / 100

;-------------------------------------------------
;@DOWN_PALAMLV(ARG)の逆方向版
;-------------------------------------------------
@UP_PALAMLV(ARG, ARG:1)
#FUNCTION
#DIM LCOUNT
#DIM MEMO_PALAMLV
#DIM MEMO_DIF, 2
#DIM MEMO_PER

;ARGが100未満の時に０を100にするか、マイルドに５倍にしておくか…
;試しに０を100にしてみる
;SIF ARG <= 100
;	RETURNF ARG * 5
SIF ARG:1 <= 0
	ARG:1 = 1

;ARGのPALAMLVを求める
MEMO_PALAMLV = GET_PALAMLV(ARG)
MEMO_DIF = PALAM_LV(MEMO_PALAMLV + 1) - PALAM_LV(MEMO_PALAMLV)
MEMO_DIF:1 = ARG - PALAM_LV(MEMO_PALAMLV)

FOR LCOUNT, 0, 101
	SELECTCASE MEMO_DIF * LCOUNT / 100
	CASE IS >= MEMO_DIF:1
		MEMO_PER = LCOUNT
		BREAK
	ENDSELECT
NEXT

RETURNF PALAM_LV(MEMO_PALAMLV + ARG:1) + (PALAM_LV(MEMO_PALAMLV + 1 + ARG:1) - PALAM_LV(MEMO_PALAMLV + ARG:1) ) * MEMO_PER / 100


;-------------------------------------------------
;最大値指定をしなくていいEXPLVみたいなもの
;EXPLVの初期値, 0/1/5/20/50/100/150/200/300/400/500/600/700/800/900/1000/1200/1400/1600/1800/2000
;-------------------------------------------------
@EXP_LV(ARG)
#FUNCTION
SELECTCASE ARG
CASE IS <= 0
	RETURNF 0
CASE 1
	RETURNF 1
CASE 2
	RETURNF 5
CASE 3
	RETURNF 20
CASE 4
	RETURNF 50
CASE 5
	RETURNF 100
CASE 6
	RETURNF 150
CASE 7
	RETURNF 200
CASE 8
	RETURNF 300
CASE 9
	RETURNF 400
CASE 10
	RETURNF 500
CASE 11
	RETURNF 600
CASE 12
	RETURNF 700
CASE 13
	RETURNF 800
CASE 14
	RETURNF 900
CASE 15
	RETURNF 1000
CASEELSE
	RETURNF 1000 + (ARG - 15)*200
ENDSELECT

RETURNF LOCAL

@GET_EXP_LV(ARG)
#FUNCTION
SELECTCASE ARG
CASE IS <= 0
	RETURNF 0
CASE IS < 5
	RETURNF 1
CASE IS < 20
	RETURNF 2
CASE IS < 50
	RETURNF 3
CASE IS < 100
	RETURNF 4
CASE IS < 150
	RETURNF 5
CASE IS < 200
	RETURNF 6
CASE IS < 300
	RETURNF 7
CASE IS < 400
	RETURNF 8
CASE IS < 500
	RETURNF 9
CASE IS < 600
	RETURNF 10
CASE IS < 700
	RETURNF 11
CASE IS < 800
	RETURNF 12
CASE IS < 900
	RETURNF 13
CASE IS < 1000
	RETURNF 14
CASEELSE
	RETURNF (ARG - 1000)/200 + 15
ENDSELECT

RETURNF LOCAL


;-------------------------------------------------
;今回の調教でARGが得たARGS経験
;@EVENTTURNEND内で初期化される
;-------------------------------------------------
@EXP_GAIN(ARGS, ARG)
#FUNCTION
SIF ARG == 0 && TARGET
	ARG = TARGET
LOCAL = EXP:ARG:ARGS - TCVAR:ARG:(GETNUM(EXP, ARGS) + 200)
RETURNF LOCAL


@RESET_EXP_GAIN, ARG
FOR LOCAL, 0, 100
	TCVAR:ARG:(LOCAL + 200) = EXP:ARG:LOCAL
NEXT


@EQ_EXP_GAIN, ARG, ARG:1
TCVAR:(ARG:1):(ARG + 200) = EXP:(ARG:1):ARG

;-------------------------------------------------
;キャラARG:1が得たARGS経験の値ARGを、加算しつつ表示させるための関数。ARGはTARGETならば省略可能
;例）CALL PRINT_EXP_ADD, "羞恥快楽経験", 10, PLAYERだと、
;EXP:PLAYER:羞恥快楽経験 += 10
;PRINTFORML 羞恥快楽経験＋{10}（%CALLNAME:PLAYER%）
;に等しい。
;-------------------------------------------------
@PRINTL_EXP_ADD, ARGS, ARG, ARG:1
SIF ARG <= 0 || ARG:1 < 0
	RETURN 0
SIF ARG:1 == 0 && TARGET
	ARG:1 = TARGET

EXP:(ARG:1):ARGS += ARG
PRINTFORML %ARGS%＋{ARG}\@ ARG:1 != TARGET ? （%CALLNAME:(ARG:1)%） # \@

;-------------------------------------------------
;PRINTL_EXP_ADDのウェイト有り版
;-------------------------------------------------
@PRINTW_EXP_ADD, ARGS, ARG, ARG:1
SIF ARG <= 0 || ARG:1 < 0
	RETURN 0
SIF ARG:1 == 0 && TARGET
	ARG:1 = TARGET

EXP:(ARG:1):ARGS += ARG
PRINTFORMW %ARGS%＋{ARG}\@ ARG:1 != TARGET ? （%CALLNAME:(ARG:1)%） # \@

;-------------------------------------------------
;PREVUPは前回ターンでARGが得たUP:ARGS
;-------------------------------------------------
@PREVUP(ARGS, ARG)
#FUNCTION
SIF ARG == 0 && TARGET
	ARG = TARGET
LOCAL = TCVAR:ARG:(GETNUM(PALAM, ARGS) + 40)
RETURNF LOCAL

@SET_PREVUP, ARG
FOR LOCAL, 0, 16
	TCVAR:ARG:(40 + LOCAL) = CUP:ARG:LOCAL
NEXT

;-------------------------------------------------
;PREVEX(ARGS, ARG)は前回ターンでARGが得たNOWEX:ARGS
;-------------------------------------------------
@PREVEX(ARGS, ARG)
#FUNCTION
SIF ARG == 0 && TARGET
	ARG = TARGET

RETURNF TCVAR:ARG:(GETNUM(EX, ARGS) + 900)


@SET_PREVEX, ARG
FOR LOCAL, 0, 60
	TCVAR:ARG:(900 + LOCAL) = NOWEX:ARG:LOCAL
NEXT

;-------------------------------------------------
;色々と計算する関数(#FUNCTIONではない)
;-------------------------------------------------
@CALC(ARGS, ARG, ARG:1)
#DIM LCOUNT
#DIM MEMO, 100
#DIM MEMO_INMOU
#DIM MEMO_SIZE

SELECTCASE ARGS
;身長は通常156～168(162±6)、小柄147～155(151±4)、小柄Ⅱ134～146(140±6)、小柄Ⅲ 121～133(127±6)
;118cm～130cm
CASE "小柄Ⅲ化"
	BASE:ARG:身長 = 118 + RAND:13
	BASE:ARG:股下 = BASE:ARG:股下 * BASE:ARG:身長 / MAXBASE:ARG:身長
	TALENT:ARG:身長 = -3
	CALL CALC, "ＢＷＨ計測", ARG
;131cm～143cm
CASE "小柄Ⅱ化"
	BASE:ARG:身長 = 131 + RAND:13
	BASE:ARG:股下 = BASE:ARG:股下 * BASE:ARG:身長 / MAXBASE:ARG:身長
	TALENT:ARG:身長 = -2
	CALL CALC, "ＢＷＨ計測", ARG
;144cm～152cm
CASE "小柄化"
	BASE:ARG:身長 = 144 + RAND:9
	BASE:ARG:股下 = BASE:ARG:股下 * BASE:ARG:身長 / MAXBASE:ARG:身長
	TALENT:ARG:身長 = -1
	CALL CALC, "ＢＷＨ計測", ARG
;153cm～165cm
CASE "普通体型化"
	BASE:ARG:身長 = 153 + RAND:13
	BASE:ARG:股下 = BASE:ARG:股下 * BASE:ARG:身長 / MAXBASE:ARG:身長
	TALENT:ARG:身長 = 0
	CALL CALC, "ＢＷＨ計測", ARG
;166cm～182cm
CASE "長身化"
	BASE:ARG:身長 = 166 + RAND:17
	BASE:ARG:股下 = BASE:ARG:股下 * BASE:ARG:身長 / MAXBASE:ARG:身長
	TALENT:ARG:身長 = 1
	CALL CALC, "ＢＷＨ計測", ARG
;183cm～199cm
CASE "長身Ⅱ化"
	BASE:ARG:身長 = 183 + RAND:17
	BASE:ARG:股下 = BASE:ARG:股下 * BASE:ARG:身長 / MAXBASE:ARG:身長
	TALENT:ARG:身長 = 2
	CALL CALC, "ＢＷＨ計測", ARG
;200cm～220cm
CASE "長身Ⅲ化"
	BASE:ARG:身長 = 200 + RAND:21
	BASE:ARG:股下 = BASE:ARG:股下 * BASE:ARG:身長 / MAXBASE:ARG:身長
	TALENT:ARG:身長 = 3
	CALL CALC, "ＢＷＨ計測", ARG
CASE "ＢＷＨリセット"
	;MAXBASEをキャラのもともとの設定として扱うことで変化を表現する
	CALL CALC("ＢＷＨ計測", ARG)
	MAXBASE:ARG:バスト = BASE:ARG:バスト
	MAXBASE:ARG:アンダーバスト = BASE:ARG:アンダーバスト
	MAXBASE:ARG:ウェスト = BASE:ARG:ウェスト
	MAXBASE:ARG:ヒップ = BASE:ARG:ヒップ
CASE "ＢＷＨ計測"
	;カスタムキャラ作成時を想定
	VARSET LOCAL
	;ゴールデンカノン (バスト = 身長*0.54, ウェスト = 身長*0.38, ヒップ = 身長*0.54)を参考
	;ガチオトコの3sizeはバスト = 身長*0.55, ウェスト = 身長*0.43, ヒップ = 身長*0.48とする
	;男の娘の3sizeはバスト = 身長*0.53, ウェスト = 身長*0.40, ヒップ = 身長*0.50とする
	;ちなみに、ゴールデンカノン比は当然ながら”ウェストは細めでヒップは大きめ”である
	;http://rustyroom.web.fc2.com/Pcheck/Pcheck3.htmlを参考にアンダーバストのゴールデンを［（（ウエストの理想比率－１）＊0.9＋（トップバストの理想比率－１）＊0.1）＊0.75＋１］とする
	;さらに股下と身長の比例で0.45から0.52まで変化するとアンダーバストが0.02縮む
	;TALENT:体型はBMI18から19までスリムでアンダーバストが最大10%縮んでバストが最大3%縮む
	;BMI18以下はやせすぎとしてバストのみがウェイストのゴールデンカノンを考慮して縮む
	;BMI22から24までぽっちゃりとしてアンダーバストが最大10%増えてバストが最大3%増える
	;BMI24以上は肥満としてウェイストがゴールデンカノンの130％まで増えてバストがゴールデンカノンの110％になるがアンダーバストがゴールデンの公式を参考して再計算される
	;LOCALがウェスト補正、LOCAL:1がヒップ補正、LOCAL:2がバスト補正
	IF IS_MALE(ARG) && COND("男の娘", ARG) == 0
		LOCAL = 430
		LOCAL:1 = 480
		LOCAL:2 = 550
	ELSEIF COND("男の娘", ARG)
		LOCAL = 400
		LOCAL:1 = 500
		LOCAL:2 = 530
	;少女以下は体のラインがそれほど際立たない
	ELSEIF IS_小柄(ARG)
		LOCAL = 400
		LOCAL:1 = 510
		LOCAL:2 = 520
	ELSE
		SELECTCASE AGE(ARG)
			;オトナ
			CASE IS >= 4
				LOCAL = 420 + RAND:6
				LOCAL:1 = 570
				LOCAL:2 = 570
			;お姉さん
			CASE 3
				LOCAL = 410 + RAND:6
				LOCAL:1 = 550
				LOCAL:2 = 550
			CASE 2
				LOCAL = 400
				LOCAL:1 = 530
				LOCAL:2 = 530
			CASE 1
				LOCAL = 410
				LOCAL:1 = 510
				LOCAL:2 = 520
		ENDSELECT
	ENDIF

	;腰使いによる腰のくびれ＆大きなお尻
	LOCAL -= MIN(RAND:(1 + TALENT:ARG:天性の腰使い*10), 30)
	LOCAL:1 += MIN(RAND:(1 + TALENT:ARG:天性の腰使い*5), 30)

	;ランダム変化
	LOCAL:3 = RAND:26
	LOCAL = MULTIPLY(LOCAL, 90 + LOCAL:3)
	LOCAL:1 = MULTIPLY(LOCAL:1, 90 + LIMIT(RAND:31, LOCAL:3 - 10, LOCAL:3 + 5) )
	LOCAL:2 = MULTIPLY(LOCAL:2, 90 + LIMIT(RAND:31, LOCAL:3 - 10, LOCAL:3 + 5) )

	;誤差は95～120%+α(理想値よりもちょっと太めが平均)
	BASE:ARG:ウェスト = LIMIT(BASE:ARG:身長*LOCAL/1000, BASE:ARG:身長*34/100, BASE:ARG:身長*(45 + AGE(ARG))/100)

	IF IS_痩せぎみ(ARG)
		BASE:ARG:ウェスト -= RAND:(BASE:ARG:身長/20)
	ELSEIF IS_スリム(ARG)
		BASE:ARG:ウェスト -= RAND:(BASE:ARG:身長/30)
	ELSEIF IS_ぽっちゃり(ARG)
		BASE:ARG:ウェスト += RAND:(BASE:ARG:身長/30)
	ELSEIF IS_肥満(ARG)
		BASE:ARG:ウェスト += RAND:(BASE:ARG:身長/20)
	ENDIF

	BASE:ARG:ヒップ = LIMIT(BASE:ARG:身長*LOCAL:1/1000, BASE:ARG:ウェスト*130/100, BASE:ARG:ウェスト*(160 + AGE(ARG)*10)/100)

	;お姉さんやオトナは油断したりするのも良いよね…
	IF AGE(ARG) >= 3
		SELECTCASE RAND:20 + (AGE(ARG) == 3) * RAND:10
		CASE 0
			BASE:ARG:ウェスト += BASE:ARG:身長*5/100
			BASE:ARG:ヒップ += BASE:ARG:身長*15/200
		CASE 1, 2
			BASE:ARG:ウェスト += BASE:ARG:身長*4/100
			BASE:ARG:ヒップ += BASE:ARG:身長*6/100
		CASE 3, 4
			BASE:ARG:ウェスト += BASE:ARG:身長*3/100
			BASE:ARG:ヒップ += BASE:ARG:身長*9/200
		CASE 5, 6
			BASE:ARG:ウェスト += BASE:ARG:身長*2/100
			BASE:ARG:ヒップ += BASE:ARG:身長*3/100
		ENDSELECT
	ENDIF

	IF IS_痩せぎみ(ARG)
		IF BASE:ARG:ウェスト > BASE:ARG:身長 * CALCF("スリム倍数", ARG) * 1.2 / 100
			BASE:ARG:ウェスト = BASE:ARG:身長 * CALCF("スリム倍数", ARG) * 1.2 / 100
			BASE:ARG:ヒップ = MIN(BASE:ARG:ヒップ, BASE:ARG:ウェスト*(160 + AGE(ARG)*10) * 1.2/100)
		ENDIF
	ELSEIF IS_スリム(ARG)
		IF BASE:ARG:ウェスト > BASE:ARG:身長 * CALCF("スリム倍数", ARG) / 100
			BASE:ARG:ウェスト = BASE:ARG:身長 * CALCF("スリム倍数", ARG) / 100
			BASE:ARG:ヒップ = MIN(BASE:ARG:ヒップ, BASE:ARG:ウェスト*(160 + AGE(ARG)*10)/100)
		ENDIF
	ELSEIF IS_ぽっちゃり(ARG)
		IF BASE:ARG:ウェスト < BASE:ARG:身長 * CALCF("油断倍数", ARG) / 100
			BASE:ARG:ウェスト = BASE:ARG:身長 * CALCF("油断倍数", ARG) / 100
			BASE:ARG:ヒップ = MAX(BASE:ARG:ヒップ, BASE:ARG:ウェスト*130/100)
		ENDIF
	ELSEIF IS_肥満(ARG)
		IF BASE:ARG:ウェスト < BASE:ARG:身長 * CALCF("油断倍数", ARG) * 1.2 / 90
			BASE:ARG:ウェスト = BASE:ARG:身長 * CALCF("油断倍数", ARG) * 1.2 / 100
			BASE:ARG:ヒップ = MAX(BASE:ARG:ヒップ, BASE:ARG:ウェスト*130 * 1.2/100)
		ENDIF
	ELSE
		SELECTCASE BASE:ARG:ウェスト
		CASE IS >= BASE:ARG:身長 * CALCF("油断倍数", ARG) / 100
			BASE:ARG:ウェスト -= RAND:(BASE:ARG:身長/30) + 1
		CASE IS <= BASE:ARG:身長 * CALCF("スリム倍数", ARG) / 100
			BASE:ARG:ウェスト += RAND:(BASE:ARG:身長/30) + 1
		ENDSELECT
	ENDIF

	;カップ数に合わせてバスト変更
	IF IS_MALE(ARG)
		IF COND("男の娘", ARG)
			BASE:ARG:バスト = CALCF("トップバストとアンダーの差", CFLAG:ARG:カップサイズ) + MAX(BASE:ARG:身長*530/1000, BASE:ARG:ウェスト)
		ELSE
			BASE:ARG:バスト = 1 + RAND:4 + MAX(BASE:ARG:身長*550/1000, BASE:ARG:ウェスト*120/100)
		ENDIF
	ELSE
		BASE:ARG:バスト = CALCF("トップバストとアンダーの差", CFLAG:ARG:カップサイズ) + MAX(BASE:ARG:身長*432/1000, BASE:ARG:ウェスト)
	ENDIF

	IF COND("キャラメイク中")
		IF IS_超尻(ARG)
			CALL CALC, "超尻化", ARG
		ELSEIF IS_爆尻(ARG)
			CALL CALC, "爆尻化", ARG
		ELSEIF IS_巨尻(ARG)
			CALL CALC, "巨尻化", ARG
		ELSEIF IS_小尻(ARG)
			CALL CALC, "小尻化", ARG
		ELSE
			;ウェストとヒップに応じて小尻か巨尻か判定
			CALL SETFLAG, "ヒップ設定", ARG
		ENDIF
	ELSE
		;ウェストとヒップに応じて小尻か巨尻か判定
		CALL SETFLAG, "ヒップ設定", ARG
	ENDIF
CASE "男乳化"
	;AAA（5cm)未満
	IF COND("男の娘", ARG)
		BASE:ARG:バスト = 1 + RAND:4 + MAX(BASE:ARG:身長*470/1000, BASE:ARG:ウェスト)
	ELSE
		BASE:ARG:バスト = 1 + RAND:4 + MAX(BASE:ARG:身長*510/1000, BASE:ARG:ウェスト*120/100)
	ENDIF
	TALENT:ARG:乳房 = -2
	CFLAG:ARG:カップサイズ = 0
CASE "貧乳化"
	;AAA（5cm）、AA（7.5cm)、A（10cm）、B（12.5cm）
	;AAA（5cm）以上、B（13cm）未満
	BASE:ARG:バスト = 5 + RAND:8 + MAX(BASE:ARG:身長*432/1000, BASE:ARG:ウェスト)
	TALENT:ARG:乳房 = -1
	CFLAG:ARG:カップサイズ = CALCF("バストカップ", CALCF("バストカップ計算値", ARG) )
CASE "並乳化"
	;B（12.5cm）、C（15cm）、D（17.5cm）、E（20cm）
	;B（13cm）以上、E（20cm）未満
	BASE:ARG:バスト = 13 + RAND:7 + MAX(BASE:ARG:身長*432/1000, BASE:ARG:ウェスト)
	TALENT:ARG:乳房 = 0
	CFLAG:ARG:カップサイズ = CALCF("バストカップ", CALCF("バストカップ計算値", ARG) )
CASE "巨乳化"
	;E（20cm）、F（22.5cm）、G（25cm）、H（27.5cm)、I（30cm)
	;E（20cm）以上、G～I（25～30cm）のどれか未満
	BASE:ARG:バスト = 20 + RAND:(5) + MAX(BASE:ARG:身長*432/1000, BASE:ARG:ウェスト)
	TALENT:ARG:乳房 = 1
	CFLAG:ARG:カップサイズ = CALCF("バストカップ", CALCF("バストカップ計算値", ARG) )
CASE "爆乳化"
	;G（25cm）、H（27.5cm)、I（30cm)、J（32.5cm)、K（35cm)、L（37.5cm)、M（40cm)、N（42.5cm)
	;ここのみ長身の場合にはCONFIG("巨乳補正")…値は0or2or5 が２回かかる事となるため振れ幅がとても大きい
	;条件			最小		最大
	;巨乳はＦまで		25…G(25cm)	32…I(30cm)、つまりJ(32.5cm)未満
	;巨乳はＧまで		28…H(27.5cm)	34…J(32.5cm)、つまりK(35cm)未満
	;巨乳はＨまで		30…I(30cm)	37…K(35cm)、つまりL(37.5cm)未満
	;巨乳はＧまで＆長身	28…H(27.5cm)	36…K(35cm)、つまりL(37.5cm)未満
	;巨乳はＨまで＆長身	30…I(30cm)	42…M(40cm)、つまりN(42.5cm)未満

	LOCAL = 25 + RAND:8
	SIF IS_大柄(ARG)
		LOCAL += RAND:(1)

	BASE:ARG:バスト = MAX(LOCAL, 25) + MAX(BASE:ARG:身長*432/1000, BASE:ARG:ウェスト)
	TALENT:ARG:乳房 = 2
	CFLAG:ARG:カップサイズ = CALCF("バストカップ", CALCF("バストカップ計算値", ARG) )
CASE "超乳化"
	;J（32.5cm)、K（35cm)、L（37.5cm)、M（40cm)、N（42.5cm)、O（45cm)…… 
	;J～L（30～35cm）以上

	LOCAL = 33 + RAND:7
;	SIF IS_大柄(ARG)
;		LOCAL += CONFIG("巨乳補正")

	BASE:ARG:バスト = MAX(LOCAL, 33) + MAX(BASE:ARG:身長*432/1000, BASE:ARG:ウェスト)
	TALENT:ARG:乳房 = 3
	CFLAG:ARG:カップサイズ = CALCF("バストカップ", CALCF("バストカップ計算値", ARG) )
CASE "超尻化"
	BASE:ARG:ヒップ = MAX(BASE:ARG:身長*(60 + RAND:3)/100, 87)
	SIF COND("巨尻", ARG) == 3
		RETURN 1
	FOR LCOUNT, 0, 100
		SIF COND("巨尻", ARG) == 3
			BREAK
		BASE:ARG:ヒップ += BASE:ARG:身長*2/100
	NEXT

CASE "爆尻化"
	BASE:ARG:ヒップ = MAX(BASE:ARG:身長*(57 + RAND:3)/100, 87)
	SIF COND("巨尻", ARG) == 2
		RETURN 1
	IF COND("巨尻", ARG) <= 1
		FOR LCOUNT, 0, 100
			SIF COND("巨尻", ARG) >= 2
				BREAK
			BASE:ARG:ヒップ += BASE:ARG:身長*2/100
		NEXT
	ELSE
		FOR LCOUNT, 0, 100
			SIF COND("巨尻", ARG) <= 2
				BREAK
			BASE:ARG:ヒップ = MAX(BASE:ARG:ヒップ - BASE:ARG:身長*2/100, 87)
		NEXT
	ENDIF

CASE "巨尻化"
	BASE:ARG:ヒップ = MAX(BASE:ARG:身長*(54 + RAND:3)/100, 87)
	SELECTCASE COND("巨尻", ARG)
	CASE 1
		RETURN 1
	CASE 0
		FOR LCOUNT, 0, 100
			BASE:ARG:ヒップ += BASE:ARG:身長*2/100
			SIF COND("巨尻", ARG)
				BREAK
		NEXT
	CASEELSE
		FOR LCOUNT, 0, 100
			BASE:ARG:ヒップ -= BASE:ARG:身長*2/100
			SIF COND("巨尻", ARG) <= 1
				BREAK
		NEXT
	ENDSELECT

CASE "並尻化"
	BASE:ARG:ヒップ = MAX(BASE:ARG:身長*(51 + RAND:3)/100, BASE:ARG:ウェスト*100/(73 - RAND:4) )
	IF COND("小尻", ARG)
		FOR LCOUNT, 0, 100
			SIF COND("小尻", ARG) == 0
				BREAK
			BASE:ARG:ヒップ += BASE:ARG:身長*2/100
		NEXT
	ELSEIF COND("巨尻", ARG)
		FOR LCOUNT, 0, 100
			SIF COND("巨尻", ARG) == 0
				BREAK
			BASE:ARG:ヒップ -= BASE:ARG:身長*2/100
		NEXT
	ENDIF

CASE "小尻化"
	BASE:ARG:ヒップ = BASE:ARG:身長*(50 + RAND:5)/100
	SIF COND("小尻", ARG)
		RETURN 1
	FOR LCOUNT, 0, 100
		SIF COND("小尻", ARG)
			BREAK
		BASE:ARG:ヒップ -= BASE:ARG:身長*2/100
	NEXT
ENDSELECT


;-------------------------------------------------
;色々と計算する関数(#FUNCTION)
;ARGは変更しない事。また、CALCF内の別のものを参照することは禁止
;-------------------------------------------------
@CALCF(ARGS, ARG, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5)
#FUNCTION
#DIM LCOUNT
#DIM DYNAMIC MEMO, 10
#DIMS DYNAMIC MEMOS, 10

VARSET LOCAL
SELECTCASE ARGS
CASE "油断倍数"
	SIF IS_痩せぎみ(ARG)
		RETURNF 48
	RETURNF 46
CASE "スリム倍数"
	SIF IS_痩せぎみ(ARG)
		RETURNF 40
	RETURNF 38
;パートナーが絶頂した場合
CASE "絶頂時精力消費"
;	LOCAL = CHECK_ECST(ARG)
	LOCAL += MAX(NOWEX:ARG:Ｃ絶頂, NOWEX:ARG:Ｖ絶頂, NOWEX:ARG:Ａ絶頂, NOWEX:ARG:Ｂ絶頂)
	SIF LOCAL >= 1 && PALAM:ARG:連続絶頂COMBO数
		LOCAL += 1
;これは互いの技巧差を見る。負けているなら1まで
CASE "寸止め可能絶頂数"
	RETURNF MAX(MIN(ABL:PLAYER:技巧, 10) - MIN(ABL:技巧, 10), 1)
CASE "妊娠判定"
	SIF ARG == 0 && TARGET
		ARG = TARGET

	SELECTCASE COND("受精確率", ARG)
	CASE IS >= 100
		RETURNF 1
	CASE 1 TO 80
;		SIF TALENT:ARG:妊娠しづらい
;			RETURNF 0
	CASE IS <= 0
		RETURNF 0
	ENDSELECT

;	SIF CFLAG:ARG:要受精確率 <= COND("受精確率", ARG)
;		RETURNF 1
	RETURNF 0
;***種付け強化パッチで追加
;受精卵の着床しやすさ(＝妊娠しやすさ)を示す受精強度を算出します
CASE "受精強度算出"
	;基本値は父親の精子強度
	LOCAL = COND("精子強度", COND("精液の優勢", ARG))
	;母親が発情期
	;発情期には卵子が精子を受け入れやすく、受精強度が上がります
	IF COND("発情期", ARG)
		IF COND("種族：獣人", ARG)
			;獣人の場合
			;精子強度が2以上ならば精子強度を倍として扱う
			;発情期の獣人は、強いオスの精子をとくに歓迎してしまいます。
			SIF LOCAL > 1
				LOCAL *= 2
		ELSE
			;獣人以外は精子強度+1
			LOCAL += 1
		ENDIF
	ENDIF

	;母親の種族による影響
	;特定の種族は精子強度にある程度抵抗する
	;(それなり以上に強いオスでなければ雑魚扱い)
	IF COND("種族：竜人", ARG) || COND("種族：精霊", ARG)
		SIF LOCAL <= 3
			LOCAL = 1
	ELSEIF COND("種族：天使", ARG) || COND("種族：悪魔", ARG) || COND("種族：死神", ARG)
		SIF LOCAL <= 2
			LOCAL = 1
	ELSEIF COND("種族：淫魔", ARG)
		;淫魔はとても妊娠しづらく、かなりの精子強度を無視できます
		;代わりに、一定以上の強さのオスに犯されると身体が屈服してしまいます
		IF LOCAL <= 3
			LOCAL = 1
		ELSE
			;精子強度４以上ならば、精子強度をさらに倍として扱う
			LOCAL *= 2
		ENDIF
	ENDIF

	;最低値は1
	RETURNF MAX(1, LOCAL)
;***着床判定追加パッチで追加
CASE "膣内精液経験", "肛内精液経験", "精飲絶頂経験"
	SIF ARG < 0
		RETURNF 0
	SIF ARG == 0 && TARGET
		ARG = TARGET
	SIF ARG:1 == 0 && PLAYER
		ARG:1 = PLAYER

	SELECTCASE ARG:1
	CASE -4
		MEMOS = 一般人：
	CASE IS < 0
		RETURNF 0
	CASEELSE
			MEMOS = 一般人：
	ENDSELECT

	VARSET LOCALS

	;SELECTCASE ARGS
	;CASE "膣内精液経験"
	;	SPLIT CSTR:ARG:Ｖ中出され, "/", LOCALS
	;CASE "肛内精液経験"
	;	SPLIT CSTR:ARG:Ａ中出され, "/", LOCALS
	;CASE "精飲絶頂経験"
	;	SPLIT CSTR:ARG:精飲, "/", LOCALS
	;ENDSELECT

	FOR LCOUNT, 0, 30
		SIF LOCALS:LCOUNT == ""
			BREAK
		;対象を探す
		SIF MEMOS != SUBSTRING(LOCALS:LCOUNT, 0, STRLENS(MEMOS) )
			CONTINUE

		;相手：量 となっているので"量"部分を抜き出して、数に戻す
		MEMOS:1 = %SUBSTRING(LOCALS:LCOUNT, STRLENS(MEMOS), -1)%

		LOCAL = TOINT(MEMOS:1)

		RETURNF LOCAL
	NEXT
	RETURNF 0

CASE "Ｃ刺激"
	;上昇曲線としてはへの字型にする
	SELECTCASE ABL:Ｃ感覚
	CASE 0
		LOCAL = 100
	CASE 1 TO 4
		LOCAL = ABL:Ｃ感覚*200
	CASE 5 TO 10
		LOCAL = 800 + (ABL:Ｃ感覚 - 4)*100
	CASEELSE
		LOCAL = 1400 + (ABL:Ｃ感覚 - 10)*10
	ENDSELECT

	SELECTCASE ARG
	;道具の使用（基本値）
	CASE 0
	;舌や指などで刺激(緩やかな上昇)
	CASE 1
		LOCAL = MULTIPLY(LOCAL, 40 + MIN(ABL:Ｃ感覚, 10)*5)
	;素股系(刺激は副産物。弱め)
	CASE 2
		LOCAL = MULTIPLY(LOCAL, 30)
	;逆セックス系(強め)
	CASE 3
		LOCAL = MULTIPLY(LOCAL, 100 + ABL:PLAYER:Ｖ名器度)
	;逆アナル系(強め)
	CASE 4
		LOCAL = MULTIPLY(LOCAL, 100 + ABL:PLAYER:Ａ名器度)
	ENDSELECT
	SIF ARG:1
		LOCAL = LOCAL * ARG:1 / 100
CASE "Ｖ刺激"
	SELECTCASE ABL:Ｖ感覚
	CASE 0
		LOCAL = 100
	CASE 1 TO 4
		LOCAL = ABL:Ｖ感覚*200
	CASE 5 TO 10
		LOCAL = 800 + (ABL:Ｖ感覚 - 4)*100
	CASEELSE
		LOCAL = 1400 + (ABL:Ｖ感覚 - 10)*10
	ENDSELECT

	SELECTCASE ARG
	;道具の使用（基本値）
	CASE 0
	;舌や指などで刺激(緩やかな上昇)
	CASE 1
		LOCAL = MULTIPLY(LOCAL, 40 + MIN(ABL:Ｖ感覚, 10)*5)
	;セックスやバイブなど(急激な上昇)
	CASE 2
		LOCAL = MULTIPLY(LOCAL, 5 + MIN(ABL:Ｖ感覚, 10)*15)
	;フィストなど上級者向け(極端な上昇)
	CASE 3
		LOCAL = MULTIPLY(LOCAL, MAX(MIN(ABL:Ｖ感覚, 10)*50 - 200, (MIN(ABL:Ｖ感覚, 10) + 1)*5) )
	ENDSELECT
	SIF ARG:1
		LOCAL = LOCAL * ARG:1 / 100
CASE "Ａ刺激"
	SELECTCASE ABL:Ａ感覚
	CASE 0
		LOCAL = 100
	CASE 1 TO 4
		LOCAL = ABL:Ａ感覚*200
	CASE 5 TO 10
		LOCAL = 800 + (ABL:Ａ感覚 - 4)*100
	CASEELSE
		LOCAL = 1400 + (ABL:Ａ感覚 - 10)*10
	ENDSELECT

	SELECTCASE ARG
	;道具の使用（基本値）
	CASE 0
	;舌や指などで刺激(緩やかな上昇)
	CASE 1
		LOCAL = MULTIPLY(LOCAL, 40 + MIN(ABL:Ａ感覚, 10)*5)
	;セックスやバイブなど(急激な上昇)
	CASE 2
		LOCAL = MULTIPLY(LOCAL, 5 + MIN(ABL:Ａ感覚, 10)*15)
	;フィストなど上級者向け(極端な上昇)
	CASE 3
		LOCAL = MULTIPLY(LOCAL, MAX(MIN(ABL:Ａ感覚, 10)*50 - 200, (MIN(ABL:Ａ感覚, 10) + 1)*5) )
	ENDSELECT
	SIF ARG:1
		LOCAL = LOCAL * ARG:1 / 100
CASE "Ｂ刺激"
	SELECTCASE ABL:Ｂ感覚
	CASE 0
		LOCAL = 100
	CASE 1 TO 4
		LOCAL = ABL:Ｂ感覚*200
	CASE 5 TO 10
		LOCAL = 800 + (ABL:Ｂ感覚 - 4)*100
	CASEELSE
		LOCAL = 1400 + (ABL:Ｂ感覚 - 10)*10
	ENDSELECT

	SELECTCASE ARG
	;道具の使用（基本値）
	CASE 0
	;舌や指などで刺激(緩やかな上昇)
	CASE 1
		LOCAL = MULTIPLY(LOCAL, 40 + MIN(ABL:Ｂ感覚, 10)*5)
	;パイズリなど(刺激は副産物。弱め)
	CASE 2
		LOCAL = MULTIPLY(LOCAL, 10)
	;セックスやバイブなど(急激な上昇)
	CASE 3
		LOCAL = MULTIPLY(LOCAL, 5 + MIN(ABL:Ｂ感覚, 10)*15)
	ENDSELECT
	SIF ARG:1
		LOCAL = LOCAL * ARG:1 / 100
CASE "快感上昇の上限措置"
	;ARG=補正前の快感、ARG:1=対象部位の感度,ARG:2=敏感
	SIF ARG <= 0
		RETURNF 0

	;欲情とムードが両方高くないと得られる快感の上限が下がる
	;欲情によるペナルティ
	SELECTCASE PALAM:欲情
	CASE IS < 100
		ARG:1 = MAX(ARG:1 - 3, 0)
	CASE IS < 3000
		ARG:1 = MAX(ARG:1 - 2, 0)
	CASE IS < 10000
		ARG:1 = MAX(ARG:1 - 1, 0)
	ENDSELECT

	;ムードによる下方補正
	SELECTCASE MOOD_HEART()
	;ハート無し
	CASE 0
		ARG:1 = MAX(ARG:1 - 4, 0)
	;ハート一個
	CASE 1
		ARG:1 = MAX(ARG:1 - 3, 0)
	;ハート２個
	CASE 2
		ARG:1 = MAX(ARG:1 - 2, 0)
	;ハート３個
	CASE 3
		ARG:1 = MAX(ARG:1 - 1, 0)
	ENDSELECT

	;媚薬ボーナス
	SIF TEQUIP:媚薬
		ARG:1 += TEQUIP:媚薬/100

	;絶頂補正ボーナス
	SIF EX:絶頂数合計
		ARG:1 += 1

	;快楽ＬＶのキャップが E(1～2), D(3～4), C(5～6), B(7～8), A(9～10)なのでそれを区切りとする
	;LOCAL:1は得られる快感に補正がかかり始める値（大体PALAM_LVに沿っている）
	;LOCAL:2が上限のような役割となっている
	;PALAM_LVの値は、順に1:100,2:500,3:3000,4:1万,5:3万,6:6万,7:10万,8:15万,9:25万
	SELECTCASE ARG:1
	CASE 0
		LOCAL:1 = 100
		LOCAL:2 = 500
	CASE 1
		LOCAL:1 = 500
		LOCAL:2 = 3000
	CASE 2 TO 4
		LOCAL:1 = 3000
		LOCAL:2 = 6000
	CASE 5 TO 8
		LOCAL:1 = 6000
		LOCAL:2 = 10000
	CASE 9, 10
		LOCAL:1 = 10000
		LOCAL:2 = 20000
	CASEELSE
		LOCAL:1 = 10000 + 1000*(ARG:1 - 10)
		LOCAL:2 = 20000 + 2000*(ARG:1 - 10)
	ENDSELECT

	SELECTCASE ARG
	CASE IS <= LOCAL:1
		LOCAL = ARG
	CASEELSE
		;LOCAL:1を越えた分の快感については補正で減らされる
		LOCAL = LOCAL:1 + (ARG - LOCAL:1)/5
		SIF LOCAL > LOCAL:2
			LOCAL = LOCAL:2 + (LOCAL - LOCAL:2)/20
	ENDSELECT
	;PRINTFORML ARG = {ARG}, ARG:1 = {ARG:1}, LOCAL = {LOCAL}, LOCAL:1 = {LOCAL:1}, LOCAL:2 = {LOCAL:2}
	RETURNF LOCAL

CASE "快楽補正"
	;同性補正(ふたなりは無視)
	SIF COND("性別嫌悪", PLAYER)
		ARG = MULTIPLY(ARG, 100 - COND("性別嫌悪", PLAYER) * 30)
	;PALAM:欲情をみる
	ARG = MULTIPLY(ARG, LIMIT(80 + GET_PALAMLV(PALAM:欲情)*10, 90, 120) )

	;ABL:奉仕精神とEXP:奉仕快楽経験をみる
	LOCAL:1 = MIN(ABL:奉仕精神*10 + GET_EXP_LV(EXP:奉仕快楽経験)*5 + TALENT:献身的*30, 100)
	SELECTCASE SELECTCOM
	CASE 6, 140
		ARG = MULTIPLY(ARG, 100 + LOCAL:1)
	CASE 65, 75, 90 TO 94, 96 TO 119
		SIF TEQUIP:押し倒し == 0
			ARG = MULTIPLY(ARG, 100 + LOCAL:1/2)
	ENDSELECT

	;ABL:サドっ気とEXP:嗜虐快楽経験をみる
	LOCAL:1 = MIN(MIN(ABL:サドっ気, 5)*10 + GET_EXP_LV(EXP:嗜虐快楽経験)*5, 100)
	SELECTCASE SELECTCOM
	CASE 95, 105
		ARG = MULTIPLY(ARG, 100 + LOCAL:1)
	CASE 1, 9, 96, 120, 126
		SIF TEQUIP:押し倒し
			ARG = MULTIPLY(ARG, 100 + LOCAL:1/2)
	CASEELSE
		SIF TEQUIP:顔面騎乗
			ARG = MULTIPLY(ARG, 100 + LOCAL:1/2)
	ENDSELECT

	;ここまでで得た補正が２倍以上の場合には、２のn乗 < 補正倍率 < ２の(n+1)乗 →　(n+1)倍 < 補正倍率 < (n+2)倍　となるように。
	FOR LCOUNT, 0, 10
		LOCAL:2 = 10 - LCOUNT
		LOCAL:3 = POWER(2, LOCAL:2)
		IF ARG > LOCAL:3 * 1000
			ARG = (LOCAL:2 + 1)*1000 + (ARG - LOCAL:3*1000)/LOCAL:3
			BREAK
		ENDIF
	NEXT

	RETURNF ARG
CASE "基礎補正"
	TFLAG:基礎補正 = ARG
	;技巧の差などによる補正…PLAYERの技巧は防御に使う際には1.5倍強に換算する
	LOCAL = LIMIT(5 * (ABL:技巧 + (TEQUIP:押し倒し > 0) - (ABL:PLAYER:技巧 + 1)*3/2), -30, 30)

	;媚薬
	LOCAL += TEQUIP:PLAYER:媚薬

	;最悪でも3割は与える
	LOCAL = MAX(LOCAL, -70)
	TFLAG:基礎補正 = MULTIPLY(TFLAG:基礎補正, 100 + LOCAL)

	;永遠の愛、性癖など
	;魅力
	SIF TALENT:魅力
		TIMES TFLAG:基礎補正, 1.10
	;前のターンに手加減されている（このターンで手加減解除の予定）
	SIF TEQUIP:PLAYER:手加減 == 1
		TIMES TFLAG:基礎補正, 1.50
	;溜まっている
	SIF BASE:PLAYER:精力 > MAXBASE:PLAYER:精力 && HAVE_PENIS(PLAYER)
		TIMES TFLAG:基礎補正, 2.00

	IF PLAYER == MASTER
		IF TALENT:永遠の愛
			;３分の一にも達していないならボーナス
			SIF TFLAG:基礎補正*3 < MAXBASE:PLAYER:絶頂
				TFLAG:基礎補正 += MAXBASE:PLAYER:絶頂 / 5
		ELSE
;			SIF TALENT:初めての人
;				TIMES TFLAG:基礎補正, 1.10
		ENDIF
		;性癖
		IF CSTR:MASTER:性癖 != ""
			;ヒット数に応じてボーナス
			SELECTCASE CALCF("属性突かれ", TARGET)
			;5%
			CASE 1
				TFLAG:基礎補正 += (TFLAG:基礎補正*5)/100
			;5% + 1000
			CASE 2 TO 4
				TFLAG:基礎補正 += (TFLAG:基礎補正*5)/100 + 1000
			;5% + 2000
			CASE IS >= 5
				TFLAG:基礎補正 += (TFLAG:基礎補正*5)/100 + 2000
			ENDSELECT
		ENDIF
	ENDIF

	;-------------------------------------------------
	;ここから下はマイナス補正
	;-------------------------------------------------
	;目隠しされてると、技巧減少
	SIF TEQUIP:アイマスク
		TIMES TFLAG:基礎補正, 0.80
	;利尿剤を使われてると、技巧減少
	SIF TEQUIP:利尿剤
		TIMES TFLAG:基礎補正, 0.80
	;拘束されてると、技巧減少
	SIF TEQUIP:拘束
		TIMES TFLAG:基礎補正, 0.80
	;酔い
	IF STATE("悪酔い", TARGET)
		TIMES TFLAG:基礎補正, 0.40
	ELSEIF STATE("酔い", TARGET)
		TIMES TFLAG:基礎補正, 0.80
	ENDIF

	;体力が低い
	SIF BASE:体力 <= 500
		TIMES TFLAG:基礎補正, 0.50

	RETURNF TFLAG:基礎補正
CASE "実行値による欲情追加"
	IF TCVAR:奉仕快楽フラグ && TCVAR:嗜虐快楽フラグ
		LOCAL = 150 * MAX(ABL:奉仕精神, ABL:サドっ気)
	;奉仕中心
	ELSEIF TCVAR:奉仕快楽フラグ
		LOCAL = 150 * ABL:奉仕精神
	;嗜虐中心
	ELSEIF TCVAR:嗜虐快楽フラグ
		LOCAL = 150 * ABL:サドっ気
	ELSE
		RETURNF 0
	ENDIF

	;実行値の量で効果増
	LOCAL = MULTIPLY(LOCAL, 100 + TCVAR:やる気)
CASE "ペニス好き度"
	;おちんちんが好きかどうか。この値が高いと、ペニスにフィットする
	;恋慕
	SIF PLAYER == MASTER && TALENT:ARG:恋心
		LOCAL += 1
	SIF COND("性別嫌悪")
		RETURNF LOCAL
	;快感に素直or好色
	SIF IS_快感に素直(ARG)
		LOCAL += 1
	SIF TALENT:ARG:淫壺 || TALENT:ARG:尻穴狂い
		LOCAL += 1
	SIF ABL:ARG:精液中毒 >= 3
		LOCAL += 1
	SIF ABL:ARG:奉仕精神 >= 5
		LOCAL += 1
	SIF TALENT:ARG:献身的
		LOCAL += 1
CASE "Ｃ発情"
	SIF ARG == 0 && TARGET
		ARG = TARGET
	SIF HAVE_PENIS(ARG)
		RETURNF 0
	;0通常 1皮の下で勃起 2顔を出す 3ギンギン
	IF COND("調教中") == 0
	ELSE
		SIF PALAM:ARG:欲情 >= 30000
			LOCAL += 1
		SIF (ABL:ARG:Ｃ感覚 >= 5 && PALAM:ARG:欲情 >= 3000) || EX:ARG:Ｃ絶頂
			LOCAL += 1
		SIF EX:ARG:Ｃ絶頂 >= 5
			LOCAL += 1
	ENDIF
	SIF TALENT:ARG:淫核 && LOCAL < 2
		LOCAL += 1
;	SIF TALENT:ARG:クリピアス
;		LOCAL = MAX(LOCAL + 1, 2)
	SIF COND("陰核肥大", ARG)
		LOCAL += 1
	;包茎は陰核肥大じゃないと顔を出さない
	IF COND("陰核包茎", ARG)
		IF COND("陰核肥大", ARG)
			LOCAL = MAX(LOCAL - 2, 0)
		ELSE
			LOCAL = MIN(LOCAL, 1)
		ENDIF
	ENDIF

CASE "Ｖ発情"
	SIF ARG == 0 && TARGET
		ARG = TARGET
	SIF IS_MALE(ARG)
		RETURNF 0
	;0通常 1発情 2ビショビショ 3愛液駄々漏れ
	SIF TALENT:ARG:淫壺
		LOCAL += 1
	IF COND("調教中") == 0
	ELSE
		;欲情(媚薬)
		SIF PALAM:ARG:欲情 >= 10000 || TEQUIP:ARG:媚薬
			LOCAL += 1
		SIF ABL:ARG:Ｖ感覚 >= 3 && PALAM:ARG:欲情 >= 3000
			LOCAL += 1
		;絶頂
		SIF EX:ARG:Ｖ絶頂 || EX:ARG:絶頂数合計 >= 3
			LOCAL += 1
		SIF EX:ARG:Ｖ絶頂 >= 3 || EX:ARG:絶頂数合計 >= 10
			LOCAL += 1
	ENDIF
CASE "Ｂ発情"
	SIF ARG == 0 && TARGET
		ARG = TARGET
	;0陥没 1通常 2しこりかけ 3勃起 4ギンギン
	SIF COND("真性陥没乳首", ARG)
		RETURNF 0
	SIF TALENT:ARG:淫乳
		LOCAL += 1
	IF COND("調教中") == 0
		SIF COND("欲求不満", ARG)
			LOCAL += 1
	ELSE
		SIF (ABL:ARG:Ｂ感覚 >= 5 && PALAM:ARG:欲情 >= 3000) || PALAM:ARG:欲情 >= 10000 || EX:ARG:Ｂ絶頂
			LOCAL += 1
		SIF PALAM:ARG:欲情 >= 30000
			LOCAL += 1
		SIF EX:ARG:Ｂ絶頂 >= 5
			LOCAL += 1
	ENDIF
	IF COND("仮性陥没乳首", ARG)
		;授乳経験増加
		SIF LOCAL <= 2 && EXP_GAIN("授乳経験", ARG)
			LOCAL += 1
		SIF LOCAL <= 2
			RETURNF 0
	ELSEIF LOCAL == 0
		LOCAL += 1
	ENDIF
	SIF COND("乳首肥大", ARG)
		LOCAL += 1

CASE "絶頂"
	;射精条件を満たしているか？
	SELECTCASE BASE:ARG:絶頂
	CASE IS < MAXBASE:ARG:絶頂
		RETURNF 0
	CASE IS < MAXBASE:ARG:絶頂*2
		SIF COND("絶頂許可", PLAYER) == 0 && TEQUIP:ARG:逆調教 == 0
			RETURNF 0
	ENDSELECT

	;念のため
	SIF EJAC:ARG <= 0
		EJAC:ARG = 10000

	SELECTCASE BASE:ARG:絶頂
	CASE IS >= EJAC:ARG*6
		LOCAL = MAX(BASE:ARG:絶頂/(EJAC:ARG*3), 3)
	CASE IS >= EJAC:ARG*4
		LOCAL = 3
	CASE IS >= EJAC:ARG*2
		LOCAL = 2
	CASE IS >= EJAC:ARG
		LOCAL = 1
	CASEELSE
		RETURNF 0
	ENDSELECT


CASE "絶頂の原因"
	;ARGはキャラ、ARG:1はSELECTCOM
	SIF ARG < 0
		RETURNF 0
	;PLAYERにペニスがない時の絶頂フラグ（暫定）
	IF HAVE_PENIS(PLAYER) == 0
		LOCAL = 30

		;調教者Ｖインサート
		IF INSERT("Ｖインサート", PLAYER, ARG)
			LOCAL = 32
		;調教者Ａインサート
		ELSEIF INSERT("Ａインサート", PLAYER, ARG)
			LOCAL = 35
		;自慰する
		ELSEIF TEQUIP:PLAYER:自慰する
			LOCAL = 39
		ELSE
			SELECTCASE ARG:1
			;キス、クンニ、アナル舐めなど、口への刺激
			CASE 1, 4, 6, 9, 104
				LOCAL = 31
			;クンニ強制や逆レイプなど、アソコへの刺激
			CASE 80, 98, 120 TO 124
				LOCAL = 32
			;足コキ系
			CASE 95
				LOCAL = 33
			;泡踊りや身体系
			CASE 94
				LOCAL = 34
			;逆アナル
			CASE 96, 125 TO 129
				LOCAL = 35
			;胸への刺激
			CASE 11, 102
				LOCAL = 36
			;自慰する
			CASE 282
				LOCAL = 39
			ENDSELECT
		ENDIF
	ELSEIF HAVE_PENIS(PLAYER)
		;不慮の射精の場合は素股(身体)で射精となるようにする
		LOCAL = 7

		;Ｖインサート
		IF INSERT("Ｖインサート", ARG, PLAYER)
			LOCAL = 3
		;Ａインサート
		ELSEIF INSERT("Ａインサート", ARG, PLAYER)
			LOCAL = 4
		;調教者Ｖインサート
		ELSEIF INSERT("Ｖインサート", PLAYER, ARG)
			LOCAL = 10
		;調教者Ａインサート
		ELSEIF INSERT("Ａインサート", PLAYER, ARG)
			LOCAL = 11
		;シックスナイン
		ELSEIF TEQUIP:ARG:シックスナイン
			SELECTCASE TEQUIP:ARG:シックスナイン
			CASE 90, 97, 105
				LOCAL = 2
			CASE 91, 150
				LOCAL = 1
			CASE 92
				LOCAL = 5
			CASE 98
				LOCAL = 9
			CASEELSE
				LOCAL = 8
			ENDSELECT
		;自慰する
		ELSEIF TEQUIP:PLAYER:自慰する
			LOCAL = 20
		ELSE
			SELECTCASE ARG:1
			CASE 3
				SIF CHECK_COM("フェラ自慰", ARG:1) || CHECK_COM("６９自慰", ARG:1)
					LOCAL = 1
			;フェラ系
			CASE 91, 99, 140, 150
				LOCAL = 1
			;手コキ系
			CASE 90, 97, 105
				LOCAL = 2
				SIF CHECK_COM("Ａ責め手コキ", ARG:1)
					LOCAL = 15
			;セックス
			CASE 60 TO 69
				LOCAL = 3
			;Ａセックス
			CASE 70 TO 79
				LOCAL = 4
			;胸系
			CASE 81, 92
				LOCAL = 5
				SIF CHECK_COM("パイズリフェラ", ARG:1)
					LOCAL = 1
			;ニプルファック
			CASE 82
				LOCAL = 18
			;尿道挿入
			CASE 83 TO 88
				LOCAL = 19
			;足コキ系
			CASE 95
				LOCAL = 6
			;素股や身体系
			CASE 16, 93, 94, 100
				LOCAL = 7
			;キス、クンニ、アナル舐めなど、口への刺激
			CASE 1, 9
				LOCAL = 16
				SIF TEQUIP:ARG:押し倒し
					LOCAL = 14
			CASE 4, 6
				LOCAL = 8
			;逆クンニ
			CASE 98
				LOCAL = 9
			;調教者Ｖインサート
			CASE 120 TO 124
				LOCAL = 10
			;調教者Ａインサート
			CASE 125 TO 129
				LOCAL = 11
			;アナル奉仕
			CASE 96
				LOCAL = 15
			;ぱふぱふ
			CASE 104
				LOCAL = 17
				SIF CHECK_COM("ぱふぱふ手コキ", ARG:1)
					LOCAL = 2
			;自慰する
			CASE 282
				LOCAL = 20
			;胸への刺激
			CASE 11, 102
				LOCAL = 21
			ENDSELECT
		ENDIF
	ENDIF

CASE "自由な手"
	;手を拘束
	SIF GETBIT(TEQUIP:拘束, 20)
		RETURNF 0
	;オナニーに使える手の数
	LOCAL = 2
	;ARGでSELECTCOMを管理。ARGに入力が無いなら、SELECTCOMが代入される。
	SIF ARG == 0
		ARG = SELECTCOM
	SELECTCASE ARG
	CASE 3
		RETURNF LOCAL
	CASE 13, 14, 90, 92 TO 94, 97 TO 99, 104 TO 107
		LOCAL -= 2
	CASE 91, 96
		IF CHECK_COM("パイズリフェラ") || CHECK_COM("Ａ責め手コキ")
			LOCAL -= 2
		ELSE
			LOCAL -= 1
		ENDIF
	ENDSELECT
	;インサート中
	IF INSERT("インサート")
		IF INSERT("背面座位")
		ELSEIF INSERT("後背位")
			LOCAL -= 2
		ELSEIF INSERT("対面座位") || INSERT("ワイルドスウィング")
			LOCAL = 0
		ELSE
			LOCAL -= 1
		ENDIF
	ENDIF

CASE "お漏らし"
	;だいたい、値が5以上だとお漏らししてしまう
	;射精したor絶頂して無いor尿意が無いorオトコ
	SIF NOWEX:ARG:射精 || NOWEX:ARG:絶頂数合計 == 0 || BASE:ARG:尿意 < 5000 || IS_MALE(ARG)
		RETURNF 0
	IF BASE:ARG:尿意 < 10000
		SIF !TALENT:ARG:おもらし癖
			RETURNF 0
	ENDIF
	LOCAL = BASE:ARG:尿意 / 5000

	;Gスポ刺激
	IF CHECK_COM("Ｇスポ責め") || SELECTCOM == 66
		LOCAL += 1
		;前のターンからしつこく責めている
		SIF PREVPLAY("Ｇスポ責め")
			LOCAL += 3
	ENDIF
	SIF COND("疲労", ARG)
		LOCAL += 1
	SIF MAX(EX:ARG:Ｃ絶頂, EX:ARG:Ｖ絶頂, EX:ARG:Ａ絶頂) >= 20
		LOCAL += 1
	SIF PALAM:ARG:連続絶頂COMBO数 >= 5
		LOCAL += PALAM:ARG:連続絶頂COMBO数 / 5
	IF NOWEX:ARG:絶頂数合計 >= 5
		LOCAL += 2
	ELSEIF NOWEX:ARG:絶頂数合計 >= 3
		LOCAL += 1
	ENDIF
	;年齢層補正
	SIF AGE(ARG) >= 3 && LOCAL >= 1
		LOCAL -= 1
	SIF TALENT:ARG:おもらし癖
		LOCAL += 3
CASE "ランダム射精"
	IF RAND:2 == 0
		LOCAL = 0
	ELSEIF RAND:3
		;口→顔
		IF SHOOT("口")
			LOCAL = 2
		;手か胸→口
		ELSEIF SHOOT("手") || SHOOT("胸")
			LOCAL = 3
		;挿入系→お腹かお尻
		ELSEIF SHOOT("膣内") || SHOOT("アナル")
			IF INSERT("後背位") || INSERT("背面座位")
				LOCAL = 7
			ELSE
				LOCAL = 6
			ENDIF
		;→股間
		ELSE
			LOCAL = 5
		ENDIF
	ELSE
		;口→髪顔胸股間
		IF SHOOT("口")
			LOCAL = 1 + RAND:2 + 3*RAND:2
		;手or挿入系→髪顔口胸股間
		ELSEIF SHOOT("手") || SHOOT("膣内") || SHOOT("アナル")
			LOCAL = 1 + RAND:5
		;胸→髪顔口股間
		ELSEIF SHOOT("胸")
			LOCAL = LIMIT(1 + RAND:3 + 5*(RAND:4 == 0), 1, 5)
		;その他
		ELSE
			LOCAL = LIMIT(1 + RAND:2 + 5*(RAND:3 == 0), 1, 5)
		ENDIF
	ENDIF

CASE "甘い言葉成功"
	SIF ARG == 0 && TARGET
		ARG = TARGET

	SIF COND("調教中") == 0 && TALENT:恋心
		RETURNF 100

	;基本成功率は20%。ムード依存で上昇する
	LOCAL = 20
	;ムードで成功率変化
	SIF PLAYER == MASTER
		LOCAL += MOOD() / 5
;	;専用の素質を持ってる？
;	LOCAL += TALENT:PLAYER:甘い言葉*10
;	;二人きりだと確率ＵＰ
;	SIF FLAG:二人きり
;		LOCAL += 10

	;成功率Up補正
	SIF TALENT:ARG:素直
		LOCAL += 3
	SIF IS_プライド高い(ARG)
		LOCAL += 10
	SIF TALENT:ARG:好奇心
		LOCAL += 3
	SIF IS_活発(ARG)
		LOCAL += 3
	SIF TALENT:ARG:目立ちたがり
		LOCAL += 3
	SIF IS_恥じらい(TARGET)
		LOCAL += 3
	SIF IS_習得遅い(ARG)
		LOCAL += 3
	SIF TALENT:ARG:淫乱
		LOCAL += 5
	SIF TALENT:ARG:恋心
		LOCAL += 10
	SIF TALENT:ARG:永遠の愛
		LOCAL += 10
	;魔法使いは誉められるのが大好き！
	SIF COND("種族：魔法使い", ARG)
		LOCAL += 10
	SIF ABL:ARG:信頼
		LOCAL += ABL:ARG:信頼 * 3
	SIF TEQUIP:ARG:新妻プレイ
		LOCAL += 5

	SELECTCASE TRAINNAME_EX(PREVCOM)
	;前回Ｈがソフト愛撫系
	CASE "愛撫", "胸愛撫", "アソコ愛撫", "抱きしめる"
		LOCAL += 10
	;前回Ｈがキス
	CASE "キス"
		LOCAL += 15
	CASEELSE
		;前回Ｈがキス
		SIF TEQUIP:ARG:キス
			LOCAL += 15
		;見つめ合って挿入中
		SIF INSERT("正常位", ARG) + INSERT("対面座位", ARG)
			LOCAL += 15
	ENDSELECT

	;前回絶頂
	LOCAL += PREVEX("絶頂数合計", ARG)*5

	;成功率Down補正
	SIF TALENT:ARG:臆病
		LOCAL -= 8
	SIF TALENT:ARG:抵抗
		LOCAL -= 10
	SIF TALENT:ARG:ナマイキ
		LOCAL -= 10
	SIF TALENT:ARG:クール
		LOCAL -= 3
	SIF TALENT:ARG:感情乏しい
		LOCAL -= 5
	SIF TALENT:ARG:保守的
		LOCAL -= 3
	SIF TALENT:ARG:一線越えない
		LOCAL -= 8
	SIF IS_習得早い(ARG)
		LOCAL -= 3
	SIF TALENT:ARG:狂気
		LOCAL -= 15
	SIF TEQUIP:ARG:バイブ
		LOCAL -= 2
	SIF TEQUIP:ARG:アナルバイブ
		LOCAL -= 3
	SIF TEQUIP:ARG:媚薬
		LOCAL -= 5
	SIF TEQUIP:ARG:利尿剤
		LOCAL -= 5
	SIF TEQUIP:ARG:アイマスク
		LOCAL -= 1
	SIF TEQUIP:ARG:拘束
		LOCAL -= 5
	SIF TEQUIP:ARG:口枷
		LOCAL -= 3
	SIF TEQUIP:ARG:浣腸
		LOCAL -= 10
	SIF TEQUIP:ARG:ビデオカメラ
		LOCAL -= 3

	SIF TALENT:PLAYER:謎の魅力
		LOCAL += 10

;	SIF TEQUIP:ARG:堕天使の甘言
;		LOCAL += 10

	SIF LOCAL >= MAX(RAND:(100), 1)
		RETURNF LOCAL
	RETURNF 0

CASE "甘い言葉"
	LOCAL = 500
	SIF TALENT:臆病
		TIMES LOCAL, 1.25
	SIF TALENT:抵抗
		TIMES LOCAL, 1.50
	SIF TALENT:気丈
		TIMES LOCAL, 2.00
	SIF TALENT:ナマイキ
		TIMES LOCAL, 1.50
	SIF TALENT:クール
		TIMES LOCAL, 1.25
	SIF TALENT:感情乏しい
		TIMES LOCAL, 1.50
	SIF TALENT:保守的
		TIMES LOCAL, 1.25
	SIF TALENT:一線越えない
		TIMES LOCAL, 1.50
	SIF IS_恥じらい(TARGET)
		TIMES LOCAL, 1.25
	SIF TALENT:狂気
		TIMES LOCAL, 2.00
CASE "弱点突かれ"
	SELECTCASE ARG
	CASE 90, 97
		SIF COND("手に弱い", PLAYER)
			LOCAL += 1
	CASE 91, 99, 140, 150
		SIF COND("口に弱い", PLAYER)
			LOCAL += 1
	CASE 5, 81, 92, 94, 104
		SIF COND("胸に弱い", PLAYER)
			LOCAL += 1
	CASE 95
		SIF COND("脚に弱い", PLAYER)
			LOCAL += 1
	CASE 1, 13, 60 TO 69
		SIF COND("♀に弱い", PLAYER)
			LOCAL += 1
		SIF COND("♀に弱い", PLAYER) && TEQUIP:押し倒し && ARG == 1
			LOCAL += 1
		SIF COND("キスに弱い", PLAYER) && ARG == 63
			LOCAL += 1
	CASE 6
		SIF COND("キスに弱い", PLAYER)
			LOCAL += 1
	CASE 9, 14, 70 TO 79
		SIF COND("アナルに弱い", PLAYER)
			LOCAL += 1
		SIF COND("キスに弱い", PLAYER) && ARG == 73
			LOCAL += 1
	CASE 4, 120 TO 129
		SIF COND("♂に弱い", PLAYER)
			LOCAL += 1
	ENDSELECT

CASE "属性突かれ"
	SIF CSTR:PLAYER:性癖 == ""
		RETURNF 0

	FOR LCOUNT, 0, NUM("属性")
;		LOCALS:LCOUNT = %NAMES("属性", LCOUNT)%\/
		SIF STRCOUNT(CSTR:ARG:属性, LOCALS:LCOUNT) == 0
			CONTINUE
		SIF STRCOUNT(CSTR:PLAYER:性癖, LOCALS:LCOUNT)
			LOCAL += 1
	NEXT
CASE "苦痛刻印獲得"
;	SIF TEQUIP:ARG:押し倒し || SELECTCOM == 280
;		RETURNF 0
	SELECTCASE CUP:ARG:苦痛
	CASE IS >= 30000
		SIF MARK:ARG:苦痛刻印 < 3
			RETURNF 3
	CASE IS >= 10000
		SIF MARK:ARG:苦痛刻印 < 2
			RETURNF 2
	CASE IS >= 3000
		SIF MARK:ARG:苦痛刻印 < 1
			RETURNF 1
	ENDSELECT
	RETURNF 0

CASE "トップバストとアンダーの差"
	;0, 5, 8, 10, 13, 15, 18, 20, …
	SIF ARG == 0
		RETURNF 0
	RETURNF (ARG + 1)/2*5 + (ARG + 1)%2*3
CASE "バストカップ"
	;(0, 0-4), (1, 5-7), (2, 8-9), …
	RETURNF MAX(ARG/5*2 + ARG%5/3 - 1, 0)
CASE "バストカップ計算値"
	IF TALENT:ARG:乳房 == 0
		RETURNF 0
	ELSEIF IS_小柄(ARG)
		RETURNF MAX(BASE:ARG:バスト - MAX(BASE:ARG:身長*432/1000, BASE:ARG:ウェスト), 5)
	ELSE
		RETURNF BASE:ARG:バスト - MAX(BASE:ARG:身長*432/1000, BASE:ARG:ウェスト)
	ENDIF
CASE "オトコ特有の素質"
	SELECTCASE TALENTNAME:ARG
	CASE "早漏", "遅漏", "男の娘", "童貞"
		RETURNF 1
	CASEELSE
		RETURNF 0
	ENDSELECT
CASE "オンナ特有の素質"
	SELECTCASE TALENTNAME:ARG
	CASE "処女", "Ｖ損傷", "淫壺", "Ｖ性向", "貧乳", "巨乳", "母乳体質", "妊娠", "ラビアピアス", "避妊の護符", "常時Ｖバイブ"
		RETURNF 1
	CASEELSE
		RETURNF 0
	ENDSELECT
ENDSELECT
RETURNF LOCAL


;-------------------------------------------------
;各種フラグを設定する関数
;LOCALSは基本的にSPLITのみで使う
;-------------------------------------------------
@SETFLAG, ARGS, ARG, ARG:1, ARG:2
#DIM LCOUNT
#DIM LCOUNT2
#DIM MEMO_LINECOUNT
#DIM MEMO_TARGET
#DIM ACTOR
#DIM NUM_ACTOR
#DIM NUM_SELECT
#DIM DYNAMIC MEMO, 10
#DIMS DYNAMIC MEMOS, 10

MEMO_LINECOUNT = LINECOUNT
VARSET ACTOR

SELECTCASE ARGS
;CASE "身嗜み：自慰禁止"
;	SETBIT CFLAG:ARG:身嗜み, 46

ENDSELECT


;経験値の増加処理。ARGには主にCOND("絶頂", PLAYER)orNOWEX:絶頂数合計、ARG:1は経験値の受け取り手が入る
@GET_EXPERIENCE, ARG, ARG:1
#DIM ACTOR
IF ARG:1 == TARGET
	ACTOR = PLAYER
ELSE
	ACTOR = TARGET
ENDIF
;技巧差による補正をかける
LOCAL = MULTIPLY(ARG*5, 100 + LIMIT(ABL:ACTOR:技巧 - ABL:(ARG:1):技巧, -100, 100)*20)
LOCAL = MAX(LOCAL - 3, 1)
EXP:(ARG:1):経験値 += LOCAL


;-------------------------------------------------
;ラグジャラスヒットと恍惚判定
;ARGSは今のところ"コマンド"と"精液"がある
;PLAYERかTARGETかどうかで別物だけどここで一括
;-------------------------------------------------
;事前チェックと実行が分かれているのは"コマンド"のみ
;-------------------------------------------------
@CHECK_LUXURIOUS_HIT, ARGS, ARG
#DIM LCOUNT
#DIM CHOICE

SIF ARG == 0 && TARGET
	ARG = TARGET

SIF NOWEX:ARG:ラグジャラスヒット
	RETURN 0

;TCVAR:ARG:ラグジャラスヒット = 0

SELECTCASE ARGS
CASE "コマンド"
	SELECTCASE ARG
	CASE PLAYER
		;今のところプレイヤーで判定が起きるのは主人だけ
		SIF PLAYER != MASTER
			RETURN 0
		SIF CALCF("弱点突かれ", SELECTCOM) == 0
			RETURN 0

;		TCVAR:PLAYER:ラグジャラスヒット = TCVAR:PLAYER:絶頂増加 + CALCF("弱点突かれ", SELECTCOM)*1000

		;母乳を飲んでいると恍惚度合い上昇
;		TCVAR:PLAYER:ラグジャラスヒット = MULTIPLY(TCVAR:PLAYER:ラグジャラスヒット, 100 + EXP_GAIN("飲乳経験", PLAYER)*10)

		;性癖合致度
;		SIF CALCF("属性突かれ", PLAYER)
;			TCVAR:PLAYER:ラグジャラスヒット += (1000 + TCVAR:PLAYER:ラグジャラスヒット/5)*CALCF("属性突かれ", PLAYER)

		;永遠の愛
		IF PLAYER == MASTER
;			SIF TALENT:永遠の愛
;				TCVAR:PLAYER:ラグジャラスヒット += TCVAR:PLAYER:ラグジャラスヒット*30/100 + 2000
		ENDIF

;		SIF TCVAR:PLAYER:ラグジャラスヒット < 1000 || TCVAR:PLAYER:ラグジャラスヒット + BASE:PLAYER:絶頂 < MAX(MAXBASE:PLAYER:絶頂/4, 5000) || RAND:3
;			RETURN 0
;		SIF NOWEX:嘔吐 || NOWEX:排泄
;			RETURN 0
		NOWEX:PLAYER:ラグジャラスヒット = 1

	CASE TARGET
		;弱点等を用意してから設定する（PALAM:連続絶頂COMBO数でも判定）
		;まずは弱点を突かれたかで判定
		;GET_PALAMLV(ARG)の値は、順に1:100,2:500,3:3000,4:1万,5:3万,6:6万,7:10万,8:15万,9:25万

		;快感での汎用判定
;		SIF TALENT:淫核
;			TCVAR:ラグジャラスヒット = MAX(GET_PALAMLV(CUP:快Ｃ), TCVAR:ラグジャラスヒット)
;		SIF TALENT:淫壺
;			TCVAR:ラグジャラスヒット = MAX(GET_PALAMLV(CUP:快Ｖ), TCVAR:ラグジャラスヒット)
;		SIF TALENT:尻穴狂い
;			TCVAR:ラグジャラスヒット = MAX(GET_PALAMLV(CUP:快Ａ), TCVAR:ラグジャラスヒット)
;		SIF TALENT:淫乳
;			TCVAR:ラグジャラスヒット = MAX(GET_PALAMLV(CUP:快Ｂ), TCVAR:ラグジャラスヒット)

;		SIF TCVAR:ラグジャラスヒット <= RAND:10 || RAND:3
;			RETURN 0

		NOWEX:ラグジャラスヒット = 1
	ENDSELECT
ENDSELECT


@LUXURIOUS_HIT, ARGS, ARG
#DIM LCOUNT
#DIM CHOICE

SIF ARG == 0 && TARGET
	ARG = TARGET

SELECTCASE ARGS
CASE "コマンド"
	SIF NOWEX:ARG:ラグジャラスヒット == 0
		RETURN 0

	EX:ARG:ラグジャラスヒット += NOWEX:ARG:ラグジャラスヒット

	SELECTCASE ARG
	CASE PLAYER
;		BASE:PLAYER:絶頂 += TCVAR:PLAYER:ラグジャラスヒット
;		TCVAR:PLAYER:絶頂増加 += TCVAR:PLAYER:ラグジャラスヒット

		SETCOLOR DEF_COLOR("ハートピンク")
		PRINTFORML ＜ラグジャラスヒット！（%CALLNAME:PLAYER%）＞
		PRINTFORML %CALLNAME:PLAYER%は%CALLNAME:TARGET%に夢中になってしまった！
		RESETCOLOR

	CASE TARGET
		SETCOLOR DEF_COLOR("ハートピンク")
		PRINTFORML ＜ラグジャラスヒット！＞
		PRINTFORML %CALLNAME:PLAYER%は%CALLNAME:TARGET%の弱点を突いた！
		RESETCOLOR

		;IF TCVAR:ラグジャラスヒット*10 + PALAM:連続絶頂COMBO数*5 > RAND:100 && RAND:2 == 0
		;	PRINTFORML %CALLNAME:TARGET%は恍惚としている……
		;	CALL ADD_STATE, TARGET, "恍惚"
		;	FORCEWAIT
		;ENDIF
	ENDSELECT
CASE "精液"
	;イくのをこらえた状態で無いor既に絶頂済み
	SIF NOWEX:絶頂数合計 || NOWEX:イくのをこらえた == 0
		RETURN 0
	;精液に弱くないなら、ここで終了
;	SIF TALENT:精液に弱い == 0
;		RETURN 0

	IF SHOOT("口")
		SIF COND("精飲に弱い") == 0
			RETURN 0
		SIF EXP_GAIN("精飲絶頂経験") && RAND:3
			RETURN 0
	ELSEIF SHOOT("Ｖ中出し")
		SIF COND("膣内射精に弱い") == 0
			RETURN 0
		SIF EXP_GAIN("膣内精液経験") && RAND:3
			RETURN 0
		TIMES CUP:快Ｖ, 2.00
	ELSEIF SHOOT("Ａ中出し")
		SIF COND("肛内射精に弱い") == 0
			RETURN 0
		SIF EXP_GAIN("肛内精液経験") && RAND:3
			RETURN 0
		TIMES CUP:快Ａ, 2.00
	ENDIF

	NOWEX:精液絶頂 = 1
	EX:精液絶頂 += 1
	NOWEX:ラグジャラスヒット = 1
	EX:ラグジャラスヒット += 1
	NOWEX:イくのをこらえた = 0
	EX:イくのをこらえた = 0

;	CALL ORGASM_ADD_A
;	CALL ORGASM_ADD_C

	SETCOLOR DEF_COLOR("ハートピンク")
	PRINTFORML ＜ラグジャラスヒット！＞
	RESETCOLOR

	IF SHOOT("口")
		IF COND("絶頂", PLAYER) >= 2 && RAND:2
			PRINTFORM 大量に精液を飲まされた
		ELSE
			IF COND("絶頂", PLAYER) >= 2 && RAND:2
				PRINTFORM %TEXTR("大量の/溢れんばかりの/凄い量の")%
			ELSE
				PRINTFORM %TEXTR("勢いよく/熱い/濃厚な")%
			ENDIF
			IF SELECTCOM == 140
				PRINTFORM 精液%TEXTR("を食道に流し込まれた/を喉の奥に浴びせかけられた")%
			ELSE
				PRINTFORM 精液%TEXTR("で口内を満たされた/を口に流し込まれた/を喉の奥に浴びせかけられた")%
			ENDIF
		ENDIF
		PRINTFORM %CALLNAME:TARGET%は、
		PRINTFORM %TEXTR("気持ちよさのあまり/堪えきれずに/興奮のあまり/身体を震わせて/鼻から熱い吐息を漏らしながら/我慢できずに")%
		PRINTFORMW 絶頂してしまった！
	ELSEIF SHOOT("Ｖ中出し")
		IF BASE:胎内精子量 < 100 && NOWEX:Ｖ中出し == EX:Ｖ中出し && RAND:2
			PRINTFORM 飢えた子宮に精液をご馳走された
		ELSEIF RAND:2
			IF COND("絶頂", PLAYER) >= 2 && RAND:2
				PRINTFORM %TEXTR("大量の/溢れんばかりの/凄い量の")%
			ELSE
				PRINTFORM %TEXTR("勢いよく/熱い/濃厚な")%
			ENDIF
			PRINTFORM 精液%TEXTR("で子宮を叩かれた/を膣内に流し込まれた/を弱点に浴びせかけられた")%
		ELSEIF COND("絶頂", PLAYER) >= 2 && RAND:2
			PRINTFORM 大量に中出しをされた
		ELSE
			PRINTFORM 大好きな膣内射精をされた
		ENDIF
		PRINTFORM %CALLNAME:TARGET%は、
		PRINTFORM %TEXTR("気持ちよさのあまり/堪えきれずに/興奮のあまり/身体を震わせて/熱い吐息を漏らしながら/我慢できずに")%
		PRINTFORMW 絶頂してしまった！
	ELSEIF SHOOT("Ａ中出し")
		IF RAND:2
			IF COND("絶頂", PLAYER) >= 2 && RAND:2
				PRINTFORM %TEXTR("大量の/溢れんばかりの/凄い量の")%
			ELSE
				PRINTFORM %TEXTR("勢いよく/熱い/濃厚な")%
			ENDIF
			PRINTFORM 精液%TEXTR("で直腸の奥を叩かれた/をアナルに流し込まれた/を弱点に浴びせかけられた")%
		ELSEIF COND("絶頂", PLAYER) >= 2 && RAND:2
			PRINTFORM 大量にアナルに中出しをされた
		ELSE
			PRINTFORM 大好きな肛内射精をされた
		ENDIF
		PRINTFORM %CALLNAME:TARGET%は、
		PRINTFORM %TEXTR("気持ちよさのあまり/堪えきれずに/興奮のあまり/身体を震わせて/熱い吐息を漏らしながら/我慢できずに")%
		PRINTFORMW 絶頂してしまった！
	ENDIF
;	CALL ORGASM_ADD_TEXT, TARGET
ENDSELECT

;-------------------------------------------------
;射精箇所
;PLAYERがデフォ。省略可能。
;-------------------------------------------------
@SHOOT(ARGS, ARG)
#FUNCTION
SIF ARG == 0 && PLAYER > 0
	ARG = PLAYER
SIF ARGS == "こらえた" && NOWEX:ARG:イくのをこらえた
	RETURNF 1
SIF COND("絶頂", ARG) == 0
	RETURNF 0
SELECTCASE ARGS
CASE "膣内"
;	SIF TCVAR:ARG:プレイ区分メイン == 3
;		RETURNF 1
;	SIF COND("性欲解消実行中") && STR:プレイ内容 == "Ｖセックス" && COND("女性主導生セックス", ARG)
;		RETURNF 1
ENDSELECT
RETURNF 0


;-------------------------------------------------
;ARGの身につけている衣装全てを総合して、ARGSが可能かを判定する
;-------------------------------------------------
@CHECK_CLO(ARGS, ARG)
#FUNCTION

SIF ARG == 0 && TARGET
	ARG = TARGET
;下にはパンツなど、セットたりえるもの必須
SELECTCASE ARGS
CASE "足露出"
;	SIF EQUIP:ARG:靴
;		RETURNF 0
;	SIF EQUIP:ARG:靴下 && CHECK_SOCKS("足露出", ARG) == 0
;		RETURNF 0
	RETURNF 1
ENDSELECT

RETURNF 0


