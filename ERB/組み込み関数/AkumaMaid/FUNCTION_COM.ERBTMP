;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
;主に調教中に使用する関数
;≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
;-------------------------------------------------
;一行開ける命令。既に開けてある場合には開けない
;-------------------------------------------------
@BLANKLINE
;SIF LINECOUNT == TFLAG:BLANKLINE
;	RETURN 0

PRINTL 
;TFLAG:BLANKLINE = LINECOUNT

;-------------------------------------------------
;BLANKLINEを考慮したDRAWLINE
;-------------------------------------------------
@BLANK_DRAWLINE
;SIF LINECOUNT == TFLAG:BLANKLINE
	CLEARLINE 1

DRAWLINE
;TFLAG:BLANKLINE = LINECOUNT

;-------------------------------------------------
;ARG = TNUM(ARGS) && PREVCOM == TNUM(ARGS:1) または ARG = TNUM(ARGS:1) && PREVCOM == TNUM(ARGS) の時に１を返す
;ARGはだいたいSELECTCOM
;-------------------------------------------------
@COMBICOM(ARG, ARGS, ARGS:1)
#FUNCTION

SELECTCASE ARG
CASE TNUM(ARGS)
	SIF PREVCOM == TNUM(ARGS:1)
		RETURNF 1
CASE TNUM(ARGS:1)
	SIF PREVCOM == TNUM(ARGS)
		RETURNF 1
ENDSELECT
RETURNF 0

;-------------------------------------------------
;ひょっとしたら最も重要かもしれない値であるムードの計算
;最低が０で最高は240
;-------------------------------------------------
@MOOD()
#FUNCTION

;基本はFLAG:ムード
LOCAL = FLAG:ムード

;恭順と欲情で25まで
SELECTCASE PALAM:恭順 + PALAM:欲情
CASE IS > 240000
	LOCAL += 25
;MAX25
CASE IS > 120000
	LOCAL += (PALAM:恭順 + PALAM:欲情 - 120000)/24000 + 20
;MAX20
CASE IS > 60000
	LOCAL += (PALAM:恭順 + PALAM:欲情 - 60000)/12000 + 15
;MAX15
CASE IS > 30000
	LOCAL += (PALAM:恭順 + PALAM:欲情 - 30000)/6000 + 10
;MAX10
CASE IS > 10000
	LOCAL += (PALAM:恭順 + PALAM:欲情 - 10000)/4000 + 5
;MAX5
CASEELSE
	LOCAL += (PALAM:恭順 + PALAM:欲情)/2000
ENDSELECT

;恐怖、反感でキツいマイナス補正
LOCAL -= (NOW_PALAM("恐怖") + NOW_PALAM("反感") )/100

LOCAL = LIMIT(LOCAL, 0, 240)

RETURNF LOCAL

;-------------------------------------------------
;ムードの値をハートマークの個数に変換
;-------------------------------------------------
@MOOD_HEART()
#FUNCTION
LOCAL = MOOD() / 30
RETURNF LOCAL

;-------------------------------------------------
;コマンド選択によるムード増減のチェック
;ARGにはコマンド番号が代入される（通常はSELECTCOM）
;-------------------------------------------------
@MOOD_COM, ARG
#DIM ADD_MOOD

ADD_MOOD = 0
SELECTCASE ARG
CASE TNUM("愛撫"), TNUM("アナル愛撫"), TNUM("胸愛撫"), TNUM("アソコ愛撫"), TNUM("指挿入れ"), TNUM("アナル舐め")
	ADD_MOOD += 2
CASE TNUM("クンニ")
	SIF CHECK_COM("万謝の口付け", ARG)
		ADD_MOOD += 10
	ADD_MOOD += 3
CASE TNUM("キスする")
	;開幕キスはボーナス
	SIF CHECK_COM("テンダーキス", ARG)
		ADD_MOOD += 10
	ADD_MOOD += 5
;その他の愛撫
CASE 0 TO 29
	ADD_MOOD += 3
;インサート
CASE 60 TO 89
	SIF TRAIN_GENRE("対面座位", ARG)
		ADD_MOOD += 3
	SIF COND("好きな体位中")
		ADD_MOOD += 3
	ADD_MOOD += 1
;奉仕
CASE 90 TO 119
	SIF CHECK_COM("ペニスキス", ARG)
		ADD_MOOD += 10
	SIF CHECK_COM("見せ槍", ARG)
		ADD_MOOD += 10
	ADD_MOOD += 3
CASE TNUM("抱きしめる")
	;開幕だとボーナス
	SIF CHECK_COM("優しく抱きしめる", ARG)
		ADD_MOOD += 10
	ADD_MOOD += 8
ENDSELECT

;ハート数が少ない時にはボーナス
SELECTCASE MOOD_HEART()
CASE 0
	TIMES ADD_MOOD, 2.00
CASE 1
	TIMES ADD_MOOD, 1.50
CASE 4, 5
	TIMES ADD_MOOD, 0.67
CASE IS >= 6
	TIMES ADD_MOOD, 0.33
ENDSELECT

;初回選択で無いなら効果は半減
SIF CHOSECOM(ARG)
	ADD_MOOD /= 2

FLAG:ムード += ADD_MOOD


;-------------------------------------------------
;GETNUM(TRAINNAME, "フェラチオ")が長すぎるのでTNUM("フェラチオ")と書けるようにしただけの関数
;ARGSが空白だったりTRAINNAMEに該当するものが無い文字列の場合には-1が返る
;-------------------------------------------------
@TNUM(ARGS)
#FUNCTION
RETURNF GETNUM(TRAINNAME, ARGS)

;-------------------------------------------------
;主にプレイが可能かどうかだが、他にも様々な内容のものを判定する
;苦痛なく受け入れられるかの判定にも多用する
;-------------------------------------------------
@CHECK(ARGS, ARG, ARG:1)
#FUNCTION
;挿入されるものの大きさ
#DIM SIZE_INSERT
VARSET LOCAL
SIF ARG == 0 && TARGET
	ARG = TARGET

IF ARGS == "実行中のインサート"
	IF INSERT("Ｖインサート")
		ARGS = Ｖインサート
	ELSEIF INSERT("Ａインサート")
		ARGS = Ａインサート
	ENDIF
ENDIF
SELECTCASE ARGS
CASE "二穴挿入"
	SIF MIN(ABL:Ｖ感覚, ABL:Ａ感覚) < 3
		RETURNF 0
	RETURNF 1
;ARGのＶがARG:1のペニスにジャストフィットしている度合いを判定します
CASE "Ｖジャストフィット"
	SIF ARG:1 == 0 && PLAYER > 0
		ARG:1 = PLAYER
;	SIF ABL:ARG:Ｖ使い < 3 || TALENT:ARG:Ｖ損傷 || BASE:ARG:Ｖ履歴：記憶母数 < 100
;		RETURNF 0

;	LOCAL = CALCF("Ｖ履歴：Ｐ記憶", ARG, ARG:1) * 100 / BASE:ARG:Ｖ履歴：記憶母数
	;50以上でジャストフィットなので、それ未満は意味が無いので0を返す
;	SIF LOCAL < 50
		RETURNF 0
CASE "助手参加可能"
	SIF TARGET == ASSI
		RETURNF 0
	SIF ASSI && STATE("撃沈", ASSI) == 0
		RETURNF 1
ENDSELECT
RETURNF LOCAL

;-------------------------------------------------
;コマンドに対応した装備品の値を返す関数
;CHECK_TEQUIP(31)ならTEQUIP:バイブの値を返す
;-------------------------------------------------
@CHECK_TEQUIP(ARG, ARG:1)
#FUNCTION
SIF ARG < 0
	RETURNF 0
SIF ARG:1 == 0 && TARGET
	ARG:1 = TARGET
SELECTCASE ARG
CASE 31
	RETURNF TEQUIP:(ARG:1):バイブ
CASE 33
	RETURNF TEQUIP:(ARG:1):アナルバイブ
CASE 133
	RETURNF TEQUIP:(ARG:1):アイマスク
CASE 134
	RETURNF TEQUIP:(ARG:1):拘束
CASE 135
	RETURNF TEQUIP:(ARG:1):口枷
CASE 136
	RETURNF TEQUIP:(ARG:1):浣腸
ENDSELECT
RETURNF 0

;-------------------------------------------------
;TARGETに、今付けたTEQUIPに加えて、ARGS:1～ARGS:4を着けるか聞く関数
;TEQUIPに対応した名称は@NAMESで管理する。もしも対応したものが無いならTEQUIPNAME。
;-------------------------------------------------
@ADD_TEQUIP, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4
#DIM LCOUNT
#DIM NUM_SELECT
#DIM MEMO_REDRAW
#DIM MEMO_TEQUIP, 5
#DIMS TEXT_CHANGE

VARSET MEMO_TEQUIP
NUM_SELECT = 0
FOR LCOUNT, 1, 5
	SIF ARGS:LCOUNT == ""
		BREAK

	MEMO_TEQUIP:LCOUNT = TEQUIP:(ARGS:LCOUNT)
	;すでに身に着けている
	SIF TEQUIP:(ARGS:LCOUNT)
		CONTINUE
	NUM_SELECT += 1
NEXT
;すでにフル装備なら終わり
SIF NUM_SELECT == 0
	RETURN 0

MEMO_REDRAW = CURRENTREDRAW()
REDRAW 0

PRINTL 
;PRINTFORML %NAMES(ARGS)%に加えて、%CALLNAME:TARGET%になにか着けさせますか？
;選択肢の表示
CALL SHOW_ADD_TEQUIP, ARGS:1, ARGS:2, ARGS:3, ARGS:4

;何かを新たにつけさせたならそれを表示する
TEXT_CHANGE = 
FOR LCOUNT, 1, 5
	SIF ARGS:LCOUNT == ""
		BREAK

;	SIF MEMO_TEQUIP:LCOUNT != TEQUIP:(ARGS:LCOUNT)
;		TEXT_CHANGE += @"%NAMES(ARGS:LCOUNT)%と"
NEXT
SIF TEXT_CHANGE != ""
	PRINTFORMW %CALLNAME:TARGET%に%SUBSTRING(TEXT_CHANGE, 0, STRLENS(TEXT_CHANGE) - 2)%も着けさせました。

REDRAW MEMO_REDRAW

;-------------------------------------------------
;@ADD_TEQUIPの実際に何つけるかを選択させる部分
;選択肢表示の問題があるので、選択終了まではTEQUIPの値は弄らない
;-------------------------------------------------
@SHOW_ADD_TEQUIP, ARGS, ARGS:1, ARGS:2, ARGS:3
#DIM LCOUNT
#DIM MEMO_LINECOUNT
#DIM CHOICE
#DIM NUM_SELECT
;これにARGS:0～ARGS:3までの値の変更を記録させる
#DIM SELECTED_CHOICE, 4
#DIM IS_ADDTEQUIP

;これを変化させる事で実際に着けることにしたかどうかを判定する
VARSET SELECTED_CHOICE

$START_SELECT

MEMO_LINECOUNT = LINECOUNT

IS_ADDTEQUIP = 0
NUM_SELECT = 0
FOR LCOUNT, 0, 4
	SIF ARGS:LCOUNT == ""
		BREAK

	SELECTCASE TEQUIP:(ARGS:LCOUNT)
	CASE 0
		TEQUIP:(ARGS:LCOUNT) = SELECTED_CHOICE:LCOUNT
;		PRINTFORML  [{LCOUNT, 2}] \@ TEQUIP:(ARGS:LCOUNT) ? ○ # －\@ %NAMES(ARGS:LCOUNT)%
		TEQUIP:(ARGS:LCOUNT) = 0
	CASEELSE
;		CALL PRINT_STRL, @"灰色_ [{LCOUNT, 2}] ○ %NAMES(ARGS:LCOUNT)%は既に着けています"
	ENDSELECT

	NUM_SELECT += 1
	SIF SELECTED_CHOICE:LCOUNT
		IS_ADDTEQUIP = 1
NEXT
;何かを着けた
PRINTFORML [100] \@ IS_ADDTEQUIP ? これでよい # 別に着けなくていい \@

CALL INPUT_SELECT, NUM_SELECT, 100
CHOICE = RESULT

SELECTCASE CHOICE
CASE 100
	FOR LCOUNT, 0, 4
		SIF ARGS:LCOUNT == ""
			BREAK

		SIF TEQUIP:(ARGS:LCOUNT)
			CONTINUE
		TEQUIP:(ARGS:LCOUNT) = SELECTED_CHOICE:LCOUNT
	NEXT
	RETURN 1
CASEELSE
	IF TEQUIP:(ARGS:CHOICE) == 0
		;この中ではTEQUIP:(ARGS:CHOICE)の値が実際に変更しているので少々操作する
		TEQUIP:(ARGS:CHOICE) = SELECTED_CHOICE:CHOICE
		CALL SHOW_SELECT_TEQUIP, ARGS:CHOICE
		SELECTED_CHOICE:CHOICE = TEQUIP:(ARGS:CHOICE)
		TEQUIP:(ARGS:CHOICE) = 0
	ENDIF
ENDSELECT

CLEARLINE LINECOUNT - MEMO_LINECOUNT
GOTO START_SELECT

;-------------------------------------------------
;TARGETに、今は装備していないTEQUIP:ARGSを選ばせる選択肢を出す関数（bitで名前が変更するような物には対応していない）
;もしもARGSが１種類しかないようならば値を1⇔0にする
;-------------------------------------------------
@SHOW_SELECT_TEQUIP, ARGS
#DIM LCOUNT
#DIMS MEMO_TEQUIPNAME
#DIM NUM_SELECT
#DIM MEMO_TEQUIP

MEMO_TEQUIP = TEQUIP:ARGS

;複数の形態があるかを判定
TEQUIP:ARGS = 1
;MEMO_TEQUIPNAME = %NAMES(ARGS)%
NUM_SELECT = 1

FOR LCOUNT, 2, 10
	TEQUIP:ARGS = LCOUNT

;	SELECTCASE NAMES(ARGS)
;	CASE MEMO_TEQUIPNAME, TEQUIPNAME:GETNUM(TEQUIP, ARGS)
;		SIF LCOUNT >= 2
;			BREAK
;	CASEELSE
;		NUM_SELECT += 1
;	ENDSELECT
NEXT

TEQUIP:ARGS = MEMO_TEQUIP
;この装備品は１種類しかない
IF NUM_SELECT == 1
	INVERTBIT TEQUIP:ARGS, 0
	RETURN 1
ENDIF

;２種類以上ある
PRINTFORML どれにしますか？
FOR LCOUNT, 0, NUM_SELECT
	TEQUIP:ARGS = LCOUNT + 1
;	PRINTFORML  [{LCOUNT, 2}] %NAMES(ARGS)%
NEXT
TEQUIP:ARGS = MEMO_TEQUIP
PRINTFORML [100] \@ TEQUIP:ARGS ? 外す # 戻る\@

CALL INPUT_SELECT, NUM_SELECT, 100

SELECTCASE RESULT
CASE 100
	TEQUIP:ARGS = 0
	RETURN 0
CASEELSE
	TEQUIP:ARGS = RESULT + 1
ENDSELECT

RETURN 1

;-------------------------------------------------
;ADD_TEQUIPの逆バージョン
;-------------------------------------------------
@REMOVE_TEQUIP, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4
#DIM LCOUNT
#DIM NUM_SELECT
#DIM MEMO_REDRAW
#DIM MEMO_TEQUIP, 5
#DIMS TEXT_CHANGE

VARSET MEMO_TEQUIP
NUM_SELECT = 0
FOR LCOUNT, 1, 5
	SIF ARGS:LCOUNT == ""
		BREAK

	MEMO_TEQUIP:LCOUNT = TEQUIP:(ARGS:LCOUNT)
	;身に着けてない
	SIF TEQUIP:(ARGS:LCOUNT) == 0
		CONTINUE
	NUM_SELECT += 1
NEXT
;何も身に着けていないなら終わり
SIF NUM_SELECT == 0
	RETURN 0

MEMO_REDRAW = CURRENTREDRAW()
REDRAW 0

PRINTL 
;PRINTFORML %NAMES(ARGS)%に加えて、%CALLNAME:TARGET%になにか外させますか？
;選択肢の表示
CALL SHOW_REMOVE_TEQUIP, ARGS:1, ARGS:2, ARGS:3, ARGS:4

;何かを新たに外させたならそれを表示する
TEXT_CHANGE = 
FOR LCOUNT, 1, 5
	SIF ARGS:LCOUNT == ""
		BREAK

;	SIF MEMO_TEQUIP:LCOUNT != TEQUIP:(ARGS:LCOUNT)
;		TEXT_CHANGE += @"%NAMES(ARGS:LCOUNT)%と"
NEXT
SIF TEXT_CHANGE != ""
	PRINTFORMW %CALLNAME:TARGET%に%SUBSTRING(TEXT_CHANGE, 0, STRLENS(TEXT_CHANGE) - 2)%も外させました。

REDRAW MEMO_REDRAW

;-------------------------------------------------
;@REMOVE_TEQUIPの実際に何つけるかを選択させる部分
;選択肢表示の問題があるので、選択終了まではTEQUIPの値は弄らない
;-------------------------------------------------
@SHOW_REMOVE_TEQUIP, ARGS, ARGS:1, ARGS:2, ARGS:3
#DIM LCOUNT
#DIM MEMO_LINECOUNT
#DIM CHOICE
#DIM NUM_SELECT
;これにARGS:0～ARGS:3までの値の変更を記録させる
#DIM SELECTED_CHOICE, 4
#DIM IS_REMOVETEQUIP

;これを変化させる事で実際に外すことにしたかどうかを判定する
VARSET SELECTED_CHOICE

$START_SELECT

MEMO_LINECOUNT = LINECOUNT

IS_REMOVETEQUIP = 0
NUM_SELECT = 0
FOR LCOUNT, 0, 4
	SIF ARGS:LCOUNT == ""
		BREAK

	SELECTCASE TEQUIP:(ARGS:LCOUNT)
	CASE 0
;		CALL PRINT_STRL, @"灰色_ [{LCOUNT, 2}] － %NAMES(ARGS:LCOUNT)%はもともと身に着けていません"
	CASEELSE
;		PRINTFORML  [{LCOUNT, 2}] \@ SELECTED_CHOICE:LCOUNT ? ○ # －\@ %NAMES(ARGS:LCOUNT)%
	ENDSELECT

	NUM_SELECT += 1
	SIF SELECTED_CHOICE:LCOUNT
		IS_REMOVETEQUIP = 1
NEXT
;何かを着けた
PRINTFORML [100] \@ IS_REMOVETEQUIP ? これでよい # 別に外さなくていい \@

CALL INPUT_SELECT, NUM_SELECT, 100
CHOICE = RESULT

SELECTCASE CHOICE
CASE 100
	FOR LCOUNT, 0, 4
		SIF ARGS:LCOUNT == ""
			BREAK

		SIF TEQUIP:(ARGS:LCOUNT) == 0
			CONTINUE
		SIF SELECTED_CHOICE:LCOUNT
			TEQUIP:(ARGS:LCOUNT) = 0
	NEXT
	RETURN 1
CASEELSE
	SIF TEQUIP:(ARGS:CHOICE)
		INVERTBIT SELECTED_CHOICE:CHOICE, 0
ENDSELECT

CLEARLINE LINECOUNT - MEMO_LINECOUNT
GOTO START_SELECT


;-------------------------------------------------
;汚れ関連の関数など
;-------------------------------------------------
;-------------------------------------------------
;汚れを数値でなく名称で参照するための関数
;ARGに汚れの数値を入れ、ARGS:0～にチェックする汚れを代入する
;例）CHECK_STAIN(STAIN:PLAYER:ペニス, "精液", "Ａ") だとPLAYERのペニスに精液汚れorＡ汚れがあれば０以外を返す
;-------------------------------------------------
@CHECK_STAIN(ARG, ARGS:0, ARGS:1, ARGS:2, ARGS:3, ARGS:4, ARGS:5, ARGS:6)
#FUNCTION
#DIM LCOUNT
VARSET LOCAL
FOR LCOUNT, 0, 7
	SELECTCASE ARGS:LCOUNT
	CASE "Ｖ"
		LOCAL = GETBIT(ARG, 0)
	CASE "Ｐ"
		LOCAL = GETBIT(ARG, 1)
	CASE "精液", "精"
		LOCAL = GETBIT(ARG, 2)
	CASE "Ａ"
		LOCAL = GETBIT(ARG, 3)
	CASE "乳"
		LOCAL = GETBIT(ARG, 4)
	CASE "尿"
		LOCAL = GETBIT(ARG, 5)
	CASE "蒸れ", "蒸"
		LOCAL = GETBIT(ARG, 7)
	CASE "濡れ", "濡"
		LOCAL = GETBIT(ARG, 8)
	CASE "破瓜の血", "血"
		LOCAL = GETBIT(ARG, 10)
	CASE "汗"
		LOCAL = GETBIT(ARG, 11)
	CASE "Ｖ恥垢"
		LOCAL = GETBIT(ARG, 20)
	CASE "Ｐ恥垢"
		LOCAL = GETBIT(ARG, 21)
	ENDSELECT
	SIF LOCAL
		RETURNF LOCAL
NEXT
RETURNF LOCAL

;-------------------------------------------------
;汚れを数値でなく名称で参照するための関数
;キャラARGの部位ARGSに落とせる汚れが付着しているかどうかをチェックする。ARGはTARGETの場合には省略可能
;例）CHECK_ADD_STAIN("Ｖ", PLAYER)は<Ｖ>汚れ以外のものがあったら０より大きい値を返す
;-------------------------------------------------
@CHECK_ADD_STAIN(ARGS, ARG)
#FUNCTION

SIF ARG < 0
	RETURNF 0
SIF ARG == 0 && TARGET
	ARG = TARGET

;値が０なら汚れは無し
SIF STAIN:ARG:ARGS == 0
	RETURNF 0

SELECTCASE ARGS
CASE "Ｐ"
	;真性包茎はＰ恥垢があるのが通常
	IF COND("真性包茎", ARG)
		IF STAIN:ARG:ペニス == SET_STAIN(0, "Ｐ") || STAIN:ARG:ペニス == SET_STAIN(0, "Ｐ恥垢") || STAIN:ARG:ペニス == SET_STAIN(0, "Ｐ") + SET_STAIN(0, "Ｐ恥垢")
		ELSE
			RETURNF 1
		ENDIF
	ELSE
		SIF STAIN:ARG:ARGS != SET_STAIN(0, ARGS)
			RETURNF 1
	ENDIF
CASEELSE
	SIF STAIN:ARG:ARGS != SET_STAIN(0, ARGS)
		RETURNF 1
ENDSELECT
RETURNF 0

;-------------------------------------------------
;汚れを数値でなく名称でセットする関数
;例）STAIN:ヴァギナ = SET_STAIN(STAIN:ヴァギナ, "精液") だとTARGETのＶに精液汚れを加える
;これはSETBIT STAIN:ヴァギナ, 2 や STAIN:ヴァギナ |= 1p2に等しいが、直感的にわかりやすくするための関数である
;もちろんSTAIN:ヴァギナ = SET_STAIN(STAIN:PLAYER:ペニス, "精液")のようにも使えるが今はあまり推奨しない
;-------------------------------------------------
@SET_STAIN(ARG, ARGS)
#FUNCTION

SELECTCASE ARGS
CASE "Ｖ"
	SETBIT ARG, 0
CASE "Ｐ"
	SETBIT ARG, 1
CASE "精液", "精"
	SETBIT ARG, 2
CASE "Ａ"
	SETBIT ARG, 3
CASE "母乳", "乳"
	SETBIT ARG, 4
CASE "尿"
	SETBIT ARG, 5
CASE "蒸れ", "蒸"
	SETBIT ARG, 7
CASE "濡れ", "濡"
	SETBIT ARG, 8
CASE "破瓜の血", "血"
	SETBIT ARG, 10
CASE "汗"
	SETBIT ARG, 11
CASE "Ｖ恥垢"
	SETBIT ARG, 20
CASE "Ｐ恥垢"
	SETBIT ARG, 21
ENDSELECT
RETURNF ARG

;-------------------------------------------------
;汚れをリセットするデフォルトの関数RESET_STAINの拡張版
;ARGSには"全部"、"Ｍ"、"手"、"Ｐ"、"Ｖ"、"Ａ"、"Ｂ"のどれかが使える
;ARGは対象のキャラ
;老廃物については現状だとＰとＶのみ
;-------------------------------------------------
@RESET_STAIN_EX, ARGS, ARG
;Ｐ汚れをリセットする場合はONになる
#DIM IS_RESETSTAIN_P
#DIM MEMO_STAIN_P
#DIM MEMO_STAIN_V

IS_RESETSTAIN_P = 0
VARSET MEMO_STAIN_P
VARSET MEMO_STAIN_V

SELECTCASE ARGS
CASE "手"
	STAIN:ARG:手 = 0
CASE "Ｐ"
	;ペニスに垢あり
	IF CHECK_STAIN(STAIN:ARG:ペニス, "Ｐ恥垢")
		STAIN:ARG:ペニス = SET_STAIN(0, "Ｐ")
		;真性包茎は汚れたまま
		IF COND("真性包茎", ARG)
			STAIN:ARG:ペニス = SET_STAIN(STAIN:ARG:ペニス, "Ｐ恥垢")
		ELSE
;			CLEARBIT BASE:ARG:老廃物, 0
		ENDIF
	ELSE
		STAIN:ARG:ペニス = SET_STAIN(0, "Ｐ")
;		CLEARBIT BASE:ARG:老廃物, 0
	ENDIF
	;挿入時につく汚れもリセット
	IS_RESETSTAIN_P = 1
CASE "Ｖ"
	STAIN:ARG:ヴァギナ = SET_STAIN(0, "Ｖ")
;	CLEARBIT BASE:ARG:老廃物, 1
CASE "Ａ"
	STAIN:ARG:アナル = SET_STAIN(0, "Ａ")
CASE "Ｂ"
	STAIN:ARG:胸 = 0
ENDSELECT

IF IS_RESETSTAIN_P
	VARSET LOCALS
;	SPLIT CSTR:ARG:Ｐ汚れ, "_", LOCALS
;	IF LOCALS:1 != ""
;		CSTR:ARG:Ｐ汚れ = %BL()%_%LOCALS:1%
;	ELSE
;		CSTR:ARG:Ｐ汚れ = 
;	ENDIF
ENDIF


;-------------------------------------------------
;汚れを数値でなく名称でセットする関数その２
;ARGに対象のキャラ番号、ARGSに汚れを適用する部位、ARGS:1に汚れを代入して用いる
;これは服の要素を加味して汚れを加える関数だが、加えられる汚れの発生源は外側（服の上から）なのに注意すること
;例）CALL ADD_STAIN, TARGET, "Ｖ", "精液" だとTARGETのＶに精液汚れを加えるが、
;　もしもパンツなどをはいていたらその汚れはパンツのほうにつくこととなる。
;-------------------------------------------------
@ADD_STAIN, ARG, ARGS, ARGS:1
IF ARGS == "パンツ" || (ARGS == "Ｖ" && CHECK_CLO("Ｖ露出", ARG) == 0) || (ARGS == "Ａ" && CHECK_CLO("Ａ露出", ARG) == 0)
	;精液or尿汚れならパンツなどにつく
	IF CHECK_CLO("ボディスーツ露出", ARG)
		ARGS = ボディスーツボトム
	ELSEIF CHECK_CLO("アウター露出", ARG)
		ARGS = アウター
	ELSEIF CHECK_CLO("パンツ露出", ARG)
		ARGS = パンツ
	ENDIF

	SELECTCASE ARGS:1
	CASE "精液", "精", "尿"
		STAIN:ARG:ARGS = SET_STAIN(STAIN:ARG:ARGS, ARGS:1)
	ENDSELECT
ELSEIF ARGS == "Ｂ" && CHECK_CLO("谷間露出", ARG) == 0
	;精液汚れなら服などにつく
;	IF EQUIP:ARG:服 && CHECK_SHIRT("谷間露出", ARG) == 0
;		ARGS = 服
;	ELSEIF EQUIP:ARG:ボディスーツ && CHECK_BODYS("谷間露出", ARG) == 0
;		ARGS = ボディスーツトップ
;	ENDIF

	SELECTCASE ARGS:1
	CASE "精液", "精"
		STAIN:ARG:ARGS = SET_STAIN(STAIN:ARG:ARGS, "精液")
	ENDSELECT
ELSE
	STAIN:ARG:ARGS = SET_STAIN(STAIN:ARG:ARGS, ARGS:1)
ENDIF

;-------------------------------------------------
;ARGのARGSの汚れと、ARG:1のARGS:1の汚れを同じにする。やってる事は大体
;STAIN:ARG:ARGS |= STAIN:(ARG:1):(ARGS:1)
;STAIN:(ARG:1):(ARGS:1) |= STAIN:ARG:ARGS
;と一緒。
;-------------------------------------------------
@EQ_STAIN, ARG, ARGS, ARG:1, ARGS:1
STAIN:ARG:ARGS |= STAIN_CALC(ARG, ARGS, ARG:1, ARGS:1)
STAIN:(ARG:1):(ARGS:1) |= STAIN_CALC(ARG:1, ARGS:1, ARG, ARGS)


;-------------------------------------------------
;ARGのARGS部分に、ARG:1のARGS:1部分の汚れが実際に移るかどうかを計算する
;-------------------------------------------------
@STAIN_CALC(ARG, ARGS, ARG:1, ARGS:1)
#FUNCTION
;移る汚れの値
#DIM VALUE_STAIN

VARSET VALUE_STAIN

;まずはARGS:1から汚れが移るのかをチェック。衣装を着けている場合にはだいたい移らない
SELECTCASE ARGS:1
CASE "Ｍ"
	;口でペニスをしゃぶっても汚れは移らない事にする
	SIF ARGS == "Ｐ"
		RETURNF 0
CASE "Ｖ"
	;Ｖが露出していない
	SIF CHECK_CLO("Ｖ露出", ARG:1) == 0
		RETURNF 0
CASE "Ａ"
	;Ａが露出していない
	SIF CHECK_CLO("Ａ露出", ARG:1) == 0
		RETURNF 0
CASE "Ｂ"
	;胸が露出していない
	SIF CHECK_CLO("谷間露出", ARG:1) == 0
		RETURNF 0
ENDSELECT


;ARG:1のARGS:1部分に"Ｖ"汚れがある
IF CHECK_STAIN(STAIN:(ARG:1):(ARGS:1), "Ｖ")
	;Ｖ汚れはＶorＰからしか付かない
	SELECTCASE ARGS:1
	CASE "Ｐ"
		VALUE_STAIN = SET_STAIN(VALUE_STAIN, "Ｖ")
	CASE "Ｖ"
		;お風呂上りだと綺麗
		SIF TEQUIP:(ARG:1):お風呂上り == 0
			VALUE_STAIN = SET_STAIN(VALUE_STAIN, "Ｖ")
	ENDSELECT
ENDIF
;ARG:1のARGS:1部分に"Ｐ"汚れがある
IF CHECK_STAIN(STAIN:(ARG:1):(ARGS:1), "Ｐ")
	;Ｐ汚れはＰからしか付かない
	SELECTCASE ARGS:1
	CASE "Ｐ"
		;お風呂上りだと綺麗
		SIF TEQUIP:(ARG:1):お風呂上り == 0
			VALUE_STAIN = SET_STAIN(VALUE_STAIN, "Ｐ")
	ENDSELECT
ENDIF
;ARG:1のARGS:1部分に"精液"汚れがある
IF CHECK_STAIN(STAIN:(ARG:1):(ARGS:1), "精液")
		VALUE_STAIN = SET_STAIN(VALUE_STAIN, "精液")
ENDIF
;ARG:1のARGS:1部分に"Ａ"汚れがある
IF CHECK_STAIN(STAIN:(ARG:1):(ARGS:1), "Ａ")
	SELECTCASE ARGS
	CASE "Ｖ"
		;ＶにはＡ汚れのあるＰでないと移らない
		SIF ARGS:1 == "Ｐ"
			VALUE_STAIN = SET_STAIN(VALUE_STAIN, "Ａ")
	CASEELSE
		VALUE_STAIN = SET_STAIN(VALUE_STAIN, "Ａ")
	ENDSELECT
ENDIF
;乳汚れは口のみ移る
IF CHECK_STAIN(STAIN:(ARG:1):(ARGS:1), "乳")
	SIF ARGS == "Ｍ"
		VALUE_STAIN = SET_STAIN(VALUE_STAIN, "乳")
ENDIF
;尿汚れは口のみ移る
IF CHECK_STAIN(STAIN:(ARG:1):(ARGS:1), "尿")
	SIF ARGS == "Ｍ"
		VALUE_STAIN = SET_STAIN(VALUE_STAIN, "尿")
ENDIF
;血液汚れはＰと手のみ移る
IF CHECK_STAIN(STAIN:(ARG:1):(ARGS:1), "破瓜の血")
	SELECTCASE ARGS
	CASE "手", "Ｐ"
		VALUE_STAIN = SET_STAIN(VALUE_STAIN, "破瓜の血")
	ENDSELECT
ENDIF
;恥垢汚れが移るのはひとまず見送り。今後調整後に起きるようになるかも
;Ｖ恥垢
;SIF CHECK_STAIN(STAIN:(ARG:1):(ARGS:1), "Ｖ恥垢")
;	VALUE_STAIN = SET_STAIN(VALUE_STAIN, "Ｖ恥垢")
;Ｐ恥垢
;SIF CHECK_STAIN(STAIN:(ARG:1):(ARGS:1), "Ｐ恥垢")
;	VALUE_STAIN = SET_STAIN(VALUE_STAIN, "Ｐ恥垢")


;精液汚れが無い場合にはここまで
SIF CHECK_STAIN(VALUE_STAIN, "精液") == 0
	RETURNF VALUE_STAIN

;ここから下は汚れが移る筈の場所が服で守られている場合の処理
;例えばARGS == "Ｂ"でCHECK_CLO("谷間露出", ARG) == 0ならば、
;胸を覆っている"衣服"に精液汚れが付き、本来汚れが付くはずだった"Ｂ"には汚れが付かない
SELECTCASE ARGS
CASE "Ｖ"
	;Ｖが露出していない
	IF CHECK_CLO("Ｖ露出", ARG) == 0
		IF CHECK_CLO("ボディスーツ露出", ARG)
;			STAIN:ARG:ボディスーツボトム = SET_STAIN(STAIN:ARG:ボディスーツボトム, "精液")
		ELSEIF CHECK_CLO("アウター露出", ARG)
;			STAIN:ARG:アウター = SET_STAIN(STAIN:ARG:アウター, "精液")
		ELSEIF CHECK_CLO("パンツ露出", ARG)
;			STAIN:ARG:パンツ = SET_STAIN(STAIN:ARG:パンツ, "精液")
		ENDIF
		VALUE_STAIN = 0
	ENDIF
CASE "Ａ"
	;Ａが露出していない
	IF CHECK_CLO("Ａ露出", ARG) == 0
		IF CHECK_CLO("ボディスーツ露出", ARG)
;			STAIN:ARG:ボディスーツボトム = SET_STAIN(STAIN:ARG:ボディスーツボトム, "精液")
		ELSEIF CHECK_CLO("アウター露出", ARG)
;			STAIN:ARG:アウター = SET_STAIN(STAIN:ARG:アウター, "精液")
		ELSEIF CHECK_CLO("パンツ露出", ARG)
;			STAIN:ARG:パンツ = SET_STAIN(STAIN:ARG:パンツ, "精液")
		ENDIF
		VALUE_STAIN = 0
	ENDIF
CASE "Ｂ"
	;胸が露出していない
	IF CHECK_CLO("谷間露出", ARG) == 0
;		IF EQUIP:ARG:服 && !CHECK_SHIRT("谷間露出", ARG)
;			STAIN:ARG:服 = SET_STAIN(STAIN:ARG:服, "精液")
;		ELSEIF EQUIP:ARG:ボディスーツ && !CHECK_BODYS("谷間露出", ARG)
;			STAIN:ARG:ボディスーツトップ = SET_STAIN(STAIN:ARG:ボディスーツトップ, "精液")
;		ENDIF
		VALUE_STAIN = 0
	ENDIF
CASE "パンツ"
	;パンツの場合には精液汚れ以外は移らなくさせる
	IF CHECK_CLO("ボディスーツ露出", ARG)
;		STAIN:ARG:ボディスーツボトム = SET_STAIN(STAIN:ARG:ボディスーツボトム, "精液")
	ELSEIF CHECK_CLO("アウター露出", ARG)
;		STAIN:ARG:アウター = SET_STAIN(STAIN:ARG:アウター, "精液")
	ELSEIF CHECK_CLO("パンツ露出", ARG)
;		STAIN:ARG:パンツ = SET_STAIN(STAIN:ARG:パンツ, "精液")
	ENDIF
	VALUE_STAIN = 0
ENDSELECT

RETURNF VALUE_STAIN


@STAIN_CALC_COSPLAY, ARG
SIF ARG == 0 && TARGET > 0
	ARG = TARGET

SELECTCASE CUP:ARG:Ｖ潤
CASE IS >= 10000
	LOCAL = 5
CASE IS >= 6000
	LOCAL = 4
CASE IS >= 3000
	LOCAL = 3
CASE IS >= 1500
	LOCAL = 2
CASE IS >= 500
	LOCAL = 1
CASEELSE
	LOCAL = 0
ENDSELECT

SELECTCASE PALAM:ARG:Ｖ潤
CASE IS >= 30000
	SIF LOCAL < 3
		LOCAL = 3
CASE IS >= 10000
	SIF LOCAL < 2
		LOCAL = 2
CASE IS >= 3000
	SIF LOCAL < 1
		LOCAL = 1
ENDSELECT
SIF LOCAL < 2 && CALCF("Ｖ発情", ARG)
	LOCAL += 1
;SIF LOCAL < 2 && TALENT:ARG:常時Ｖバイブ
;	LOCAL += 1

;パンツの愛液汚れ
;IF EQUIP:ARG:パンツ && CHECK_PANTIES("Ｖ露出", ARG) == 0
;	IF CHECK_PANTIES("通気性無し", ARG) == 0
;		SIF LOCAL >= 3
;			STAIN:ARG:パンツ = SET_STAIN(STAIN:ARG:パンツ, "濡れ")
;	ENDIF
;	SIF LOCAL >= 1
;		STAIN:ARG:パンツ = SET_STAIN(STAIN:ARG:パンツ, "蒸れ")
;ENDIF


;-------------------------------------------------
;快楽のソースARGをARG:1のABL:ARGSによって補正する
;快感の基礎値を、対応した能力のLV*100だけ追加し、その上で能力1LVにつき3%のボーナス
;-------------------------------------------------
@SOURCE_EXABL(ARG, ARGS, ARG:1)
#FUNCTION
#DIM ACTOR
#DIM ABL_VALUE

ACTOR = ARG:1
ABL_VALUE = MIN(ABL:ACTOR:ARGS, 6)

;前回絶頂したら補正値大幅減
IF PREVPLAY("絶頂", ACTOR)
	LOCAL = MULTIPLY(ARG + 20 * ABL_VALUE, 100 + ABL_VALUE)
ELSE
	LOCAL = MULTIPLY(ARG + 100 * ABL_VALUE, 100 + 3 * ABL_VALUE)
ENDIF
SIF ABL:ACTOR:ARGS > 6
	LOCAL = MULTIPLY(LOCAL, 100 + ABL:ACTOR:ARGS - 6)

RETURNF LOCAL

;-------------------------------------------------
;インサートの総合管理。ARGの状態ARGSを判定する
;インサートならば、ＶorＡどっちかにインサート、ＶインサートならＶにインサート中、という風に使い分ける
;ARG:1にキャラ番号を代入することでより細かい状態を調べられる
;例）INSERT("インサート", TARGET)だと"TARGETがインサートされてるか"のみをチェックするが、
;　　INSERT("インサート", TARGET, PLAYER)だと"PLAYERがTARGETにインサートしているか"をチェックする
;TEQUIP:体位はビットで状態を管理する
;～9bit	体位、10bit Ｖ性交、11bit Ａ性交、12bit 尿道性交、20bit 立位
;-------------------------------------------------
@INSERT(ARGS, ARG, ARG:1)
#FUNCTION
SIF ARG < 0 || ARG:1 < 0
	RETURNF 0
SIF ARG == 0 && TARGET
	ARG = TARGET

;特殊処理
SELECTCASE ARGS
CASE "対応コマンド"
	IF GETBIT(TEQUIP:ARG:体位, 10)
		ARGS = Ｖ対応コマンド
	ELSEIF GETBIT(TEQUIP:ARG:体位, 11)
		ARGS = Ａ対応コマンド
	ELSEIF ARG == TARGET
		SELECTCASE SELECTCOM
		CASE 60 TO 69, 70 TO 79, 83 TO 88, 120 TO 124, 125 TO 129
			RETURNF SELECTCOM
		CASEELSE
			RETURNF 0
		ENDSELECT
	ENDIF
ENDSELECT


SELECTCASE ARGS
CASE "インサート"
	SIF ARG:1 > 0 && TEQUIP:(ARG:1):Ｖ挿入 != ARG && TEQUIP:(ARG:1):Ａ挿入 != ARG
		RETURNF 0
	RETURNF TEQUIP:ARG:体位
CASE "Ｖインサート"
	SIF ARG:1 > 0 && TEQUIP:(ARG:1):Ｖ挿入 != ARG
		RETURNF 0
	SIF GETBIT(TEQUIP:ARG:体位, 10)
		RETURNF TEQUIP:ARG:体位
CASE "Ｖ二本挿入"
	SIF FINDCHARA(TEQUIP:Ｖ挿入, ARG) > 0 && FINDCHARA(TEQUIP:Ｖ挿入, FINDCHARA(TEQUIP:Ｖ挿入, ARG) ) > 0
		RETURNF TEQUIP:ARG:体位
CASE "Ａインサート"
	SIF ARG:1 > 0 && TEQUIP:(ARG:1):Ａ挿入 != ARG
		RETURNF 0
	SIF GETBIT(TEQUIP:ARG:体位, 11)
		RETURNF TEQUIP:ARG:体位
CASE "Ａ二本挿入"
	SIF FINDCHARA(TEQUIP:Ａ挿入, ARG) > 0 && FINDCHARA(TEQUIP:Ａ挿入, FINDCHARA(TEQUIP:Ａ挿入, ARG) ) > 0
		RETURNF TEQUIP:ARG:体位
CASE "複数挿入"
	SIF GETBIT(TEQUIP:ARG:体位, 10) && GETBIT(TEQUIP:ARG:体位, 11) && GETBIT(TEQUIP:ARG:体位, 12)
		RETURNF TEQUIP:ARG:体位
	SIF FINDCHARA(TEQUIP:Ｖ挿入, ARG) > 0 && FINDCHARA(TEQUIP:Ｖ挿入, FINDCHARA(TEQUIP:Ｖ挿入, ARG) ) > 0
		RETURNF TEQUIP:ARG:体位
	SIF FINDCHARA(TEQUIP:Ａ挿入, ARG) > 0 && FINDCHARA(TEQUIP:Ａ挿入, FINDCHARA(TEQUIP:Ａ挿入, ARG) ) > 0
		RETURNF TEQUIP:ARG:体位
;同じ穴に二本挿入してる時には正確ではないです
CASE "インサート相手"
	LOCAL = MAX(FINDCHARA(TEQUIP:Ｖ挿入, ARG), FINDCHARA(TEQUIP:Ａ挿入, ARG), 0)
		RETURNF LOCAL
CASE "Ｖインサート相手"
	LOCAL = MAX(FINDCHARA(TEQUIP:Ｖ挿入, ARG), 0)
		RETURNF LOCAL
CASE "Ａインサート相手"
	LOCAL = MAX(FINDCHARA(TEQUIP:Ａ挿入, ARG), 0)
		RETURNF LOCAL
CASE "挿入中"
	RETURNF MAX(TEQUIP:ARG:Ｖ挿入, TEQUIP:ARG:Ａ挿入)
CASE "Ｖ挿入中"
	RETURNF TEQUIP:ARG:Ｖ挿入
CASE "Ａ挿入中"
	RETURNF TEQUIP:ARG:Ａ挿入
;現時点ではＶＡ両方の場合を指すこととする
CASE "二穴挿入"
	SIF (GETBIT(TEQUIP:ARG:体位, 10) > 0) + (GETBIT(TEQUIP:ARG:体位, 11) > 0) >= 2
		RETURNF TEQUIP:ARG:体位
;ARGとARG:1が合体している状況を調べる
;INSERT("インサート", ARG, ARG:1) || INSERT("インサート", ARG:1, ARG)と同じ
CASE "合体中"
	SIF ARG:1 == 0
		ARG:1 = PLAYER
	IF TEQUIP:(ARG:1):Ｖ挿入 == ARG || TEQUIP:(ARG:1):Ａ挿入 == ARG
		RETURNF TEQUIP:ARG:体位
	ELSEIF TEQUIP:ARG:Ｖ挿入 == ARG:1 || TEQUIP:ARG:Ａ挿入 == ARG:1
		RETURNF TEQUIP:(ARG:1):体位
	ENDIF
CASE "立位可能体位"
	SIF GETBIT(TEQUIP:ARG:体位, 0) || GETBIT(TEQUIP:ARG:体位, 1) || GETBIT(TEQUIP:ARG:体位, 3) || GETBIT(TEQUIP:ARG:体位, 4)
		RETURNF 1
CASE "立位"
	SIF GETBIT(TEQUIP:ARG:体位, 20)
		RETURNF 1
CASE "対面立位"
	SIF GETBIT(TEQUIP:ARG:体位, 20) && GETBIT(TEQUIP:ARG:体位, 0)
		RETURNF 1
CASE "立ちバック"
	SIF GETBIT(TEQUIP:ARG:体位, 20) && GETBIT(TEQUIP:ARG:体位, 1)
		RETURNF 1
CASE "駅弁"
	SIF GETBIT(TEQUIP:ARG:体位, 20) && GETBIT(TEQUIP:ARG:体位, 3)
		RETURNF 1
CASE "背面駅弁"
	SIF GETBIT(TEQUIP:ARG:体位, 20) && GETBIT(TEQUIP:ARG:体位, 4)
		RETURNF 1
CASE "正常位"
	SIF GETBIT(TEQUIP:ARG:体位, 0)
		RETURNF 1
CASE "Ｖ正常位"
	SIF GETBIT(TEQUIP:ARG:体位, 0) && GETBIT(TEQUIP:ARG:体位, 10)
		RETURNF 1
CASE "Ａ正常位"
	SIF GETBIT(TEQUIP:ARG:体位, 0) && GETBIT(TEQUIP:ARG:体位, 11)
		RETURNF 1
CASE "後背位"
	SIF GETBIT(TEQUIP:ARG:体位, 1)
		RETURNF 1
CASE "Ｖ後背位"
	SIF GETBIT(TEQUIP:ARG:体位, 1) && GETBIT(TEQUIP:ARG:体位, 10)
		RETURNF 1
CASE "Ａ後背位"
	SIF GETBIT(TEQUIP:ARG:体位, 1) && GETBIT(TEQUIP:ARG:体位, 11)
		RETURNF 1
CASE "屈曲位"
	SIF GETBIT(TEQUIP:ARG:体位, 2)
		RETURNF 1
CASE "Ｖ屈曲位"
	SIF GETBIT(TEQUIP:ARG:体位, 2) && GETBIT(TEQUIP:ARG:体位, 10)
		RETURNF 1
CASE "Ａ屈曲位"
	SIF GETBIT(TEQUIP:ARG:体位, 2) && GETBIT(TEQUIP:ARG:体位, 11)
		RETURNF 1
CASE "対面座位"
	SIF GETBIT(TEQUIP:ARG:体位, 3)
		RETURNF 1
CASE "Ｖ対面座位"
	SIF GETBIT(TEQUIP:ARG:体位, 3) && GETBIT(TEQUIP:ARG:体位, 10)
		RETURNF 1
CASE "Ａ対面座位"
	SIF GETBIT(TEQUIP:ARG:体位, 3) && GETBIT(TEQUIP:ARG:体位, 11)
		RETURNF 1
CASE "背面座位"
	SIF GETBIT(TEQUIP:ARG:体位, 4)
		RETURNF 1
CASE "Ｖ背面座位"
	SIF GETBIT(TEQUIP:ARG:体位, 4) && GETBIT(TEQUIP:ARG:体位, 10)
		RETURNF 1
CASE "Ａ背面座位"
	SIF GETBIT(TEQUIP:ARG:体位, 4) && GETBIT(TEQUIP:ARG:体位, 11)
		RETURNF 1
CASE "騎乗位"
	SIF GETBIT(TEQUIP:ARG:体位, 5)
		RETURNF 1
CASE "Ｖ騎乗位"
	SIF GETBIT(TEQUIP:ARG:体位, 5) && GETBIT(TEQUIP:ARG:体位, 10)
		RETURNF 1
CASE "Ａ騎乗位"
	SIF GETBIT(TEQUIP:ARG:体位, 5) && GETBIT(TEQUIP:ARG:体位, 11)
		RETURNF 1
CASE "Ｖ対応コマンド"
	IF ARG == TARGET
		IF GETBIT(TEQUIP:ARG:体位, 0)
			RETURNF 60
		ELSEIF GETBIT(TEQUIP:ARG:体位, 1)
			RETURNF 61
		ELSEIF GETBIT(TEQUIP:ARG:体位, 2)
			RETURNF 62
		ELSEIF GETBIT(TEQUIP:ARG:体位, 3)
			RETURNF 63
		ELSEIF GETBIT(TEQUIP:ARG:体位, 4)
			RETURNF 64
		ELSEIF GETBIT(TEQUIP:ARG:体位, 5)
			RETURNF 65
		ENDIF
	ELSE
		IF GETBIT(TEQUIP:ARG:体位, 0)
			RETURNF 120
		ELSEIF GETBIT(TEQUIP:ARG:体位, 1)
			RETURNF 121
		ELSEIF GETBIT(TEQUIP:ARG:体位, 5)
			RETURNF 122
		ELSEIF TEQUIP:ARG:体位
			RETURNF 120
		ENDIF
	ENDIF
CASE "Ａ対応コマンド"
	IF ARG == TARGET
		IF GETBIT(TEQUIP:ARG:体位, 0)
			RETURNF 70
		ELSEIF GETBIT(TEQUIP:ARG:体位, 1)
			RETURNF 71
		ELSEIF GETBIT(TEQUIP:ARG:体位, 2)
			RETURNF 72
		ELSEIF GETBIT(TEQUIP:ARG:体位, 3)
			RETURNF 73
		ELSEIF GETBIT(TEQUIP:ARG:体位, 4)
			RETURNF 74
		ELSEIF GETBIT(TEQUIP:ARG:体位, 5)
			RETURNF 75
		ENDIF
	ELSE
		IF GETBIT(TEQUIP:ARG:体位, 0)
			RETURNF 125
		ELSEIF GETBIT(TEQUIP:ARG:体位, 1)
			RETURNF 126
		ELSEIF GETBIT(TEQUIP:ARG:体位, 5)
			RETURNF 127
		ELSEIF TEQUIP:ARG:体位
			RETURNF 125
		ENDIF
	ENDIF
CASE "ワイルドスウィング"
	SIF TEQUIP:ARG:体位
		RETURNF GETBIT(TEQUIP:ARG:特殊行動, 0)
ENDSELECT
RETURNF 0

;-------------------------------------------------
;ARGとARG:1のインサート＆挿入状態を解除させる関数
;通常はARGとARG:1にTARGETとPLAYERを代入する
;高速化のために@INSERTでできることを別の関数で行う事も有る
;TEQUIP:コンドームについては、この関数で挿入が解除された場合に限り外す
;-------------------------------------------------
@RESET_INSERT, ARG, ARG:1
#DIM LCOUNT
;コンドーム取り外しの判定に使用(コンドーム使用中の場合にはこれが１以上になる)
#DIM IS_CONDOM, 100

VARSET IS_CONDOM
;コンドームを外すかどうかのチェック
FOR LCOUNT, 1, CHARANUM
	SELECTCASE LCOUNT
	CASE MASTER, ASSI, PLAYER, PLAYER:1, TARGET, TARGET:1
		SIF TEQUIP:LCOUNT:コンドーム
			IS_CONDOM:LCOUNT = MAX(TEQUIP:LCOUNT:Ｖ挿入, TEQUIP:LCOUNT:Ａ挿入)
	ENDSELECT
NEXT

;ARGに関するTEQUIP:Ｖ挿入とTEQUIP:Ａ挿入を初期化する
FOR LOCAL, 0, (ARG > 0) + (ARG:1 > 0)
	;IF INSERT("インサート", ARG:LOCAL) || INSERT("インサート相手", ARG:LOCAL)
	IF TEQUIP:ARG:体位 || MAX(FINDCHARA(TEQUIP:Ｖ挿入, ARG:LOCAL), FINDCHARA(TEQUIP:Ａ挿入, ARG:LOCAL), 0)
		;挿入している相手のフラグを消去
		FOR LCOUNT, 1, CHARANUM
			SELECTCASE LCOUNT
			CASE MASTER, ASSI, PLAYER, PLAYER:1, TARGET, TARGET:1
				SIF TEQUIP:LCOUNT:Ｖ挿入 == ARG:LOCAL
					TEQUIP:LCOUNT:Ｖ挿入 = 0
				SIF TEQUIP:LCOUNT:Ａ挿入 == ARG:LOCAL
					TEQUIP:LCOUNT:Ａ挿入 = 0
			ENDSELECT
		NEXT
	ENDIF

	TEQUIP:(ARG:LOCAL):Ｖ挿入 = 0
	TEQUIP:(ARG:LOCAL):Ａ挿入 = 0
NEXT


FOR LCOUNT, 1, CHARANUM
	SELECTCASE LCOUNT
	CASE MASTER, ASSI, PLAYER, PLAYER:1, TARGET, TARGET:1
		;挿入を解除された全てのキャラのゴムを外す
		SIF IS_CONDOM:LCOUNT && MAX(TEQUIP:LCOUNT:Ｖ挿入, TEQUIP:LCOUNT:Ａ挿入) == 0
			CALL SETFLAG, "ゴム取り外し", LCOUNT, TEQUIP:LCOUNT:コンドーム

		;インサートされていない全てのキャラのTEQUIP:体位を初期化
		SIF MAX(FINDCHARA(TEQUIP:Ｖ挿入, LCOUNT), FINDCHARA(TEQUIP:Ａ挿入, LCOUNT), 0)
			CONTINUE
		TEQUIP:LCOUNT:体位 = 0
		;ワイルドスウィング初期化
		CLEARBIT TEQUIP:LCOUNT:特殊行動, 0
	ENDSELECT
NEXT



;-------------------------------------------------
;インサートの関数を設定する関数
;ARGに挿入される側、ARG:1に挿入する側、ARG:2にSELECTCOM
;ARGSに"解除判定"が代入された場合には解除されるかをチェックするのみでインサートフラグの発生は無い
;TEQUIP:体位はビットで状態を管理する
;～9bit	体位、10bit Ｖ性交、11bit Ａ性交、12bit 尿道性交
;TEQUIP:コンドームについては、この関数で挿入が解除された場合に限り外す
;-------------------------------------------------
@SET_INSERT, ARG, ARG:1, ARG:2, ARGS
#DIM LCOUNT
#DIM IS_CONDOM, 100
#DIM MEMO_SELECTCOM
;竿役
#DIM ACTOR

SIF ARG <= 0 || ARG:1 <= 0
	RETURN 0

ACTOR = ARG:1

MEMO_SELECTCOM = SELECTCOM
SELECTCOM = ARG:2
VARSET IS_CONDOM
;コンドームを外すかどうかのチェック
FOR LCOUNT, 1, CHARANUM
	SELECTCASE LCOUNT
	CASE MASTER, ASSI, PLAYER, PLAYER:1, TARGET, TARGET:1
		SIF TEQUIP:LCOUNT:コンドーム
			IS_CONDOM:LCOUNT = MAX(TEQUIP:LCOUNT:Ｖ挿入, TEQUIP:LCOUNT:Ａ挿入)
	ENDSELECT
NEXT

VARSET LOCAL

SELECTCASE SELECTCOM
;インサートコマンド
CASE 60 TO 79, 83 TO 88, 120 TO 129
	IF ARGS != "解除判定"
		;これから挿入する側がインサートされている場合はインサートを解除する
		SELECTCASE SELECTCOM
		CASE 60 TO 79, 83 TO 88
			SIF INSERT("インサート", ACTOR)
				CALL RESET_INSERT, ACTOR
		CASE 120 TO 129
			SIF INSERT("インサート", ARG)
				CALL RESET_INSERT, ARG
		ENDSELECT

		;インサートされる側の体位フラグ
		SELECTCASE SELECTCOM
		CASE 60, 70, 83
			TEQUIP:ARG:体位 = 1p0
		CASE 61, 71, 84
			TEQUIP:ARG:体位 = 1p1
		CASE 62, 72, 85
			TEQUIP:ARG:体位 = 1p2
		CASE 63, 73, 86
			TEQUIP:ARG:体位 = 1p3
		CASE 64, 74, 87
			TEQUIP:ARG:体位 = 1p4
		CASE 65, 75, 88
			TEQUIP:ARG:体位 = 1p5
		;子宮挿入
		CASE 68
			IF TEQUIP:ARG:体位 == 0
				IF TEQUIP:ARG:押し倒し
					TEQUIP:ARG:体位 = 1p5
				ELSE
					TEQUIP:ARG:体位 = 1p0
				ENDIF
			ENDIF
		;以下は逆インサート
		CASE 120, 125
			TEQUIP:ACTOR:体位 = 1p0
		CASE 121, 126
			TEQUIP:ACTOR:体位 = 1p1
		CASE 122, 127
			TEQUIP:ACTOR:体位 = 1p5
		ENDSELECT

		;挿入する側がどこに入れたかのフラグ
		SELECTCASE SELECTCOM
		CASE 60 TO 69
			SETBIT TEQUIP:ARG:体位, 10
			TEQUIP:ACTOR:Ｖ挿入 = ARG
			TEQUIP:ACTOR:Ａ挿入 = 0
		CASE 70 TO 79
			SETBIT TEQUIP:ARG:体位, 11
			TEQUIP:ACTOR:Ｖ挿入 = 0
			TEQUIP:ACTOR:Ａ挿入 = ARG
		CASE 83 TO 88
			SETBIT TEQUIP:ARG:体位, 12
			TEQUIP:ACTOR:Ｖ挿入 = 0
			TEQUIP:ACTOR:Ａ挿入 = 0
		;以下は逆インサート
		CASE 120 TO 124
			SETBIT TEQUIP:ACTOR:体位, 10
			TEQUIP:ARG:Ｖ挿入 = ACTOR
			TEQUIP:ARG:Ａ挿入 = 0
		CASE 125 TO 129
			SETBIT TEQUIP:ACTOR:体位, 11
			TEQUIP:ARG:Ｖ挿入 = 0
			TEQUIP:ARG:Ａ挿入 = ACTOR
		ENDSELECT
		;立位判定
	ENDIF
;以下はコマンド実行時の解除判定。それぞれ逆インサート状態かどうかもチェック
CASE TNUM("自慰")
	SIF INSERT("インサート", ACTOR) || CHECK_COM("インサート自慰") == 0
		CALL RESET_INSERT, ARG, ACTOR
CASE TNUM("アソコ愛撫")
	SIF INSERT("インサート", ACTOR) || CHECK_COM("ふきふき", SELECTCOM)
		CALL RESET_INSERT, ARG, ACTOR
;指挿入れ
CASE TNUM("指挿入れ")
	TEQUIP:ARG:Ｖ挿入 = 0
	;ACTORがARGに挿入している場合には解除
	SIF INSERT("Ｖインサート相手", ARG) == ACTOR
		TEQUIP:ACTOR:Ｖ挿入 = 0
;手コキする(TARGETが誰かを犯している場合にはインサート解除)
CASE TNUM("手コキする")
	TEQUIP:ARG:Ｖ挿入 = 0
	TEQUIP:ARG:Ａ挿入 = 0
CASE TNUM("手淫"), TNUM("ぱんつコキ"), TNUM("オナホコキ")
	TEQUIP:ACTOR:Ｖ挿入 = 0
	TEQUIP:ACTOR:Ａ挿入 = 0
CASE 0, 2, 5 TO 7
	;背中側の人には色々できない(逆インサートの時)
	SIF INSERT("インサート", ACTOR) && INSERT("後背位", ACTOR) + INSERT("背面座位", ACTOR)
		CALL RESET_INSERT, ARG, ACTOR
CASE TNUM("くぱぁさせる")
	TEQUIP:ARG:Ｖ挿入 = 0
	SIF INSERT("Ｖインサート相手", ARG) == ACTOR
		TEQUIP:ACTOR:Ｖ挿入 = 0
	SIF INSERT("インサート", ACTOR) || INSERT("後背位", ARG) || INSERT("対面座位", ARG) || INSERT("背面座位", ARG)
		CALL RESET_INSERT, ARG, ACTOR
CASE TNUM("Ａくぱぁさせる")
	TEQUIP:ARG:Ａ挿入 = 0
	SIF INSERT("Ａインサート相手", ARG) == ACTOR
		TEQUIP:ACTOR:Ａ挿入 = 0
	SIF INSERT("インサート", ACTOR) || (INSERT("後背位", ARG) == 0 && INSERT("騎乗位", ARG) == 0)
		CALL RESET_INSERT, ARG, ACTOR
;ぱふぱふは長身でない場合は、巨乳or巨根でないとインサート解除
CASE TNUM("ぱふぱふ")
	;後ろからは駄目
	IF INSERT("後背位", ARG) || INSERT("背面座位", ARG) || INSERT("後背位", ACTOR) || INSERT("背面座位", ACTOR)
		CALL RESET_INSERT, ARG, ACTOR
	;騎乗位は相手と同程度の背がないと駄目
	ELSEIF INSERT("騎乗位") || INSERT("騎乗位", ACTOR)
		;挿入側が長身
		IF IS_大柄(ACTOR)
			SIF !IS_大柄(ARG) && !IS_チチユレ(ARG) && SIZE("ペニス", ACTOR) < 2
				CALL RESET_INSERT, ARG, ACTOR
		;挿入側が普通身長
		ELSEIF !IS_小柄(ACTOR)
			SIF IS_小柄(ARG) && !IS_チチユレ(ARG) && SIZE("ペニス", ACTOR) < 2
				CALL RESET_INSERT, ARG, ACTOR
		ENDIF
	ENDIF
;そのグループにおいては稀なインサート継続コマンド
CASE 30, 130, 138, 139, 170, 174, 176, 177

;問答無用でペニスを抜くコマンド(調教者が別の人ならば、その限りではありません)
CASE IS < 0, 1, 4, 9, 11, 12, 16, 30 TO 59, 80 TO 119, 130 TO 169, 170 TO 199, 260 TO 279
	TEQUIP:ARG:Ｖ挿入 = 0
	TEQUIP:ARG:Ａ挿入 = 0
	SIF INSERT("Ｖインサート相手", ARG) == ACTOR
		TEQUIP:ACTOR:Ｖ挿入 = 0
	SIF INSERT("Ａインサート相手", ARG) == ACTOR
		TEQUIP:ACTOR:Ａ挿入 = 0
ENDSELECT

FOR LCOUNT, 1, CHARANUM
	SELECTCASE LCOUNT
	CASE MASTER, ASSI, PLAYER, PLAYER:1, TARGET, TARGET:1
		IF TEQUIP:LCOUNT:コンドーム
			;挿入を解除された全てのキャラのゴムを外す
			IF IS_CONDOM:LCOUNT && MAX(TEQUIP:LCOUNT:Ｖ挿入, TEQUIP:LCOUNT:Ａ挿入) == 0
				CALL SETFLAG, "ゴム取り外し", LCOUNT, TEQUIP:LCOUNT:コンドーム
			;挿入中なら相手を記録
			ELSE
				TEQUIP:LCOUNT:コンドーム = MAX(TEQUIP:LCOUNT:Ｖ挿入, TEQUIP:LCOUNT:Ａ挿入, 1)
			ENDIF
		ENDIF

		;インサートしている相手がいる
		IF INSERT("インサート相手", LCOUNT)
			;複数挿入の時には体勢が変更される
			IF INSERT("複数挿入", LCOUNT)
				SELECTCASE SELECTCOM
				CASE 60 TO 69
					TEQUIP:LCOUNT:体位 = 1p4
				CASEELSE
					TEQUIP:LCOUNT:体位 = 1p5
				ENDSELECT
			;押し倒しのときは騎乗位
			ELSEIF TEQUIP:LCOUNT:押し倒し && INSERT("インサート", LCOUNT)
				TEQUIP:LCOUNT:体位 = 1p5
			ENDIF
			;体位変更に伴う挿入フラグ補正
			IF INSERT("Ｖインサート相手", LCOUNT)
				SETBIT TEQUIP:LCOUNT:体位, 10
				SIF CHECK_CLO("Ｖ露出", LCOUNT) == 0
					CALL SETFLAG, "ボトムを露出：テキスト無し", LCOUNT
			ENDIF
			IF INSERT("Ａインサート相手", LCOUNT)
				SETBIT TEQUIP:LCOUNT:体位, 11
				SIF CHECK_CLO("Ａ露出", LCOUNT) == 0
					CALL SETFLAG, "ボトムを露出：テキスト無し", LCOUNT
			ENDIF
		;誰かに挿入中
		ELSEIF INSERT("挿入中", LCOUNT)
			SIF CHECK_CLO("Ｖ露出", LCOUNT) == 0
				CALL SETFLAG, "ボトムを露出：テキスト無し", LCOUNT
		;インサートも挿入もしていない
		ELSE
			CALL RESET_INSERT, LCOUNT
		ENDIF
	ENDSELECT
NEXT

SELECTCOM = MEMO_SELECTCOM

;-------------------------------------------------
;各キャラのインサートフラグを一括管理する
;ARGSに"解除判定"が代入された場合には解除されるかをチェックするのみでインサートフラグの発生は無い
;-------------------------------------------------
@CHECK_INSERT, ARGS
;時間を経過させないコマンドなら変化なし
SIF NOTTIME_PLAY(SELECTCOM)
	RETURN 0
;現在は必ずここの分岐に入る
IF COND("調教側") == 0
	CALL SET_INSERT, TARGET, PLAYER, SELECTCOM, ARGS
	SIF SELECTCOM:1 >= 0
		CALL SET_INSERT, TARGET:1, PLAYER, SELECTCOM:1, ARGS
	SIF SELECTCOM:2 >= 0
		CALL SET_INSERT, TARGET, PLAYER:1, SELECTCOM:2, ARGS
ELSEIF ASSI
	CALL SET_INSERT, ASSI, TARGET, SELECTCOM:1, ARGS
ENDIF

;-------------------------------------------------
;インサートではない特殊な体位フラグの管理
;-------------------------------------------------
@CHECK_EX_EQUIP
;押し倒しクンニorＡ舐めは顔面騎乗フラグON
SELECTCASE SELECTCOM
CASE 1, 9
	SIF TEQUIP:押し倒し
		TEQUIP:顔面騎乗 = SELECTCOM
ENDSELECT


;キス継続…ここではフラグONのみ
;フラグOFFはEVENTCOMで行う
SELECTCASE SELECTCOM
CASE 6, 311
	;連続するほどに消費や効果にボーナス
	TEQUIP:キス += 1
ENDSELECT

;占有不可な場合
IF TEQUIP:Ｗ押し倒し || COND("３Ｐ")
	TEQUIP:キス = 0
	TEQUIP:(TARGET:1):キス = 0
	TEQUIP:(PLAYER:1):キス = 0
	TEQUIP:ASSI:キス = 0
ENDIF

;-------------------------------------------------
;派生コマンドなどを判定する関数
;-------------------------------------------------
@CHECK_COM(ARGS, ARG)
#FUNCTION

VARSET LOCAL

SELECTCASE ARGS
;穴の拡張 >= ペニス かを見る
CASE "完全挿入可能"
	SELECTCASE ARG
	ENDSELECT
	RETURNF 0
;そのコマンドが好きな体位か判定
CASE "好きな体位"
	SELECTCASE ARG
	CASE 60 TO 64, 70 TO 74
;		RETURNF GETBIT(TALENT:好きな体位, ARG - 60)
	CASE 66 TO 69
;		SIF COND("好きな体位中")
;			RETURNF 1
	CASE 80
;		RETURNF GETBIT(TALENT:好きな体位, 19)
	CASE 88
		IF TEQUIP:押し倒し
;			RETURNF GETBIT(TALENT:好きな体位, 26)
		ELSE
;			RETURNF GETBIT(TALENT:好きな体位, 25)
		ENDIF
	CASE 83 TO 88
;		RETURNF GETBIT(TALENT:好きな体位, ARG - 63)
	ENDSELECT
CASE "連続実行"
	SIF PREVCOM == SELECTCOM && COND("前Ｔ調教者") == PLAYER
		RETURNF 1
CASE "ローションマッサージ"
	SIF COND("前Ｔ調教者") != PLAYER || TEQUIP:押し倒し
		RETURNF 0
	SELECTCASE ARG
	CASE TNUM("愛撫")
		SIF PREVCOM == TNUM("ローション")
			RETURNF 1
	ENDSELECT
;甘い言葉は前回行動などで褒めるに変化
CASE "褒める"
	SIF ARG == 0
		ARG = SELECTCOM
	SIF ARG != TNUM("甘い言葉")
		RETURNF 0
;	SIF CHECK_TRAIN283_PRAISE()
;		RETURNF 1
ENDSELECT
RETURNF 0

;-------------------------------------------------
;ARGが-1だと空文字を返すTRAINNAME
;-------------------------------------------------
@TRAINNAME_EX(ARG)
#FUNCTIONS
SIF ARG < 0
	RETURNF ""
RETURNF TRAINNAME:ARG

@PRINT_TRAIN_NAME(ARG)
;STR:今回コマンド = %TRAIN_NAME(ARG)%
;PRINTFORML %STR:今回コマンド%
PRINTFORML %TRAIN_NAME(ARG)%

;-------------------------------------------------
;変化する要素を加味したTRAINNAME（コマンド中の表示）
;-------------------------------------------------
@TRAIN_NAME(ARG)
#FUNCTIONS
#DIMS MEMO_TRAINNAME
;３Ｐの時
IF CHECK_COM("３Ｐ奉仕") && COND("３Ｐ")
	LOCALS = %TRAINNAME_EX(SELECTCOM:2)% ＆ %TRAINNAME_EX(ARG)%
	SELECTCASE ARG
	CASE 82
		SIF CHECK_COM("左右ニプルファック", ARG)
			LOCALS = 左右ニプルファック
	CASE 90
		SIF CHECK_COM("３Ｐ奉仕", ARG) == 90
			LOCALS = 二本手コキ
	CASE 91
		SIF CHECK_COM("３Ｐ奉仕", ARG) == 91
			LOCALS = 二本フェラ
	ENDSELECT
	RETURNF LOCALS
ENDIF

LOCALS = %TRAIN_NAME_SELECT(ARG)%
MEMO_TRAINNAME = %LOCALS%
SELECTCASE ARG
CASE 0
	IF CHECK_COM("ローションマッサージ", ARG)
		LOCALS = ローション尻愛撫
	ENDIF
CASE 1
	IF CHECK_COM("万謝の口付け", ARG)
		LOCALS = 万謝の口付け
	ELSEIF CHECK_COM("恥垢お掃除クンニ", ARG)
		LOCALS = 恥垢お掃除クンニ
	ELSEIF CHECK_COM("お掃除クンニ", ARG)
		LOCALS = お掃除クンニ
	ELSEIF TEQUIP:押し倒し
		IF CHECK_CLO("ブルマ露出")
			LOCALS = ブルマ顔面騎乗
		ELSE
			LOCALS = 顔面騎乗
		ENDIF
	ENDIF
CASE 60 TO 69
	IF ARG == 60
		IF CHECK_COM("Ｖ二本挿入")
			LOCALS = Ｖ二本挿入
		ELSEIF CHECK_COM("二穴挿入")
			LOCALS = 二穴挿入
		ENDIF
	ELSEIF ARG == 65 && INSERT("ワイルドスウィング")
		LOCALS = ワイルドスウィング
	ELSEIF ARG == 66
		LOCALS = %TRAINNAME_EX(ARG)%
		SIF INSERT("騎乗位")
			LOCALS = 騎乗Ｇスポ責め
	ELSEIF ARG == 67
		LOCALS = %TRAINNAME_EX(ARG)%
		;屈曲位で連続実行
		IF PREVCOM == 67 && INSERT("屈曲位")
			LOCALS = 種付けプレス
		ELSEIF HAVE_PENIS(PLAYER) && STATE("ハードスキン", PLAYER) && TEQUIP:押し倒し == 0
			LOCALS = ハードピストン
		ELSEIF INSERT("騎乗位")
			LOCALS = 騎乗子宮口責め
		ENDIF
	ENDIF
	SIF TEQUIP:アナルバイブ && LOCALS == MEMO_TRAINNAME
		LOCALS = 疑似二穴%MEMO_TRAINNAME%
CASE 70 TO 79
	IF ARG == 75 && INSERT("ワイルドスウィング")
		LOCALS = Ａワイルドスウィング
	ELSEIF ARG == PREVCOM && HAVE_PENIS(PLAYER) && COND("前Ｔ調教者") == PLAYER && STATE("ハードスキン", PLAYER) && INSERT("Ａインサート")
		LOCALS = ハードアナルピストン
	ELSEIF CHECK_COM("結腸責め", ARG)
		SIF TEQUIP:押し倒し
			LOCALS = 結腸挿入騎乗位
	ENDIF
	IF ARG == 71
		IF CHECK_COM("Ａ二本挿入")
			LOCALS = Ａ二本挿入
		ELSEIF CHECK_COM("二穴挿入")
			LOCALS = 二穴挿入
		ENDIF
	ENDIF
	SIF TEQUIP:バイブ && LOCALS == MEMO_TRAINNAME
		LOCALS = 疑似二穴%MEMO_TRAINNAME%
CASE 90
;	IF LOCALS != TRAINNAME_EX(ARG)
;	ELSEIF EQUIP:手袋 && !CHECK_GLOVE("指露出") && HAVE_PENIS(PLAYER)
;		LOCALS = 手袋コキ
;	ENDIF

CASE 173
	IF TEQUIP:新妻プレイ
		LOCALS = 新妻プレイ終了
	ELSEIF CHECK_CLO("水着姿")
		LOCALS = 新妻プレイ(水着エプロン)
	ELSEIF CHECK_CLO("ブルマ露出")
		LOCALS = 新妻プレイ(ブルマエプロン)
	ELSEIF CHECK_CLO("下着姿")
		LOCALS = 新妻プレイ(下着エプロン)
	ELSEIF CHECK_CLO("ハダカ")
		LOCALS = 新妻プレイ(ハダカエプロン)
	ELSE
		LOCALS = 新妻プレイ
	ENDIF
ENDSELECT
RETURNF LOCALS


;-------------------------------------------------
;変化する要素を加味したTRAINNAME（コマンド選択するときの表示）
;-------------------------------------------------
@TRAIN_NAME_SELECT(ARG)
#FUNCTIONS
#DIMS PLAY_ONANIE

LOCALS = %TRAIN_NAME_STANDARD(ARG)%
;特殊な名前
SELECTCASE ARG
CASE 0
	SIF CHECK_COM("ローションマッサージ", ARG)
		LOCALS = ローション尻愛撫
CASE 1
	IF CHECK_COM("恥垢お掃除クンニ", ARG)
		LOCALS = 恥垢お掃除クンニ
	ELSEIF CHECK_COM("お掃除クンニ", ARG)
		LOCALS = お掃除クンニ
	ENDIF
	SIF TEQUIP:押し倒し
		LOCALS = 顔面騎乗
	SIF CHECK_COM("万謝の口付け", ARG)
		LOCALS = 万謝の口付け
CASE 2
	IF TEQUIP:アナルバイブ
		IF CHECK_COM("結腸責め", ARG)
			LOCALS = Ａバイブ結腸責め
		ELSE
			LOCALS = Ａバイブ弄り
		ENDIF
	ENDIF
CASE 3
;	PLAY_ONANIE = %CHECK_ONANIE(ARG)%

	IF CHECK_COM("６９自慰", ARG)
		LOCALS = ６９自慰
	ELSEIF STRCOUNT(PLAY_ONANIE, "オナホ")
		LOCALS = オナホ%LOCALS%
	ELSEIF STRCOUNT(PLAY_ONANIE, "三穴バイブ")
		LOCALS = 三穴バイブ%LOCALS%
	ELSEIF STRCOUNT(PLAY_ONANIE, "両穴バイブ")
		LOCALS = 二穴バイブ%LOCALS%
	ELSEIF STRCOUNT(PLAY_ONANIE, "Ｖバイブ")
		LOCALS = バイブ%LOCALS%
	ELSEIF STRCOUNT(PLAY_ONANIE, "Ａバイブ")
		LOCALS = Ａバイブ%LOCALS%
	ENDIF

	IF CHECK_COM("インサート自慰")
		IF INSERT("Ｖインサート")
			LOCALS = %CONDS("体位")%%LOCALS%
		ELSEIF INSERT("Ａインサート")
			LOCALS = Ａ%CONDS("体位")%%LOCALS%
		ENDIF
	ENDIF
	SIF STRLENS(LOCALS) > 14
		RETURNF LOCALS

	IF TEQUIP:ビデオカメラ
		LOCALS = 公開%LOCALS%
	ELSEIF TEQUIP:野外プレイ
		LOCALS = 野外%LOCALS%
	ENDIF
CASE 4
	IF CHECK_COM("恥垢お掃除フェラ", ARG)
		LOCALS = 恥垢お掃除フェラ
	ELSEIF CHECK_COM("お掃除フェラ", ARG)
		LOCALS = お掃除フェラする
	ENDIF
CASE 5
	IF CHECK_COM("乳首舐めに変化", ARG)
		IF CHECK_COM("母乳飲み可能", ARG)
			IF CHECK_COM("胸揉み", ARG) && CHECK_COM("乳首舐め", ARG)
				LOCALS = 胸愛撫＆母乳飲み
			ELSE
				LOCALS = 母乳飲み
			ENDIF
		ELSEIF CHECK_COM("胸揉み", ARG) && CHECK_COM("乳首舐め", ARG)
			LOCALS = 胸愛撫＆乳首舐め
		ELSE
			LOCALS = 乳首舐め
		ENDIF
	ENDIF
CASE 6
	SIF CHECK_COM("テンダーキス", ARG)
		LOCALS = テンダーキッス
CASE 7
	IF CHECK_COM("ふきふき", ARG)
		LOCALS = ふきふき
	ELSEIF CHECK_COM("陰核愛撫に変化", ARG)
		LOCALS = 陰核愛撫
	ENDIF
CASE 8
	IF CHECK_COM("Ｇスポ責め", ARG)
		LOCALS = Ｇスポット刺激
	ELSEIF TEQUIP:バイブ
		LOCALS = バイブ弄り
	ENDIF
CASE 9
	SIF TEQUIP:押し倒し
		LOCALS = Ａ顔面騎乗
CASE 10
	IF CHECK_COM("手コキしあう", ARG)
		LOCALS = 手コキしあう
	ENDIF
CASE 11
	SIF TEQUIP:押し倒し
		LOCALS = 胸の谷間を犯す
CASE 12
	SIF HAVE_PENIS(TARGET) == 0
		LOCALS = 足で股間を弄ぶ
CASE 13
	IF PREVCOM == 13
		IF COND("両穴くぱぁ")
			LOCALS = 両穴観察
		ELSE
			LOCALS = アソコ観察
		ENDIF
	ELSEIF PREVCOM == 14 && CHECK_COM("両穴くぱぁ")
		LOCALS = 両穴くぱぁさせる
	ENDIF
CASE 14
	IF PREVCOM == 14
		IF COND("両穴くぱぁ")
			LOCALS = 両穴観察
		ELSE
			LOCALS = アナル観察
		ENDIF
	ELSEIF PREVCOM == 13 && CHECK_COM("両穴くぱぁ")
		LOCALS = 両穴くぱぁさせる
	ENDIF
CASE 31
	SIF TEQUIP:バイブ
		LOCALS = バイブを抜く
CASE 33
	IF COND("アナルパール")
		LOCALS = アナルパールを抜く
	ELSEIF TEQUIP:アナルバイブ
		LOCALS = Ａバイブを抜く
	ENDIF
CASE 34
	SIF TEQUIP:浣腸セット
		LOCALS = アナルプラグを抜く

CASE 60 TO 79
	IF TEQUIP:押し倒し == 0 && ARG >= 60 && ARG <= 65
		SELECTCASE CHECK_COM("挿入局所責め", ARG)
		CASE 66, 67
			LOCALS = 挿入局所責め
		ENDSELECT
	ENDIF
	IF CHECK_COM("３Ｐ奉仕", ARG)
		LOCALS = %TRAINNAME_EX(ARG)%(３Ｐ)
	ELSEIF (ARG == 60 || ARG == 71) && COND("３Ｐ")
		IF CHECK_COM("Ｖ二本挿入", ARG)
			LOCALS = Ｖ二本挿入(３Ｐ)
		ELSEIF CHECK_COM("Ａ二本挿入", ARG)
			LOCALS = Ａ二本挿入(３Ｐ)
		ELSEIF CHECK_COM("二穴挿入", ARG)
			LOCALS = 二穴挿入(３Ｐ)
		ENDIF
	ELSEIF ARG == 67
		;屈曲位で連続実行
		SIF PREVCOM == 67 && INSERT("屈曲位")
			LOCALS = 種付けプレス
	ELSEIF ARG == 68
		;騎乗位
		SIF INSERT("騎乗位")
			LOCALS = 子宮挿入騎乗位
	ELSEIF CHECK_COM("結腸責め", ARG)
		IF TEQUIP:押し倒し
		;	LOCALS = 結腸挿入騎乗位
		ELSE
			LOCALS = Ｓ状結腸責め
		ENDIF
	ENDIF
CASE 80
	SIF CHECK_COM("双頭バイブプレイ", ARG)
		LOCALS = 双頭バイブプレイ
CASE 82
	IF CHECK_COM("３Ｐ奉仕", ARG)
		IF CHECK_COM("左右ニプルファック", ARG)
			LOCALS = 左右ニプルファック
		ELSE
			LOCALS = %LOCALS%(３Ｐ)
		ENDIF
	ELSEIF TEQUIP:押し倒し
		LOCALS = ニプルオナホ
	ENDIF
CASE 83 TO 88
	SIF CHECK_COM("３Ｐ奉仕", ARG)
		LOCALS = %TRAINNAME_EX(ARG)%(３Ｐ)

CASE 90
	IF CHECK_COM("Ｗ奉仕", ARG)
		LOCALS = Ｗ手コキ
	ELSEIF CHECK_COM("３Ｐ奉仕", ARG)
		IF CHECK_COM("３Ｐ奉仕", ARG) == 90
			LOCALS = 二本手コキ(３Ｐ)
		ELSE
			LOCALS = %LOCALS%(３Ｐ)
		ENDIF
	ELSEIF CHECK_COM("手コキしあう", ARG)
		LOCALS = 手コキしあう
	ELSEIF CHECK_COM("手コキフェラ", ARG)
		LOCALS = 手コキフェラ
	ELSEIF CHECK_COM("Ａ責め手コキ", ARG)
		LOCALS = Ａ責め手コキ
	ELSEIF CHECK_COM("ぱふぱふ手コキ", ARG)
		IF CHECK_COM("母乳飲み可能", ARG)
			LOCALS = 授乳手コキ
		ELSE
			LOCALS = ぱふぱふ手コキ
		ENDIF
	ENDIF
CASE 91
	IF CHECK_COM("Ｗ奉仕", ARG)
		IF CHECK_COM("お掃除フェラ", ARG)
			LOCALS = Ｗお掃除フェラ
		ELSE
			LOCALS = Ｗフェラチオ
		ENDIF
	ELSEIF CHECK_COM("３Ｐ奉仕", ARG)
		IF CHECK_COM("３Ｐ奉仕", ARG) == 91
			LOCALS = 二本フェラ
		ELSE
			LOCALS = %LOCALS%(３Ｐ)
		ENDIF
	ELSEIF CHECK_COM("ペニスキス", ARG)
		LOCALS = ペニスキス
	ELSEIF CHECK_COM("手コキフェラ", ARG)
		LOCALS = 手コキフェラ
	ELSEIF CHECK_COM("パイズリフェラ", ARG)
		LOCALS = パイズリフェラ
	ELSEIF CHECK_COM("恥垢お掃除フェラ", ARG)
		LOCALS = 恥垢お掃除フェラ
	ELSEIF CHECK_COM("お掃除フェラ", ARG)
		LOCALS = お掃除フェラ
	ELSEIF TEQUIP:ディープスロート
		LOCALS = ディープフェラ
	ENDIF
CASE 92
	IF CHECK_COM("Ｗ奉仕", ARG)
		LOCALS = Ｗパイズリ
	ELSEIF CHECK_COM("３Ｐ奉仕", ARG)
		SIF INSERT("インサート", TARGET, PLAYER:1)
			LOCALS = %LOCALS%(３Ｐ)
	ELSEIF CHECK_COM("パイズリフェラ", ARG)
		LOCALS = パイズリフェラ
	;ELSEIF TEQUIP:お風呂プレイ
	;	LOCALS = 潜望鏡
	ENDIF
CASE 93
	IF CHECK_COM("Ｗ奉仕", ARG)
		LOCALS = Ｗ素股
	ELSEIF CHECK_COM("見せ槍", ARG)
		LOCALS = 見せ槍
	ENDIF
CASE 94
	SIF CHECK_COM("Ｗ奉仕", ARG)
		LOCALS = Ｗ泡踊り
CASE 95
	SIF CHECK_COM("Ｗ奉仕", ARG)
		LOCALS = Ｗ足コキ
CASE 96
	IF CHECK_COM("Ａ責め手コキ", ARG)
		IF PREVCOM == 97
			LOCALS = Ａ責めぱんつコキ
		ELSE
			LOCALS = Ａ責め手コキ
		ENDIF
	ELSEIF CHECK_COM("３Ｐ奉仕", ARG)
		SIF INSERT("インサート", TARGET, PLAYER:1)
			LOCALS = %LOCALS%(３Ｐ)
	ELSEIF TEQUIP:押し倒し
		LOCALS = アナル責め
	ENDIF
CASE 97
	IF CHECK_COM("Ｗ奉仕", ARG)
		LOCALS = Ｗぱんつコキ
	ELSEIF CHECK_COM("３Ｐ奉仕", ARG)
		LOCALS = %LOCALS%(３Ｐ)
	ELSEIF CHECK_COM("Ａ責め手コキ", ARG)
		LOCALS = Ａ責めぱんつコキ
	ELSEIF CHECK_COM("ぱふぱふ手コキ", ARG)
		IF CHECK_COM("母乳飲み可能", ARG)
			LOCALS = 授乳ぱんつコキ
		ELSE
			LOCALS = ぱふぱふぱんつコキ
		ENDIF
	ENDIF
CASE 98
	IF CHECK_COM("３Ｐ奉仕", ARG)
		SIF INSERT("インサート", TARGET, PLAYER:1)
			LOCALS = %LOCALS%(３Ｐ)
	ELSEIF CHECK_COM("恥垢お掃除クンニ", ARG)
		LOCALS = 恥垢お掃除クンニ
	ELSEIF CHECK_COM("お掃除クンニ", ARG)
		LOCALS = お掃除クンニ
	ELSEIF TEQUIP:押し倒し
		LOCALS = アソコ舐め
	ENDIF
CASE 99
	IF TEQUIP:シックスナイン
		LOCALS = シックスナイン終了
	;相互お掃除プレイ
	ELSEIF CHECK_COM("お掃除フェラ", 91) + CHECK_COM("お掃除クンニ", 98) && CHECK_COM("お掃除フェラ", 4) + CHECK_COM("お掃除クンニ", 1)
		LOCALS = 相互お掃除６９
	ENDIF
CASE 101
	SIF CHECK_COM("Ｗ奉仕", ARG)
		LOCALS = Ｗ尻コキ
CASE 102
	IF CHECK_COM("胸の揉み合い", ARG)
		LOCALS = 胸の揉み合い
	ELSEIF TEQUIP:押し倒し
		LOCALS = 胸愛撫される
	ENDIF
CASE 104
	IF CHECK_COM("Ｗ奉仕", ARG)
		LOCALS = Ｗぱふぱふ
	ELSEIF CHECK_COM("ぱふぱふ手コキ", 104)
		SIF CHECK_COM("母乳飲み可能", ARG)
			LOCALS = 授乳
		IF PREVCOM == 97
			LOCALS = %LOCALS%ぱんつコキ
		ELSE
			LOCALS = %LOCALS%手コキ
		ENDIF
	ELSEIF CHECK_COM("母乳飲み可能", ARG)
		LOCALS = 授乳%LOCALS%
	ENDIF
CASE 120
	SIF TEQUIP:押し倒し
		LOCALS = 逆レイプ
CASE 126
	SIF TEQUIP:押し倒し
		LOCALS = 逆アナル
CASE 132
	SIF TEQUIP:鼻フック
		LOCALS = 鼻フックを外す
CASE 133
	SIF TEQUIP:アイマスク
		LOCALS = 目隠しを外す
CASE 134
	SIF TEQUIP:拘束
		LOCALS = 拘束を解く
CASE 135
	SIF TEQUIP:口枷
		LOCALS = 口枷を外す
CASE 136
	IF COND("アナル栓")
		IF COND("液体浣腸")
			LOCALS = 排泄
		ELSE
			LOCALS = 腸内ガス排泄
		ENDIF
	ELSEIF COND("液体浣腸")
		LOCALS = 浣腸液追加
	ENDIF

CASE 138
	IF CHECK_COM("口内放尿", ARG)
		LOCALS = 口内放尿
	ELSEIF CHECK_COM("膣内放尿", ARG)
		LOCALS = 膣内放尿
		SIF CHECK_COM("子宮内放尿", ARG)
			LOCALS = 子宮内放尿
	ELSEIF CHECK_COM("温泉浣腸", ARG)
		LOCALS = 温泉浣腸
	ELSEIF CHECK_COM("乳内放尿", ARG)
		LOCALS = 乳内放尿
	ELSEIF CHECK_COM("膀胱内放尿", ARG)
		LOCALS = 膀胱内放尿
	ENDIF
CASE 139
	IF INSERT("インサート") || INSERT("挿入中") || TEQUIP:拘束 || TEQUIP:アイマスク

	ELSEIF TEQUIP:お風呂プレイ
		LOCALS = 湯船に浸かる
	ENDIF
CASE 140
	IF TEQUIP:ディープスロート
		LOCALS = ディープイラマチオ
	ELSEIF CHECK_COM("３Ｐ奉仕", ARG)
		SIF INSERT("インサート", TARGET, PLAYER:1)
			LOCALS = %LOCALS%(３Ｐ)
	ENDIF
CASE 142
	SIF CHECK_COM("結腸責め", ARG)
		LOCALS = Ｓ状結腸フィスト
CASE 144
	IF TEQUIP:押し倒し
		LOCALS = 聖水プレイ
	ELSEIF CHECK_COM("強制放尿", ARG)
		LOCALS = 強制放尿
	ENDIF
CASE 145
	SIF TEQUIP:押し倒し
		LOCALS = 逆剃毛
CASE 150
	SIF TEQUIP:ディープスロート
		LOCALS = ディープスロート終了
CASE 170
	SIF TEQUIP:ビデオカメラ
		LOCALS = 撮影終了
CASE 171
	SIF TEQUIP:野外プレイ
		LOCALS = 野外プレイ終了
CASE 172
	SIF TEQUIP:お風呂プレイ
		LOCALS = 風呂から出る
CASE 173
	SIF TEQUIP:新妻プレイ
		LOCALS = 新妻プレイ終了
CASE 174
	SIF TEQUIP:室内露出プレイ
		LOCALS = 露出プレイ終了
CASE 175
	IF TEQUIP:押し倒し
		IF EQUIP:パンツ && EQUIP:ボディスーツ + EQUIP:アウター == 0 && CHECK_CLO("パンツ露出")
			LOCALS = 下着を脱ぐ
		ELSE
			LOCALS = ハダカになる
		ENDIF
	ELSEIF TEQUIP:拘束 || TEQUIP:室内露出プレイ || TEQUIP:野外プレイ
		IF EQUIP:パンツ && EQUIP:ボディスーツ + EQUIP:アウター == 0 && CHECK_CLO("パンツ露出")
			LOCALS = 下着を脱がす
		ELSE
			LOCALS = ハダカにする
		ENDIF
	ENDIF

CASE 178
	IF TEQUIP:電話中 == 0
		LOCALS = %TEXTS("彼氏")%に電話させる
	ELSE
		LOCALS = 電話を切らせる
	ENDIF

CASE 182
	SIF TEQUIP:PLAYER:押し倒し
		LOCALS = 押し倒し終了

CASE 280
	SIF TEQUIP:PLAYER:拘束 || STATE("バインド", PLAYER)
		LOCALS = ふりほどく

;自慰する
CASE 282
	SELECTCASE PREVCOM
	CASE 3
		LOCALS = 相互自慰
	CASE 1, 4, 9, 13, 14
	CASEELSE
		SIF TEQUIP:PLAYER:自慰する == 3
			LOCALS = 相互自慰
	ENDSELECT
CASE 285
	SIF CHECK_COM("優しく抱きしめる", ARG)
		LOCALS = 優しく抱きしめる
ENDSELECT
RETURNF LOCALS

;-------------------------------------------------
;おもに押し倒しなど場面変化を考慮した標準のTRAINNAME
;（ここで設定したものにコマンド名が変わっても、コマンドの色が変化しない）
;-------------------------------------------------
@TRAIN_NAME_STANDARD(ARG)
#FUNCTIONS
LOCALS = %TRAINNAME_EX(ARG)%
SELECTCASE ARG
CASE 1
	SIF TEQUIP:押し倒し
		LOCALS = 顔面騎乗
CASE 9
	SIF TEQUIP:押し倒し
		LOCALS = Ａ顔面騎乗
CASE 11
	SIF TEQUIP:押し倒し
		LOCALS = 胸の谷間を犯す
CASE 12
	SIF HAVE_PENIS(TARGET) == 0
		LOCALS = 足で股間を弄ぶ
CASE 60
;	SIF CONFIG("立位")
;		LOCALS = 対面立位
CASE 61
;	SIF CONFIG("立位")
;		LOCALS = 立ちバック
CASE 63
;	SIF CONFIG("立位")
;		LOCALS = 駅弁
CASE 64
;	SIF CONFIG("立位")
;		LOCALS = 背面駅弁

CASE 70
;	SIF CONFIG("立位")
;		LOCALS = Ａ対面立位
CASE 71
;	SIF CONFIG("立位")
;		LOCALS = Ａ立ちバック
CASE 73
;	SIF CONFIG("立位")
;		LOCALS = Ａ駅弁
CASE 74
;	SIF CONFIG("立位")
;		LOCALS = Ａ背面駅弁

CASE 83
;	SIF CONFIG("立位")
;		LOCALS = 尿道対面立位
CASE 84
;	SIF CONFIG("立位")
;		LOCALS = 尿道立ちバック
CASE 86
;	SIF CONFIG("立位")
;		LOCALS = 尿道駅弁
CASE 87
;	SIF CONFIG("立位")
;		LOCALS = 尿道背面駅弁

CASE 82
	SIF TEQUIP:押し倒し
		LOCALS = ニプルオナホ
CASE 96
	SIF TEQUIP:押し倒し
		LOCALS = アナル責め
CASE 98
	SIF TEQUIP:押し倒し
		LOCALS = アソコ舐め
CASE 120
	SIF TEQUIP:押し倒し
		LOCALS = 逆レイプ
CASE 126
	SIF TEQUIP:押し倒し
		LOCALS = 逆アナル
CASE 144
	SIF TEQUIP:押し倒し
		LOCALS = 聖水プレイ
CASE 145
	SIF TEQUIP:押し倒し
		LOCALS = 逆剃毛
CASE 175
	IF TEQUIP:押し倒し
		IF EQUIP:パンツ && EQUIP:ボディスーツ + EQUIP:アウター == 0 && CHECK_CLO("パンツ露出")
			LOCALS = 下着を脱ぐ
		ELSE
			LOCALS = ハダカになる
		ENDIF
	ELSEIF TEQUIP:拘束 && TEQUIP:押し倒し == 0
		IF EQUIP:パンツ && EQUIP:ボディスーツ + EQUIP:アウター == 0 && CHECK_CLO("パンツ露出")
			LOCALS = 下着を脱がす
		ELSE
			LOCALS = ハダカにする
		ENDIF
	ENDIF
CASE 280
	SIF TEQUIP:PLAYER:拘束 || STATE("バインド", PLAYER)
		LOCALS = ふりほどく
CASE 283
	SIF CHECK_COM("褒める", ARG)
		LOCALS = 褒める
ENDSELECT
RETURNF LOCALS

;-------------------------------------------------
;TARGETにおけるコマンドARGがPLAYERとしてはどのコマンドに相当するかを返す
;例)クンニの逆は奉仕クンニなのでPREVCOM(TNUM("クンニ") ) = TNUM("奉仕クンニ")
;-------------------------------------------------
@REVCOM(ARG)
#FUNCTION
SELECTCASE ARG
CASE TNUM("クンニ"), TNUM("奉仕クンニ")
	RETURNF TNUM("クンニ") + TNUM("奉仕クンニ") - ARG
CASE TNUM("自慰"), TNUM("自慰する")
	RETURNF TNUM("自慰") + TNUM("自慰する") - ARG
CASE TNUM("フェラする"), TNUM("フェラチオ")
	RETURNF TNUM("フェラする") + TNUM("フェラチオ") - ARG
CASE TNUM("胸愛撫"), TNUM("胸愛撫させる")
	RETURNF TNUM("胸愛撫") + TNUM("胸愛撫させる") - ARG
CASE TNUM("アナル舐め"), TNUM("アナル奉仕")
	RETURNF TNUM("アナル舐め") + TNUM("アナル奉仕") - ARG
CASE TNUM("手コキする"), TNUM("手淫")
	RETURNF TNUM("手コキする") + TNUM("手淫") - ARG
CASE TNUM("パイズリする"), TNUM("パイズリ")
	RETURNF TNUM("パイズリする") + TNUM("パイズリ") - ARG
CASE TNUM("足コキする"), TNUM("足コキ")
	RETURNF TNUM("足コキする") + TNUM("足コキ") - ARG
CASE TNUM("バイブ"), TNUM("逆バイブ")
	RETURNF TNUM("バイブ") + TNUM("逆バイブ") - ARG
CASE TNUM("アナルバイブ"), TNUM("逆Ａバイブ")
	RETURNF TNUM("アナルバイブ") + TNUM("逆Ａバイブ") - ARG
CASE TNUM("オナホール"), TNUM("オナホコキ")
	RETURNF TNUM("オナホール") + TNUM("オナホコキ") - ARG
CASE TNUM("正常位"), TNUM("正常位奉仕")
	RETURNF TNUM("正常位") + TNUM("正常位奉仕") - ARG
CASE TNUM("後背位"), TNUM("後背位奉仕")
	RETURNF TNUM("後背位") + TNUM("後背位奉仕") - ARG
CASE TNUM("騎乗位"), TNUM("騎乗位で犯す")
	RETURNF TNUM("騎乗位") + TNUM("騎乗位で犯す") - ARG
CASE TNUM("アナル正常位"), TNUM("Ａ正常位奉仕")
	RETURNF TNUM("アナル正常位") + TNUM("Ａ正常位奉仕") - ARG
CASE TNUM("アナル後背位"), TNUM("Ａ後背位奉仕")
	RETURNF TNUM("アナル後背位") + TNUM("Ａ後背位奉仕") - ARG
CASE TNUM("アナル騎乗位"), TNUM("Ａ騎乗位で犯す")
	RETURNF TNUM("アナル騎乗位") + TNUM("Ａ騎乗位で犯す") - ARG
ENDSELECT
RETURNF ARG


;-------------------------------------------------
;調教のジャンル判定
;-------------------------------------------------
@TRAIN_GENRE(ARGS, ARG)
#FUNCTION

SIF ARG < 0
	RETURNF 0

SELECTCASE ARGS
CASE "キス"
	SELECTCASE ARG
	CASE 6
		RETURNF 1
	ENDSELECT
CASE "挿入"
	SELECTCASE ARG
	CASE 60 TO 79, 83 TO 88
		RETURNF 1
	ENDSELECT
CASE "Ｖ挿入"
	SELECTCASE ARG
	CASE 60 TO 69
		RETURNF 1
	ENDSELECT
CASE "Ａ挿入"
	SELECTCASE ARG
	CASE 70 TO 79
		RETURNF 1
	ENDSELECT
CASE "尿道挿入"
	SELECTCASE ARG
	CASE 83 TO 88
		RETURNF 1
	ENDSELECT
CASE "正常位"
	SELECTCASE ARG
	CASE 60, 70, 83
		RETURNF 1
	ENDSELECT
CASE "後背位"
	SELECTCASE ARG
	CASE 61, 71, 84
		RETURNF 1
	ENDSELECT
CASE "屈曲位"
	SELECTCASE ARG
	CASE 62, 72, 85
		RETURNF 1
	ENDSELECT
CASE "対面座位"
	SELECTCASE ARG
	CASE 63, 73, 86
		RETURNF 1
	ENDSELECT
CASE "背面座位"
	SELECTCASE ARG
	CASE 64, 74, 87
		RETURNF 1
	ENDSELECT
CASE "騎乗位"
	SELECTCASE ARG
	CASE 65, 75, 88
		RETURNF 1
	ENDSELECT
CASE "駅弁挿入"
	SELECTCASE ARG
	CASE 63, 64, 73, 74, 86, 87
		RETURNF 1
	ENDSELECT
CASE "立位挿入可能"
	SELECTCASE ARG
	CASE 62, 65, 72, 75, 85, 88
		RETURNF 0
	CASE 60 TO 79, 83 TO 88
		RETURNF 1
	ENDSELECT
CASE "立位可能"
	SELECTCASE ARG
	CASE 62, 65, 72, 75, 85, 88
		RETURNF 0
	CASEELSE
		RETURNF 1
	ENDSELECT
CASE "Ｖ調教"
	SELECTCASE ARG
	CASE 8, 31, 60 TO 69, 141, 143
		RETURNF 1
	ENDSELECT
CASE "Ａ調教"
	SELECTCASE ARG
	CASE 2, 9, 33, 34, 70 TO 79, 136, 142, 143
		RETURNF 1
	ENDSELECT
CASE "Ｐ調教"
	SELECTCASE ARG
	CASE 4, 10 TO 12, 37, 120 TO 129
		RETURNF 1
	ENDSELECT
CASE "逆挿入"
	SELECTCASE ARG
	CASE 120 TO 129, TNUM("逆バイブ"), TNUM("逆Ａバイブ")
		RETURNF 1
	ENDSELECT
CASE "Ｖ逆挿入"
	SELECTCASE ARG
	CASE 120 TO 124
		RETURNF 1
	ENDSELECT
CASE "Ａ逆挿入"
	SELECTCASE ARG
	CASE 125 TO 129
		RETURNF 1
	ENDSELECT
CASE "道具調教"
	SELECTCASE ARG
	CASE 30 TO 59
		RETURNF 1
	ENDSELECT
CASE "ハード調教"
	SELECTCASE ARG
	;例外
	CASE 139, 146
	CASE 130 TO 159
		RETURNF 1
	ENDSELECT
CASE "おっぱい"
	SELECTCASE TRAINNAME:ARG
	CASE "胸愛撫", "パイズリする", "胸の谷間を犯す", "ニプルファック", "パイズリ", "泡踊り", "胸愛撫させる", "ぱふぱふ"
		RETURNF 1
	ENDSELECT
	;派生でいじるもの
	SIF CHECK_COM("パイズリフェラ", ARG)
		RETURNF 1
	SIF CHECK_COM("ぱふぱふ手コキ", ARG)
		RETURNF 1
	SIF CHECK_COM("乳内放尿", ARG)
		RETURNF 1
ENDSELECT

;-------------------------------------------------
;物の大きさを判定する関数
;-------------------------------------------------
@SIZE(ARGS, ARG)
#FUNCTION
#DIM VALUE

VARSET LOCAL

SELECTCASE ARGS
;弛緩していると深さはともかく受け入れられるサイズ自体は増える
CASE "Ｖ拡張", "Ａ拡張"
	SIF ARG == 0
		ARG = TARGET
	LOCAL = ABL:ARG:ARGS
	SIF TEQUIP:ARG:弛緩
		LOCAL += 1

CASE "指の直径"
	SIF ARG == 0
		ARG = TARGET
	;薬指の一番太い部分の値の平均値を使う
	;身長を(50+13x)cmとすると指は(7+x)mmぐらいか
	;小柄な女性で13mm、長身な女性でも16～17mmぐらい。オトコだとそれぞれ+2mm
	LOCAL = MAX(BASE:ARG:身長 - 50, 0)/13 + 7

	SIF IS_MALE(ARG)
		LOCAL += 2
CASE "指"
	RETURNF 0

CASE "基本ペニスサイズ", "初期ペニスサイズ"
	SIF ARG == 0
		ARG = PLAYER

	SELECTCASE ARGS
	CASE "基本ペニスサイズ"
		VALUE = BASE:ARG:ペニスサイズ
	CASE "初期ペニスサイズ"
		VALUE = COND("初期ペニス", ARG)
	ENDSELECT
	RETURNF VALUE

CASE "ペニスの直径"
	SIF ARG == 0
		ARG = PLAYER

	;オンナはペニバン
	IF IS_FEMALE(ARG) && STATE("具現", ARG) == 0
		LOCAL = 7
	ELSE
		LOCAL = SIZE("基本ペニスサイズ", ARG)*7
	ENDIF

	RETURNF 21 + LOCAL

CASE "ペニス"
	SIF ARG == 0
		ARG = PLAYER
	;オンナはペニバン
	SIF IS_FEMALE(ARG) && STATE("具現", ARG) == 0
		RETURNF 1
	LOCAL = SIZE("基本ペニスサイズ", ARG)
		SELECTCASE RAND:100
		CASE IS >= 95
			LOCAL = 3
		CASE IS >= 85
			LOCAL = 2
		CASE IS >= 10
			LOCAL = 1
		CASE 0
			LOCAL = 0
		ENDSELECT
CASE "Ｗペニス"
	IF PLAYER:1
		RETURNF 1 + SIZE("ペニス", MASTER) + SIZE("ペニス", PLAYER:1)
	ELSE
		RETURNF 1 + SIZE("ペニス", MASTER)
	ENDIF
CASE "バイブ"
	SIF ARG == 0
		ARG = TARGET
	SIF TEQUIP:ARG:バイブ == 0
		RETURNF 0

	SELECTCASE GETBITS(TEQUIP:ARG:バイブ, 0, 9)
	CASE 1p0
		LOCAL = 0
	CASE 1p1
		LOCAL = 1
	CASE 1p2
		LOCAL = 2
	CASE 1p3
		LOCAL = 3
	CASE 1p4
		LOCAL = 4
	CASE 1p5
		LOCAL = 5
	ENDSELECT

CASE "Ａバイブ"
	SIF ARG == 0
		ARG = TARGET
	SIF TEQUIP:ARG:アナルバイブ == 0
		RETURNF 0

	SELECTCASE GETBITS(TEQUIP:ARG:アナルバイブ, 0, 9)
	CASE 1p0
		LOCAL = 0
	CASE 1p1
		LOCAL = 1
	CASE 1p2
		LOCAL = 2
	CASE 1p3
		LOCAL = 3
	CASE 1p4
		LOCAL = 4
	CASE 1p5
		LOCAL = 5
	ENDSELECT

CASE "Ｗフィスト"
	SIF ARG == 0
		ARG = PLAYER
	RETURNF SIZE("片手フィスト", ARG) + 1
CASE "片手フィスト"
	SIF ARG == 0
		ARG = PLAYER
	LOCAL = 5
	SIF HAVE_VAGINA(ARG)
		LOCAL -= 1
	SIF IS_小柄(ARG) || TALENT:ARG:オトコの娘
		LOCAL -= 1
CASE "二本フィスト"
	SIF ARG == 0
		ARG = PLAYER
	LOCAL = SIZE("片手フィスト", ARG)
	RETURNF MAX(LOCAL*2 - 1, LOCAL + 2)
ENDSELECT
RETURNF LOCAL

;-------------------------------------------------
;物の堅さを判定する関数
;-------------------------------------------------
@HARD(ARGS, ARG)
#FUNCTION

VARSET LOCAL

SELECTCASE ARGS
CASE "指"
	RETURNF 1
CASE "ペニス"
	SIF ARG == 0
		ARG = PLAYER
	;ペニバン
	SIF HAVE_PENIS(ARG) == 0
		RETURNF 3

	LOCAL = 1
CASE "バイブ"
	SIF ARG == 0
		ARG = TARGET
	SIF TEQUIP:ARG:バイブ == 0
		RETURNF 0
	LOCAL = 3
CASE "Ａバイブ"
	SIF ARG == 0
		ARG = TARGET
	SIF TEQUIP:ARG:アナルバイブ == 0
		RETURNF 0
	IF COND("アナルパール", ARG)
		LOCAL = 1
	ELSE
		SELECTCASE GETBITS(TEQUIP:ARG:アナルバイブ, 0, 9)
		CASE 1p0
			LOCAL = 2
		CASEELSE
			LOCAL = 3
		ENDSELECT
	ENDIF

CASE "フィスト"
	SIF ARG == 0
		ARG = PLAYER
	LOCAL = 2
	;オトコ
	SIF IS_MALE(ARG)
		LOCAL += 1
ENDSELECT
RETURNF LOCAL

;-------------------------------------------------
;膣を使える(中に入れることが出来る)か判定
;TEQUIPについては、ARGSで例外を指定できる
;-------------------------------------------------
@USE_V(ARG, ARGS)
#FUNCTION
;オトコ
SIF IS_MALE(ARG)
	RETURNF 0
;調教中でないなら以下は加味しない
SIF COND("調教中", ARG) == 0
	RETURNF 1

;Ｖ露出不可
SIF CHECK_CLO("Ｖ露出可", ARG) == 0
	RETURNF 0
;バイブ挿入中はダメ
SIF TEQUIP:ARG:バイブ && ARGS != "バイブ"
	RETURNF 0
RETURNF 1

;-------------------------------------------------
;アナルを使える(中に入れることが出来る)か判定
;TEQUIPについては、ARGSで例外を指定できる
;-------------------------------------------------
@USE_A(ARG, ARGS)
#FUNCTION
;調教中でないなら以下は加味しない
SIF COND("調教中", ARG) == 0
	RETURNF 1
;Ａ露出不可
SIF CHECK_CLO("Ａ露出可", ARG) == 0
	RETURNF 0
;アナルバイブ挿入中はダメ
SIF TEQUIP:ARG:アナルバイブ && ARGS != "アナルバイブ"
	RETURNF 0
;アナルプラグ使用中はダメ
SIF TEQUIP:浣腸セット && ARGS != "アナルプラグ"
	RETURNF 0
RETURNF 1

;-------------------------------------------------
;ARGのARGS状態をEQUIP:ステート変化～9で管理する
;-------------------------------------------------
@STATE(ARGS, ARG)
#FUNCTION
SIF ARG < 0
	RETURNF 0
SIF ARG == 0 && TARGET
	ARG = TARGET
SELECTCASE ARGS
CASE "眠気"
;	RETURNF GETBIT(EQUIP:ARG:ステート変化, 3)
CASE "酔い"
;	RETURNF GETBIT(EQUIP:ARG:ステート変化, 4)
CASE "悪酔い"
;	RETURNF GETBIT(EQUIP:ARG:ステート変化, 5)
CASE "恍惚"
;	RETURNF GETBIT(EQUIP:ARG:ステート変化, 6)
CASE "撃沈"
;	RETURNF GETBIT(EQUIP:ARG:ステート変化, 7)

CASE "ペニス陰核化"
;	RETURNF GETBIT(EQUIP:ARG:ステート変化, 9)
CASE "具現"
;	RETURNF GETBIT(EQUIP:ARG:ステート変化, 10)

CASE "骨抜き"
;	RETURNF GETBIT(EQUIP:ARG:ステート変化, 11)

ENDSELECT
RETURNF 0

@ADD_STATE, ARG, ARGS
SIF ARG < 0
	RETURN 0
SIF ARG == 0 && TARGET
	ARG = TARGET
SELECTCASE ARGS
CASE "眠気"
;	SETBIT EQUIP:ARG:ステート変化, 3
CASE "酔い"
;	SETBIT EQUIP:ARG:ステート変化, 4
CASE "悪酔い"
;	SETBIT EQUIP:ARG:ステート変化, 5
CASE "恍惚"
;	SETBIT EQUIP:ARG:ステート変化, 6
;	TFLAG:恍惚ターン数 = 0
CASE "撃沈"
;	SETBIT EQUIP:ARG:ステート変化, 7

CASE "ペニス陰核化"
;	SETBIT EQUIP:ARG:ステート変化, 9
;	TALENT:ARG:オンナ = 1
;	TALENT:ARG:ふたなり = 0
	CALL TOGGLE_P(ARG)
CASE "具現"
;	SETBIT EQUIP:ARG:ステート変化, 10
	CALL TOGGLE_P(ARG)

CASE "骨抜き"
;	SETBIT EQUIP:ARG:ステート変化, 11
;	TFLAG:骨抜きターン数 = 0

CASE "媚薬"
	TEQUIP:ARG:媚薬 += 100
	SIF TALENT:ARG:薬毒耐性
		TEQUIP:ARG:媚薬 /= 4
ENDSELECT

@REMOVE_STATE, ARG, ARGS
SIF ARG < 0
	RETURN 0
SIF ARG == 0 && TARGET
	ARG = TARGET
SELECTCASE ARGS
CASE "眠気"
;	CLEARBIT EQUIP:ARG:ステート変化, 3
CASE "酔い"
;	CLEARBIT EQUIP:ARG:ステート変化, 4
CASE "悪酔い"
;	CLEARBIT EQUIP:ARG:ステート変化, 5
CASE "恍惚"
;	CLEARBIT EQUIP:ARG:ステート変化, 6
;	TFLAG:恍惚ターン数 = 0
CASE "撃沈"
;	CLEARBIT EQUIP:ARG:ステート変化, 7

CASE "ペニス陰核化"
;	CLEARBIT EQUIP:ARG:ステート変化, 9
;	TALENT:ARG:オンナ = 0
;	IF COND("初期ふたなり", ARG)
;		TALENT:ARG:ふたなり = COND("初期ふたなり", ARG)
;	ELSE
;		TALENT:ARG:ふたなり = 2
;	ENDIF
	CALL TOGGLE_P(ARG)
CASE "具現"
;	CLEARBIT EQUIP:ARG:ステート変化, 10
	CALL TOGGLE_P(ARG)
	;汚れも無くす
	CALL RESET_STAIN_EX, "Ｐ", ARG

CASE "骨抜き"
;	CLEARBIT EQUIP:ARG:ステート変化, 11
;	TFLAG:骨抜きターン数 = 0
ENDSELECT

;-------------------------------------------------
;PALAM:ARGSにCUP:ARGSを加えた実質的には現在の値
;-------------------------------------------------
@NOW_PALAM(ARGS, ARG)
#FUNCTION
SIF ARG == 0 && TARGET
	ARG = TARGET
LOCAL = CUP:ARG:ARGS + PALAM:ARG:ARGS
RETURNF LOCAL

;-------------------------------------------------
;エラーのでないPALAMLV。間違えやすそうな気もする。
;-------------------------------------------------
@PALAM_LV(ARG)
#FUNCTION
SELECTCASE ARG
CASE IS <= 0
	RETURNF 0
;PALAMLVの値は、順に1:100, 2:500, 3:3000, 4:1万, 5:3万, 6:6万, 7:10万, 8:15万, 9:25万
CASE 1 TO 14
	LOCAL = PALAMLV:ARG
CASE 15
	LOCAL = 50000000
CASEELSE
	LOCAL = 100000000
ENDSELECT

RETURNF LOCAL

;-------------------------------------------------
;ARGのPALAMLVを返す
;-------------------------------------------------
@GET_PALAMLV(ARG)
#FUNCTION
SELECTCASE ARG
CASE IS <= 0
	RETURNF 0
CASE IS < 10000000
	LOCAL = GETPALAMLV(ARG, 13)
CASE IS < 50000000
	LOCAL = 14
CASE IS < 100000000
	LOCAL = 15
CASEELSE
	LOCAL = 16
ENDSELECT

RETURNF LOCAL

;-------------------------------------------------
;ARGの数値をPALAM_LVを用いてARG = PALAM_LV(n) + (PALAM_LV(n+1) - PALAM_LV(n) ) * X で表し、
;nに (n - ARG:1) を代入した値を返させる。ARG:1を省略したらARG:1は1
;例)PALAMが3512の際に1段階下げるならば、3512 = PALAM_LV(3) + (PALAM_LV(4) - PALAM_LV(3) ) * 0.073なので、
;DOWN_PALAMLV(3512, 1) = PALAM_LV(2) + (PALAM_LV(3) - PALAM_LV(2) ) * 0.073 = 682となる
;おもに、素質の影響で得るPALAMを少なくさせたい時に使う
;-------------------------------------------------
@DOWN_PALAMLV(ARG, ARG:1)
#FUNCTION
#DIM LCOUNT
#DIM MEMO_PALAMLV
#DIM MEMO_DIF, 2
#DIM MEMO_PER

;ARGが100未満なら０
SIF GET_PALAMLV(ARG) <= 0
	RETURNF 0
SIF ARG:1 <= 0
	ARG:1 = 1

;ARGのPALAMLVを求める
MEMO_PALAMLV = GET_PALAMLV(ARG)
MEMO_DIF = PALAM_LV(MEMO_PALAMLV + 1) - PALAM_LV(MEMO_PALAMLV)
MEMO_DIF:1 = ARG - PALAM_LV(MEMO_PALAMLV)

FOR LCOUNT, 0, 101
	SELECTCASE MEMO_DIF * LCOUNT / 100
	CASE IS >= MEMO_DIF:1
		MEMO_PER = LCOUNT
		BREAK
	ENDSELECT
NEXT

RETURNF PALAM_LV(MEMO_PALAMLV - ARG:1) + (PALAM_LV(MEMO_PALAMLV + 1 - ARG:1) - PALAM_LV(MEMO_PALAMLV - ARG:1) ) * MEMO_PER / 100

;-------------------------------------------------
;@DOWN_PALAMLV(ARG)の逆方向版
;-------------------------------------------------
@UP_PALAMLV(ARG, ARG:1)
#FUNCTION
#DIM LCOUNT
#DIM MEMO_PALAMLV
#DIM MEMO_DIF, 2
#DIM MEMO_PER

;ARGが100未満の時に０を100にするか、マイルドに５倍にしておくか…
;試しに０を100にしてみる
;SIF ARG <= 100
;	RETURNF ARG * 5
SIF ARG:1 <= 0
	ARG:1 = 1

;ARGのPALAMLVを求める
MEMO_PALAMLV = GET_PALAMLV(ARG)
MEMO_DIF = PALAM_LV(MEMO_PALAMLV + 1) - PALAM_LV(MEMO_PALAMLV)
MEMO_DIF:1 = ARG - PALAM_LV(MEMO_PALAMLV)

FOR LCOUNT, 0, 101
	SELECTCASE MEMO_DIF * LCOUNT / 100
	CASE IS >= MEMO_DIF:1
		MEMO_PER = LCOUNT
		BREAK
	ENDSELECT
NEXT

RETURNF PALAM_LV(MEMO_PALAMLV + ARG:1) + (PALAM_LV(MEMO_PALAMLV + 1 + ARG:1) - PALAM_LV(MEMO_PALAMLV + ARG:1) ) * MEMO_PER / 100


;-------------------------------------------------
;最大値指定をしなくていいEXPLVみたいなもの
;EXPLVの初期値, 0/1/5/20/50/100/150/200/300/400/500/600/700/800/900/1000/1200/1400/1600/1800/2000
;-------------------------------------------------
@EXP_LV(ARG)
#FUNCTION
SELECTCASE ARG
CASE IS <= 0
	RETURNF 0
CASE 1
	RETURNF 1
CASE 2
	RETURNF 5
CASE 3
	RETURNF 20
CASE 4
	RETURNF 50
CASE 5
	RETURNF 100
CASE 6
	RETURNF 150
CASE 7
	RETURNF 200
CASE 8
	RETURNF 300
CASE 9
	RETURNF 400
CASE 10
	RETURNF 500
CASE 11
	RETURNF 600
CASE 12
	RETURNF 700
CASE 13
	RETURNF 800
CASE 14
	RETURNF 900
CASE 15
	RETURNF 1000
CASEELSE
	RETURNF 1000 + (ARG - 15)*200
ENDSELECT

RETURNF LOCAL

@GET_EXP_LV(ARG)
#FUNCTION
SELECTCASE ARG
CASE IS <= 0
	RETURNF 0
CASE IS < 5
	RETURNF 1
CASE IS < 20
	RETURNF 2
CASE IS < 50
	RETURNF 3
CASE IS < 100
	RETURNF 4
CASE IS < 150
	RETURNF 5
CASE IS < 200
	RETURNF 6
CASE IS < 300
	RETURNF 7
CASE IS < 400
	RETURNF 8
CASE IS < 500
	RETURNF 9
CASE IS < 600
	RETURNF 10
CASE IS < 700
	RETURNF 11
CASE IS < 800
	RETURNF 12
CASE IS < 900
	RETURNF 13
CASE IS < 1000
	RETURNF 14
CASEELSE
	RETURNF (ARG - 1000)/200 + 15
ENDSELECT

RETURNF LOCAL


;-------------------------------------------------
;今回の調教でARGが得たARGS経験
;@EVENTTURNEND内で初期化される
;-------------------------------------------------
@EXP_GAIN(ARGS, ARG)
#FUNCTION
SIF ARG == 0 && TARGET
	ARG = TARGET
LOCAL = EXP:ARG:ARGS - TCVAR:ARG:(GETNUM(EXP, ARGS) + 200)
RETURNF LOCAL


@RESET_EXP_GAIN, ARG
FOR LOCAL, 0, 100
	TCVAR:ARG:(LOCAL + 200) = EXP:ARG:LOCAL
NEXT


@EQ_EXP_GAIN, ARG, ARG:1
TCVAR:(ARG:1):(ARG + 200) = EXP:(ARG:1):ARG

;-------------------------------------------------
;キャラARG:1が得たARGS経験の値ARGを、加算しつつ表示させるための関数。ARGはTARGETならば省略可能
;例）CALL PRINT_EXP_ADD, "羞恥快楽経験", 10, PLAYERだと、
;EXP:PLAYER:羞恥快楽経験 += 10
;PRINTFORML 羞恥快楽経験＋{10}（%CALLNAME:PLAYER%）
;に等しい。
;-------------------------------------------------
@PRINTL_EXP_ADD, ARGS, ARG, ARG:1
SIF ARG <= 0 || ARG:1 < 0
	RETURN 0
SIF ARG:1 == 0 && TARGET
	ARG:1 = TARGET

EXP:(ARG:1):ARGS += ARG
PRINTFORML %ARGS%＋{ARG}\@ ARG:1 != TARGET ? （%CALLNAME:(ARG:1)%） # \@

;-------------------------------------------------
;PRINTL_EXP_ADDのウェイト有り版
;-------------------------------------------------
@PRINTW_EXP_ADD, ARGS, ARG, ARG:1
SIF ARG <= 0 || ARG:1 < 0
	RETURN 0
SIF ARG:1 == 0 && TARGET
	ARG:1 = TARGET

EXP:(ARG:1):ARGS += ARG
PRINTFORMW %ARGS%＋{ARG}\@ ARG:1 != TARGET ? （%CALLNAME:(ARG:1)%） # \@

;-------------------------------------------------
;PREVUPは前回ターンでARGが得たUP:ARGS
;-------------------------------------------------
@PREVUP(ARGS, ARG)
#FUNCTION
SIF ARG == 0 && TARGET
	ARG = TARGET
LOCAL = TCVAR:ARG:(GETNUM(PALAM, ARGS) + 40)
RETURNF LOCAL

@SET_PREVUP, ARG
FOR LOCAL, 0, 16
	TCVAR:ARG:(40 + LOCAL) = CUP:ARG:LOCAL
NEXT

;-------------------------------------------------
;PREVEX(ARGS, ARG)は前回ターンでARGが得たNOWEX:ARGS
;-------------------------------------------------
@PREVEX(ARGS, ARG)
#FUNCTION
SIF ARG == 0 && TARGET
	ARG = TARGET

RETURNF TCVAR:ARG:(GETNUM(EX, ARGS) + 900)


@SET_PREVEX, ARG
FOR LOCAL, 0, 60
	TCVAR:ARG:(900 + LOCAL) = NOWEX:ARG:LOCAL
NEXT

;-------------------------------------------------
;SEXUAL_PLAYは、好色なキャラに補正がかかるプレイ
;ABNORMAL_PLAYは倒錯的なキャラに補正がかかるプレイ
;ORAL_PLAYはお口を使ったプレイ
;SERVICE_PLAYは奉仕プレイ
;EXPOSURE_PLAYは露出プレイ
;-------------------------------------------------
@SEXUAL_PLAY()
#FUNCTION
SELECTCASE SELECTCOM
CASE 0 TO 14, 30 TO 32, 60 TO 129, 260, 261
	RETURNF 1
ENDSELECT
RETURNF 0

@ABNORMAL_PLAY()
#FUNCTION
SELECTCASE SELECTCOM
CASE 2, 9, 14, 33, 70 TO 79, 96, 130 TO 159, 170, 171, 174, 179, 260 TO 279
	RETURNF 1
ENDSELECT
RETURNF 0

@ORAL_PLAY()
#FUNCTION
SELECTCASE SELECTCOM
CASE 6, 91, 96, 98, 99, 140
	RETURNF 1
ENDSELECT
RETURNF 0

@INSERT_PLAY(ARG)
#FUNCTION
SELECTCASE ARG
CASE 60 TO 79, 81 TO 89, 140, 150
	RETURNF 1
ENDSELECT
RETURNF 0

@VAU_INSERT_PLAY(ARG)
#FUNCTION
SELECTCASE ARG
CASE 60 TO 79, 83 TO 89
	RETURNF 1
ENDSELECT
RETURNF 0

@V_INSERT_PLAY(ARG)
#FUNCTION
SELECTCASE ARG
CASE 60 TO 69
	RETURNF 1
ENDSELECT
RETURNF 0

@A_INSERT_PLAY(ARG)
#FUNCTION
SELECTCASE ARG
CASE 70 TO 79
	RETURNF 1
ENDSELECT
RETURNF 0

@U_INSERT_PLAY(ARG)
#FUNCTION
SELECTCASE SELECTCOM
CASE 83 TO 88
	RETURNF 1
ENDSELECT
RETURNF 0

@SERVICE_PLAY()
#FUNCTION
SELECTCASE SELECTCOM
CASE 65, 75, 90 TO 119, 120, 121, 125, 126, 138, 140, 150
	RETURNF 1
ENDSELECT
RETURNF 0

@EXPOSURE_PLAY()
#FUNCTION
SELECTCASE SELECTCOM
CASE 13, 14, 136, 144, 145, 170, 171, 174
	RETURNF 1
ENDSELECT
RETURNF 0

@ITEM_PLAY()
#FUNCTION
SELECTCASE SELECTCOM
CASE 260 TO 279
	RETURNF 1
ENDSELECT
RETURNF 0

@NOTTIME_PLAY(ARG)
#FUNCTION
SELECTCASE ARG
CASE TNUM("エーテル")
	SIF ASSIPLAY
		RETURNF 1
	SIF PLAYER == MASTER && ASSI && STATE("撃沈", ASSI) == 0
		RETURNF 1
CASE TNUM("身嗜み管理"), TNUM("写真撮影"), TNUM("甘い言葉")
	RETURNF 1
ENDSELECT
RETURNF 0

;-------------------------------------------------
;FIRSTCOMは今までの調教でARG番の調教コマンドを選んだかどうか判定できる(Train番号640番まで)
;フラグのセットは@SET_CHOSECOMで行う
;-------------------------------------------------
@FIRSTCOM(ARG, ARG:1)
#FUNCTION
SIF ARG < 0
	RETURNF 0
SIF ARG:1 == 0 && TARGET
	ARG:1 = TARGET
SIF GETBIT(CFLAG:(ARG:1):(710 + ARG/64), ARG%64)
	RETURNF 1
SIF GETBIT(CFLAG:(ARG:1):(720 + ARG/64), ARG%64)
	RETURNF 1
RETURNF 0

;押し倒されていない状態でARG番のコマンドを選んだかを判定する関数
@FIRSTCOM_NOR(ARG, ARG:1)
#FUNCTION
SIF ARG < 0
	RETURNF 0
SIF ARG:1 == 0 && TARGET
	ARG:1 = TARGET
SIF GETBIT(CFLAG:(ARG:1):(710 + ARG/64), ARG%64)
	RETURNF 1
RETURNF 0

;押し倒し状態でARG番のコマンドを選んだかを判定する関数
@FIRSTCOM_REV(ARG, ARG:1)
#FUNCTION
SIF ARG < 0
	RETURNF 0
SIF ARG:1 == 0 && TARGET
	ARG:1 = TARGET
SIF GETBIT(CFLAG:(ARG:1):(720 + ARG/64), ARG%64)
	RETURNF 1
RETURNF 0

;-------------------------------------------------
;CHOSECOMは今回の調教でARG番の調教コマンドを選んだかどうか判定できる(Train番号640番まで)
;フラグのセットは@SET_CHOSECOMで行う
;-------------------------------------------------
@CHOSECOM(ARG, ARG:1)
#FUNCTION
SIF ARG < 0
	RETURNF 0
SIF ARG:1 == 0 && TARGET
	ARG:1 = TARGET
SIF GETBIT(TCVAR:(ARG:1):(30 + ARG/64), ARG%64)
	RETURNF 1
RETURNF 0

@CHOSECOM_REV(ARG, ARG:1)
#FUNCTION
SIF ARG < 0
	RETURNF 0
SIF ARG:1 == 0 && TARGET
	ARG:1 = TARGET
SIF GETBIT(TCVAR:(ARG:1):(70 + ARG/64), ARG%64)
	RETURNF 1
RETURNF 0

@SET_CHOSECOM, ARG, ARG:1
SIF ARG < 0
	RETURN 0
;基本的にはSELECTCOMだが、Ｗ押し倒しのとき対応
IF ARG:1 >= 0
	LOCAL = ARG:1
	;TCVAR:30～39に記録
	SETBIT TCVAR:ARG:(30 + LOCAL/64), LOCAL%64

;	IF TCVAR:ARG:開始時押し倒し == 0
;		;CFLAG:710～719に@FIRSTCOMの変数もセット
;		SETBIT CFLAG:ARG:(710 + LOCAL/64), LOCAL%64
;	ELSE
;		;CFLAG:710～719に@FIRSTCOM_REVの変数もセット
;		SETBIT CFLAG:ARG:(720 + LOCAL/64), LOCAL%64
;		;TCVAR:70～79に記録
;		SETBIT TCVAR:ARG:(70 + LOCAL/64), LOCAL%64
;	ENDIF
ENDIF
;ARGが助手ならば、今回のコマンドも記録する
IF ARG == ASSI
	PREVCOM:1 = SELECTCOM:1
	PREVCOM:2 = SELECTCOM:2
	PREVCOM:3 = SELECTCOM:3
ENDIF

@RESET_CHOSECOM, ARG
VARSET TCVAR:ARG:0, 0, 30, 40
VARSET TCVAR:ARG:0, 0, 140, 150

;-------------------------------------------------
;FIRSTCOMS(ARGS)は今までに選択したコマンド群の記録
;CHOSECOMS(ARGS)は今回選択したコマンド群の記録
;ARGSは / で区切ることで複数指定もできる。コマンドを指定する時にはTRAINNAMEを用いること。
;-------------------------------------------------
@FIRSTCOMS(ARGS, ARG)
#FUNCTION
#DIM LCOUNT
#DIM LCOUNT2
SIF ARG == 0 && TARGET
	ARG = TARGET

VARSET LOCALS
SPLIT ARGS, "/", LOCALS

FOR LCOUNT2, 0, 10
	SELECTCASE LOCALS:LCOUNT2
	CASE ""
		RETURNF 0
	CASE "口"
		SIF FIRSTCOM(6, ARG) || FIRSTCOM(91, ARG) || FIRSTCOM(96, ARG) || FIRSTCOM(98, ARG) || FIRSTCOM(99, ARG) || FIRSTCOM(140, ARG) || FIRSTCOM(150, ARG)
			RETURNF 1
	CASE "フェラ"
		SIF FIRSTCOM(91, ARG) || FIRSTCOM(99, ARG) || FIRSTCOM(140, ARG) || FIRSTCOM(150, ARG)
			RETURNF 1
	CASE "フィスト"
		SIF FIRSTCOM(141, ARG) || FIRSTCOM(142, ARG) || FIRSTCOM(143, ARG)
			RETURNF 1
	CASE "挿入"
		;ＶorＡor尿道インサートを選択済みなら1を返す
		SIF FIRSTCOM(83, ARG)
			RETURNF 1
		FOR LCOUNT, 60, 80
			SIF FIRSTCOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
	CASE "Ｖ挿入"
		;Ｖインサートを選択済みなら1を返す
		FOR LCOUNT, 60, 70
			SIF FIRSTCOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
	CASE "Ａ挿入"
		;Ａインサートを選択済みなら1を返す
		FOR LCOUNT, 70, 80
			SIF FIRSTCOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
	CASE "Ｖ逆挿入"
		FOR LCOUNT, 120, 125
			SIF FIRSTCOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
	CASE "Ａ逆挿入"
		FOR LCOUNT, 125, 130
			SIF FIRSTCOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
	;以下はTRAINNAME
	CASEELSE
		SIF FIRSTCOM(GETNUM(TRAINNAME, LOCALS:LCOUNT2), ARG)
			RETURNF 1
	ENDSELECT
NEXT
RETURNF 0

@CHOSECOMS(ARGS, ARG)
#FUNCTION
#DIM LCOUNT
#DIM LCOUNT2
SIF ARG == 0 && TARGET
	ARG = TARGET

VARSET LOCALS
SPLIT ARGS, "/", LOCALS

FOR LCOUNT2, 0, 10
	SELECTCASE LOCALS:LCOUNT2
	CASE ""
		RETURNF 0
	CASE "キス"
		SIF CHOSECOM(6, ARG)
			RETURNF 1
	CASE "キス以外"
		FOR LCOUNT, 0, 300
			SELECTCASE LCOUNT
			CASE 6
			CASEELSE
				SIF CHOSECOM(LCOUNT, ARG)
					RETURNF 1
			ENDSELECT
		NEXT
	CASE "口"
		SIF CHOSECOM(6, ARG) || CHOSECOM(91, ARG) || CHOSECOM(96, ARG) || CHOSECOM(98, ARG) || CHOSECOM(99, ARG) || CHOSECOM(140, ARG) || CHOSECOM(150, ARG)
			RETURNF 1
	CASE "口以外"
		FOR LCOUNT, 0, 300
			SELECTCASE LCOUNT
			CASE 6, 91, 96, 98, 99, 140, 150
			CASEELSE
				SIF CHOSECOM(LCOUNT, ARG)
					RETURNF 1
			ENDSELECT
		NEXT
	CASE "フェラ"
		SIF CHOSECOM(91, ARG) || CHOSECOM(99, ARG) || CHOSECOM(140, ARG) || CHOSECOM(150, ARG)
			RETURNF 1
	CASE "フェラ以外"
		FOR LCOUNT, 0, 300
			SELECTCASE LCOUNT
			CASE 91, 99, 140, 150
			CASEELSE
				SIF CHOSECOM(LCOUNT, ARG)
					RETURNF 1
			ENDSELECT
		NEXT
	CASE "挿入"
		;ＶorＡor尿道インサートを選択済みなら1を返す
		FOR LCOUNT, 60, 80
			SIF CHOSECOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
		FOR LCOUNT, 83, 89
			SIF CHOSECOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
	CASE "挿入以外"
		FOR LCOUNT, 0, 300
			SELECTCASE LCOUNT
			CASE 60 TO 79, 83 TO 89
			CASEELSE
				SIF CHOSECOM(LCOUNT, ARG)
					RETURNF 1
			ENDSELECT
		NEXT
	CASE "Ｖ挿入"
		;Ｖインサートを選択済みなら1を返す
		FOR LCOUNT, 60, 70
			SIF CHOSECOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
	CASE "Ｖ挿入以外"
		FOR LCOUNT, 0, 300
			SELECTCASE LCOUNT
			CASE 60 TO 69
			CASEELSE
				SIF CHOSECOM(LCOUNT, ARG)
					RETURNF 1
			ENDSELECT
		NEXT
	CASE "Ａ挿入"
		;Ａインサートを選択済みなら1を返す
		FOR LCOUNT, 70, 80
			SIF CHOSECOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
	CASE "Ａ挿入以外"
		FOR LCOUNT, 0, 300
			SELECTCASE LCOUNT
			CASE 70 TO 79
			CASEELSE
				SIF CHOSECOM(LCOUNT, ARG)
					RETURNF 1
			ENDSELECT
		NEXT
	CASE "Ｖ逆挿入"
		FOR LCOUNT, 120, 125
			SIF CHOSECOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
	CASE "Ｖ逆挿入以外"
		FOR LCOUNT, 0, 300
			SELECTCASE LCOUNT
			CASE 120 TO 124
			CASEELSE
				SIF CHOSECOM(LCOUNT, ARG)
					RETURNF 1
			ENDSELECT
		NEXT
	CASE "Ａ逆挿入"
		FOR LCOUNT, 125, 130
			SIF CHOSECOM(LCOUNT, ARG)
				RETURNF 1
		NEXT
	CASE "Ａ逆挿入以外"
		FOR LCOUNT, 0, 300
			SELECTCASE LCOUNT
			CASE 125 TO 129
			CASEELSE
				SIF CHOSECOM(LCOUNT, ARG)
					RETURNF 1
			ENDSELECT
		NEXT
	CASE "アナル愛撫以外"
		FOR LCOUNT, 0, 300
			SELECTCASE LCOUNT
			CASE 2
			CASEELSE
				SIF CHOSECOM(LCOUNT, ARG)
					RETURNF 1
			ENDSELECT
		NEXT
	CASE "アナル舐め以外"
		FOR LCOUNT, 0, 300
			SELECTCASE LCOUNT
			CASE 9
			CASEELSE
				SIF CHOSECOM(LCOUNT, ARG)
					RETURNF 1
			ENDSELECT
		NEXT
	;以下はTRAINNAME
	CASEELSE
		SIF CHOSECOM(GETNUM(TRAINNAME, LOCALS:LCOUNT2), ARG)
			RETURNF 1
	ENDSELECT
NEXT
RETURNF 0


;-------------------------------------------------
;FIRST_EVは今までに経験したイベントの記録(システム側で勝手に記録してしまう点がCEVENTとは異なる)
;-------------------------------------------------
@FIRST_EV(ARGS, ARG)
#FUNCTION
SIF ARG == 0 && TARGET
	ARG = TARGET
SIF STRCOUNT(CSTR:ARG:FIRST_EV, ARGS)
	RETURNF 1
RETURNF 0

@SET_FIRST_EV, ARGS, ARG
SIF ARG == 0 && TARGET
	ARG = TARGET
SIF STRCOUNT(CSTR:ARG:FIRST_EV, ARGS)
	RETURN 0
CSTR:ARG:FIRST_EV = %CSTR:ARG:FIRST_EV%%ARGS%/


;-------------------------------------------------
;@CEVENTはキャラクターごとの各種イベントの記録を参照する関数。経験済みなら１を、未経験なら０を返す
;セットする時には@SET_CEVENTを用い、消去する際には@DEL_CEVENTを使う
;記録にはCSTR:CEVENTを使い、CSTR:CEVENT = イベント１/イベント２/ と"/"を用いて区切る
;特殊なイベント群を作る際には、頭に"イベント名："とするのを推奨
;また、記述と操作の都合により、半角の"/"の使用は禁止
;-------------------------------------------------
@CEVENT(ARGS, ARG)
#FUNCTION
#DIM LCOUNT
#DIMS TEXT_SEARCH, 2

SIF ARG < 0
	RETURNF 0
SIF ARG == 0 && TARGET
	ARG = TARGET

;既にイベント経験済みかを調べる
TEXT_SEARCH = \/%ARGS%\/
TEXT_SEARCH:1 = \/%ARGS%：

RETURNF STRCOUNTS(@"\/%CSTR:ARG:CEVENT%", TEXT_SEARCH, TEXT_SEARCH:1)


@SET_CEVENT, ARGS, ARG
#DIM LCOUNT
#DIMS TEXT_SEARCH

SIF ARG == 0 && TARGET
	ARG = TARGET

TEXT_SEARCH = \/%ARGS%\/

;経験済みなら追加せずに終了
SIF STRCOUNT(@"\/%CSTR:ARG:CEVENT%", TEXT_SEARCH)
	RETURN 1

;経験していないなら追加
CSTR:ARG:CEVENT = %CSTR:ARG:CEVENT%%ARGS%\/


@DEL_CEVENT, ARGS, ARG
#DIM LCOUNT

SIF ARG == 0 && TARGET
	ARG = TARGET

VARSET LOCALS
;イベントごとに分解する
SPLIT CSTR:ARG:CEVENT, "/", LOCALS

;一旦CSTR:CEVENTを初期化
CSTR:ARG:CEVENT = 

FOR LCOUNT, 0, 100
	SELECTCASE LOCALS:LCOUNT
	;消す対称or空文字
	CASE "", ARGS
		CONTINUE
	CASEELSE
		CSTR:ARG:CEVENT += @"%LOCALS:LCOUNT%\/"
	ENDSELECT
NEXT

;-------------------------------------------------
;@CEVENTS(ARGS, ARG)はキャラARGが経験したイベント ARGS = イベント名：内容 の"内容"部分を文字列で返す関数
;当然のことながら複数記録されてるイベント群に使うには適していない
;-------------------------------------------------
@CEVENTS(ARGS, ARG)
#FUNCTIONS
#DIM LCOUNT

VARSET LOCALS

SIF ARG < 0
	RETURNF LOCALS
SIF ARG == 0 && TARGET
	ARG = TARGET

ARGS = %ARGS%：

;イベントごとに分解する
SPLIT CSTR:ARG:CEVENT, "/", LOCALS

FOR LCOUNT, 0, 100
	SIF LOCALS:LCOUNT == ""
		BREAK
	;イベント群ARGSでないならCONTINUE
	SIF STRCOUNT(LOCALS:LCOUNT, ARGS) == 0
		CONTINUE

	;イベント名：内容 となっているので"内容"部分を抜き出す
	LOCALS:LCOUNT = %SUBSTRING(LOCALS:LCOUNT, STRLENS(ARGS), -1)%

	;特殊な処理があるならここで
	IF STRCOUNT(LOCALS:LCOUNT, "NAME_PLAYER")
		LOCALS:LCOUNT = %NAME:PLAYER%%SUBSTRING(LOCALS:LCOUNT, STRLENS("NAME_PLAYER"), -1)%
	ELSEIF STRCOUNT(LOCALS:LCOUNT, "NAME_TARGET")
		LOCALS:LCOUNT = %NAME:TARGET%%SUBSTRING(LOCALS:LCOUNT, STRLENS("NAME_TARGET"), -1)%
	ELSEIF STRCOUNT(LOCALS:LCOUNT, "NAME_MASTER")
		LOCALS:LCOUNT = %NAME:MASTER%%SUBSTRING(LOCALS:LCOUNT, STRLENS("NAME_MASTER"), -1)%
	ELSEIF ASSI && STRCOUNT(LOCALS:LCOUNT, "NAME_ASSI")
		LOCALS:LCOUNT = %NAME:ASSI%%SUBSTRING(LOCALS:LCOUNT, STRLENS("NAME_ASSI"), -1)%
	ENDIF

	RETURNF LOCALS:LCOUNT
NEXT

LOCALS = 
RETURNF LOCALS

;-------------------------------------------------
;イベント群ARGSを全て消去するのに使う
;例えば、ARGS = 助手 とすると、"助手："で始まる全てのイベント記録を取り除く
;-------------------------------------------------
@DEL_CEVENT_GROUP, ARGS, ARG
#DIM LCOUNT
#DIMS MEMOS

SIF ARG == 0 && TARGET
	ARG = TARGET

ARGS = %ARGS%：

VARSET LOCALS
;イベントごとに分解する
SPLIT CSTR:ARG:CEVENT, "/", LOCALS

;一旦CSTR:CEVENTを初期化
CSTR:ARG:CEVENT = 

FOR LCOUNT, 0, 100
	SIF LOCALS:LCOUNT == ""
		BREAK

	;イベント群ARGSならCONTINUEさせて、文字列を組み込まない
	;（LOCALS:LCOUNTの先頭からARGSの長さ分だけ抜き出したものがARGSならLOCALS:LCOUNTはイベント群ARGS）
	SIF SUBSTRING(LOCALS:LCOUNT, 0, STRLENS(ARGS) ) == ARGS
		CONTINUE

	;イベント群ARGSでないなら戻す
	CSTR:ARG:CEVENT = %CSTR:ARG:CEVENT%%LOCALS:LCOUNT%/
NEXT

;-------------------------------------------------
;@DEL_CEVENT_GROUPのCSTR汎用版
;CSTR:(ARG:1)に影響する
;-------------------------------------------------
@DEL_CSTR_GROUP, ARGS, ARG, ARG:1
#DIM LCOUNT

SIF ARG == 0 && TARGET
	ARG = TARGET

ARGS = %ARGS%：

VARSET LOCALS
;イベントごとに分解する
SPLIT CSTR:ARG:(ARG:1), "/", LOCALS

;一旦CSTR:(ARG:1)を初期化
CSTR:ARG:(ARG:1) = 

FOR LCOUNT, 0, 100
	SIF LOCALS:LCOUNT == ""
		BREAK

	;イベント群ARGSならCONTINUEさせて、文字列を組み込まない
	;（LOCALS:LCOUNTの先頭からARGSの長さ分だけ抜き出したものがARGSならLOCALS:LCOUNTはイベント群ARGS）
	SIF SUBSTRING(LOCALS:LCOUNT, 0, STRLENS(ARGS) ) == ARGS
		CONTINUE

	;イベント群ARGSでないなら戻す
	CSTR:ARG:(ARG:1) = %CSTR:ARG:(ARG:1)%%LOCALS:LCOUNT%/
NEXT


;-------------------------------------------------
;@DEL_CEVENT_GROUPの特殊版
;ARGSに応じて複雑な処理をさせたい場合にはこっち
;-------------------------------------------------
@DEL_CEVENT_GROUP_EX, ARGS, ARG
#DIM LCOUNT

SIF ARG == 0 && TARGET
	ARG = TARGET

ARGS = %ARGS%：

VARSET LOCALS
;イベントごとに分解する
SPLIT CSTR:ARG:CEVENT, "/", LOCALS

;一旦CSTR:CEVENTを初期化
CSTR:ARG:CEVENT = 

FOR LCOUNT, 0, 100
	SIF LOCALS:LCOUNT == ""
		BREAK

	;イベント群ARGSに応じた種類ならCONTINUEさせて、文字列を組み込まない
	;記述が楽だから使ってるけど若干例外が発生する処理です実は。でもまぁ私が見ている限りは問題起きないはず
	SELECTCASE ARGS
	CASE "人称全部："
		SIF STRCOUNTS(LOCALS:LCOUNT, "一人称：", "一人称かな：", "一人称主人：", "一人称主人かな：", "一人称助手：", "一人称助手かな：")
			CONTINUE
		SIF STRCOUNTS(LOCALS:LCOUNT, "二人称：", "二人称かな：", "二人称主人：", "二人称主人かな：", "二人称助手：", "二人称助手かな：")
			CONTINUE
	CASE "一人称全部："
		SIF STRCOUNTS(LOCALS:LCOUNT, "一人称：", "一人称かな：", "一人称主人：", "一人称主人かな：", "一人称助手：", "一人称助手かな：")
			CONTINUE
	CASE "一人称："
		SIF STRCOUNTS(LOCALS:LCOUNT, "一人称：", "一人称かな：")
			CONTINUE
	CASE "一人称主人："
		SIF STRCOUNTS(LOCALS:LCOUNT, "一人称主人：", "一人称主人かな：")
			CONTINUE
	CASE "一人称助手："
		SIF STRCOUNTS(LOCALS:LCOUNT, "一人称助手：", "一人称助手かな：")
			CONTINUE
	CASE "二人称全部："
		SIF STRCOUNTS(LOCALS:LCOUNT, "二人称：", "二人称かな：", "二人称主人：", "二人称主人かな：", "二人称助手：", "二人称助手かな：")
			CONTINUE
	CASE "二人称："
		SIF STRCOUNTS(LOCALS:LCOUNT, "二人称：", "二人称かな：")
			CONTINUE
	CASE "二人称主人："
		SIF STRCOUNTS(LOCALS:LCOUNT, "二人称主人：", "二人称主人かな：")
			CONTINUE
	CASE "二人称助手："
		SIF STRCOUNTS(LOCALS:LCOUNT, "二人称助手：", "二人称助手かな：")
			CONTINUE
	CASEELSE
		;その他の場合には@DEL_CEVENT_GROUPと同じ挙動をする
		SIF SUBSTRING(LOCALS:LCOUNT, 0, STRLENS(ARGS) ) == ARGS
			CONTINUE
	ENDSELECT

	;問題ない部分は戻す
	CSTR:ARG:CEVENT = %CSTR:ARG:CEVENT%%LOCALS:LCOUNT%/
NEXT


;-------------------------------------------------
;PREVPLAYは前のターンのインサート状況など
;-------------------------------------------------
@PREVPLAY(ARGS, ARG)
#FUNCTION

SIF ARG < 0
	RETURNF 0
SIF ARG == 0 && TARGET
	ARG = TARGET

SELECTCASE ARGS
CASE "インサート"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 0) || GETBIT(TCVAR:ARG:PREVPLAY, 1) || GETBIT(TCVAR:ARG:PREVPLAY, 2)
		RETURNF 1
CASE "Ｖインサート"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 0)
		RETURNF 1
CASE "Ａインサート"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 1)
		RETURNF 1
CASE "正常位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 3)
		RETURNF 1
CASE "Ｖ正常位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 3) && GETBIT(TCVAR:ARG:PREVPLAY, 0)
		RETURNF 1
CASE "Ａ正常位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 3) && GETBIT(TCVAR:ARG:PREVPLAY, 1)
		RETURNF 1
CASE "後背位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 4)
		RETURNF 1
CASE "Ｖ後背位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 4) && GETBIT(TCVAR:ARG:PREVPLAY, 0)
		RETURNF 1
CASE "Ａ後背位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 4) && GETBIT(TCVAR:ARG:PREVPLAY, 1)
		RETURNF 1
CASE "屈曲位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 5)
		RETURNF 1
CASE "Ｖ屈曲位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 5) && GETBIT(TCVAR:ARG:PREVPLAY, 0)
		RETURNF 1
CASE "Ａ屈曲位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 5) && GETBIT(TCVAR:ARG:PREVPLAY, 1)
		RETURNF 1
CASE "対面座位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 6)
		RETURNF 1
CASE "Ｖ対面座位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 6) && GETBIT(TCVAR:ARG:PREVPLAY, 0)
		RETURNF 1
CASE "Ａ対面座位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 6) && GETBIT(TCVAR:ARG:PREVPLAY, 1)
		RETURNF 1
CASE "背面座位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 7)
		RETURNF 1
CASE "Ｖ背面座位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 7) && GETBIT(TCVAR:ARG:PREVPLAY, 0)
		RETURNF 1
CASE "Ａ背面座位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 7) && GETBIT(TCVAR:ARG:PREVPLAY, 1)
		RETURNF 1
CASE "騎乗位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 8)
		RETURNF 1
CASE "Ｖ騎乗位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 8) && GETBIT(TCVAR:ARG:PREVPLAY, 0)
		RETURNF 1
CASE "Ａ騎乗位"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 8) && GETBIT(TCVAR:ARG:PREVPLAY, 1)
		RETURNF 1

CASE "挿入中"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 10) || GETBIT(TCVAR:ARG:PREVPLAY, 11) || GETBIT(TCVAR:ARG:PREVPLAY, 12)
		RETURNF 1
CASE "Ｖ挿入中"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 10)
		RETURNF 1
CASE "Ａ挿入中"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 11)
		RETURNF 1
CASE "口に挿入中"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 13)
		RETURNF 1

CASE "今回初挿入"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 14)
		RETURNF 1
CASE "Ｇスポ責め"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 15)
		RETURNF 1
CASE "挿入継続"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 16)
		RETURNF 1

CASE "結腸責め"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 18)
		RETURNF 1
CASE "フェラチオ"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 19)
		RETURNF 1
CASE "絶頂"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 20)
		RETURNF 1
CASE "放尿"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 21)
		RETURNF 1
CASE "母乳飲み"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 22)
		RETURNF 1
CASE "ゴム内射精"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 23)
		RETURNF 1
CASE "中出しした"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 24)
		RETURNF 1
CASE "生中出しした"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 23)
		RETURNF 0
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 24)
		RETURNF 1
CASE "排泄"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 25)
		RETURNF 1

CASE "飲尿"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 30)
		RETURNF 1
CASE "尿飲み干し"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 31)
		RETURNF 1
CASE "膣内浴尿"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 32)
		RETURNF 1
CASE "子宮内浴尿"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 33)
		RETURNF 1
CASE "温泉浣腸"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 34)
		RETURNF 1
CASE "乳内浴尿"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 35)
		RETURNF 1
CASE "膀胱内浴尿"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 36)
		RETURNF 1

CASE "お掃除フェラ"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 40)
		RETURNF 1
CASE "Ａお掃除フェラ"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 41)
		RETURNF 1
CASE "尿お掃除フェラ"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 42)
		RETURNF 1
CASE "恥垢お掃除フェラ"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 43)
		RETURNF 1

CASE "お掃除クンニ"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 45)
		RETURNF 1
CASE "精液お掃除クンニ"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 46)
		RETURNF 1
CASE "恥垢お掃除クンニ"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 47)
		RETURNF 1
CASE "おしっこお掃除クンニ"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 48)
		RETURNF 1

CASE "お掃除Ａ舐め"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 50)
		RETURNF 1

CASE "ペニスキス"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 51)
		RETURNF 1
CASE "見せ槍"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 52)
		RETURNF 1
CASE "万謝の口付け"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 53)
		RETURNF 1
CASE "セルフ顔射"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 54)
		RETURNF 1
CASE "セルフ口内射精"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 55)
		RETURNF 1
CASE "ディープスロート"
	SIF GETBIT(TCVAR:ARG:PREVPLAY, 56)
		RETURNF 1
ENDSELECT
RETURNF 0


@SET_PREVPLAY, ARG
#DIM MEMO_TEQUIP

MEMO_TEQUIP = TEQUIP:ARG:体位
SIF TEQUIP:ARG:体位 == 0
	TEQUIP:ARG:体位 = TCVAR:ARG:体位メモ

LOCAL = 0
IF INSERT("インサート", ARG)
	;挿入継続フラグ
	SETBIT LOCAL, 16

	SIF INSERT("Ｖインサート", ARG)
		SETBIT LOCAL, 0
	SIF INSERT("Ａインサート", ARG)
		SETBIT LOCAL, 1

	SIF INSERT("正常位", ARG)
		SETBIT LOCAL, 3
	SIF INSERT("後背位", ARG)
		SETBIT LOCAL, 4
	SIF INSERT("屈曲位", ARG)
		SETBIT LOCAL, 5
	SIF INSERT("対面座位", ARG)
		SETBIT LOCAL, 6
	SIF INSERT("背面座位", ARG)
		SETBIT LOCAL, 7
	SIF INSERT("騎乗位", ARG)
		SETBIT LOCAL, 8
ENDIF

SIF INSERT("Ｖ挿入中", ARG)
	SETBIT LOCAL, 10
SIF INSERT("Ａ挿入中", ARG)
	SETBIT LOCAL, 11

SELECTCASE ARG
CASE PLAYER
	SELECTCASE SELECTCOM
	CASE 60 TO 69
		SETBIT LOCAL, 10
	CASE 70 TO 79
		SETBIT LOCAL, 11
	CASE 83 TO 88
		SETBIT LOCAL, 12
	CASE 120 TO 124
		SETBIT LOCAL, 0
	CASE 125 TO 129
		SETBIT LOCAL, 1
	ENDSELECT

	SELECTCASE SELECTCOM
	CASE 120, 125
		SETBIT LOCAL, 2
	CASE 121, 126
		SETBIT LOCAL, 3
	CASE 122, 127
		SETBIT LOCAL, 8
	ENDSELECT
CASE TARGET
	SELECTCASE SELECTCOM
	CASE 60 TO 69
		SETBIT LOCAL, 0
	CASE 70 TO 79
		SETBIT LOCAL, 1
	CASE 83 TO 88
		SETBIT LOCAL, 2
	CASE 120 TO 124
		SETBIT LOCAL, 10
	CASE 125 TO 129
		SETBIT LOCAL, 11
	ENDSELECT

	SELECTCASE SELECTCOM
	CASE 60, 70, 83
		SETBIT LOCAL, 3
	CASE 61, 71, 84
		SETBIT LOCAL, 4
	CASE 62, 72, 85
		SETBIT LOCAL, 5
	CASE 63, 73, 86
		SETBIT LOCAL, 6
	CASE 64, 74, 87
		SETBIT LOCAL, 7
	CASE 65, 75, 88
		SETBIT LOCAL, 8
	ENDSELECT

	;Gスポ刺激
	SIF CHECK_COM("Ｇスポ責め") || SELECTCOM == 66
		SETBIT LOCAL, 15
ENDSELECT

SIF CHOSECOMS("挿入", ARG) == 0 && GETBITS(LOCAL, 0, 2)
	SETBIT LOCAL, 14
SIF COND("結腸責めフラグ", ARG)
	SETBIT LOCAL, 18
SIF COND("フェラチオフラグ", ARG)
	SETBIT LOCAL, 19

SIF COND("絶頂", ARG)
	SETBIT LOCAL, 20
SIF NOWEX:ARG:放尿 || NOWEX:ARG:絶頂お漏らし
	SETBIT LOCAL, 21
SIF COND("母乳飲みフラグ", ARG)
	SETBIT LOCAL, 22
SIF COND("ゴム内射精フラグ", ARG)
	SETBIT LOCAL, 23
SIF SHOOT("中出し", ARG) || SHOOT("自分以外に中出し", ARG)
	SETBIT LOCAL, 24
SIF NOWEX:排泄
	SETBIT LOCAL, 25


SIF COND("飲尿フラグ", ARG)
	SETBIT LOCAL, 30
SIF COND("尿飲み干しフラグ", ARG)
	SETBIT LOCAL, 31
SIF COND("膣内浴尿フラグ", ARG)
	SETBIT LOCAL, 32
SIF COND("子宮内浴尿フラグ", ARG)
	SETBIT LOCAL, 33
SIF COND("温泉浣腸フラグ", ARG)
	SETBIT LOCAL, 34
SIF COND("乳内浴尿フラグ", ARG)
	SETBIT LOCAL, 35
SIF COND("膀胱内浴尿フラグ", ARG)
	SETBIT LOCAL, 36

SIF COND("お掃除フェラフラグ", ARG)
	SETBIT LOCAL, 40
;お掃除フェラフラグも立っているので、Ａお掃除フェラを行った場合には40bitもＯＮになる
SIF COND("Ａお掃除フェラフラグ", ARG)
	SETBIT LOCAL, 41
SIF COND("尿お掃除フェラフラグ", ARG)
	SETBIT LOCAL, 42
SIF COND("恥垢お掃除フェラフラグ", ARG)
	SETBIT LOCAL, 43

SIF COND("お掃除クンニフラグ", ARG)
	SETBIT LOCAL, 45
SIF COND("おしっこお掃除クンニフラグ", ARG)
	SETBIT LOCAL, 46
SIF COND("恥垢お掃除クンニフラグ", ARG)
	SETBIT LOCAL, 47

SIF COND("お掃除Ａ舐めフラグ", ARG)
	SETBIT LOCAL, 50

SIF COND("ペニスキスフラグ", ARG)
	SETBIT LOCAL, 51
SIF COND("見せ槍フラグ", ARG)
	SETBIT LOCAL, 52
SIF COND("万謝の口付けフラグ", ARG)
	SETBIT LOCAL, 53
SIF COND("セルフ顔射フラグ", ARG)
	SETBIT LOCAL, 54
SIF COND("セルフ口内射精フラグ", ARG)
	SETBIT LOCAL, 55
SIF TEQUIP:ARG:ディープスロート
	SETBIT LOCAL, 56
TCVAR:ARG:PREVPLAY = LOCAL

TEQUIP:ARG:体位 = MEMO_TEQUIP

